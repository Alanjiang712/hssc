# Generated by Django 3.2.6 on 2022-04-20 11:33

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('icpc', '0001_initial'),
        ('core', '0011_auto_20220417_1938'),
    ]

    operations = [
        migrations.CreateModel(
            name='BuessinessForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, null=True, verbose_name='名称')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='name')),
                ('hssc_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='hsscID')),
                ('pym', models.CharField(blank=True, max_length=255, null=True, verbose_name='拼音码')),
                ('description', models.TextField(blank=True, max_length=255, null=True, verbose_name='表单说明')),
                ('meta_data', models.JSONField(blank=True, null=True, verbose_name='元数据')),
                ('name_icpc', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='icpc.icpc', verbose_name='ICPC编码')),
            ],
            options={
                'verbose_name': '业务表单',
                'verbose_name_plural': '业务表单',
            },
        ),
        migrations.CreateModel(
            name='BuessinessFormsSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, null=True, verbose_name='名称')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='name')),
                ('hssc_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='hsscID')),
                ('is_list', models.BooleanField(default=False, verbose_name='列表样式')),
                ('buessiness_form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.buessinessform', verbose_name='表单')),
            ],
            options={
                'verbose_name': '作业表单设置',
                'verbose_name_plural': '作业表单设置',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ManagedEntity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, null=True, verbose_name='名称')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='name')),
                ('hssc_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='hsscID')),
                ('pym', models.CharField(blank=True, max_length=255, null=True, verbose_name='拼音码')),
                ('app_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='所属app名')),
                ('model_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='模型名')),
                ('base_form', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.buessinessform', verbose_name='基础表单')),
            ],
            options={
                'verbose_name': '业务管理实体',
                'verbose_name_plural': '业务管理实体',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, null=True, verbose_name='名称')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='name')),
                ('hssc_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='hsscID')),
                ('pym', models.CharField(blank=True, max_length=255, null=True, verbose_name='拼音码')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='岗位描述')),
            ],
            options={
                'verbose_name': '业务岗位',
                'verbose_name_plural': '业务岗位',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ServicePackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, null=True, verbose_name='名称')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='name')),
                ('hssc_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='hsscID')),
                ('pym', models.CharField(blank=True, max_length=255, null=True, verbose_name='拼音码')),
                ('begin_time_setting', models.PositiveSmallIntegerField(choices=[(0, '人工指定'), (1, '出生日期')], default=0, verbose_name='开始时间参考')),
                ('duration', models.DurationField(blank=True, help_text='例如：3 days, 22:00:00', null=True, verbose_name='持续周期')),
                ('execution_time_frame', models.DurationField(blank=True, null=True, verbose_name='执行时限')),
                ('awaiting_time_frame', models.DurationField(blank=True, null=True, verbose_name='等待执行时限')),
                ('name_icpc', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='icpc.icpc', verbose_name='ICPC编码')),
            ],
            options={
                'verbose_name': '服务包',
                'verbose_name_plural': '服务包',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ServicePackageDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, null=True, verbose_name='名称')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='name')),
                ('hssc_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='hsscID')),
                ('pym', models.CharField(blank=True, max_length=255, null=True, verbose_name='拼音码')),
                ('cycle_option', models.PositiveSmallIntegerField(blank=True, choices=[(0, '总共'), (1, '每天'), (2, '每周'), (3, '每月'), (4, '每季'), (5, '每年')], default=0, null=True, verbose_name='周期')),
                ('cycle_times', models.PositiveSmallIntegerField(blank=True, default=1, null=True, verbose_name='次数')),
                ('reference_start_tim', models.DurationField(blank=True, help_text='例如：3 days, 22:00:00', null=True, verbose_name='参考起始时间')),
                ('duration', models.DurationField(blank=True, help_text='例如：3 days, 22:00:00', null=True, verbose_name='持续周期')),
                ('check_awaiting_timeout', models.BooleanField(default=False, verbose_name='检查等待超时')),
            ],
            options={
                'verbose_name': '服务内容模板',
                'verbose_name_plural': '服务内容模板',
                'ordering': ['id'],
            },
        ),
        migrations.RemoveField(
            model_name='event_instructions',
            name='event',
        ),
        migrations.RemoveField(
            model_name='event_instructions',
            name='instruction',
        ),
        migrations.RemoveField(
            model_name='operation',
            name='group',
        ),
        migrations.RemoveField(
            model_name='service',
            name='first_operation',
        ),
        migrations.AddField(
            model_name='service',
            name='awaiting_time_frame',
            field=models.DurationField(blank=True, null=True, verbose_name='等待执行时限'),
        ),
        migrations.AddField(
            model_name='service',
            name='cost',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True, verbose_name='成本'),
        ),
        migrations.AddField(
            model_name='service',
            name='enable_queue_counter',
            field=models.BooleanField(default=True, verbose_name='显示队列数量'),
        ),
        migrations.AddField(
            model_name='service',
            name='execution_time_frame',
            field=models.DurationField(blank=True, null=True, verbose_name='完成时限'),
        ),
        migrations.AddField(
            model_name='service',
            name='frequency',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='频次'),
        ),
        migrations.AddField(
            model_name='service',
            name='history_services_display',
            field=models.PositiveBigIntegerField(blank=True, choices=[(0, '所有历史服务'), (1, '当日服务')], default=0, null=True, verbose_name='历史服务默认显示'),
        ),
        migrations.AddField(
            model_name='service',
            name='hssc_id',
            field=models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='hsscID'),
        ),
        migrations.AddField(
            model_name='service',
            name='load_feedback',
            field=models.BooleanField(default=False, verbose_name='是否反馈负荷数量'),
        ),
        migrations.AddField(
            model_name='service',
            name='name_icpc',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='icpc.icpc', verbose_name='ICPC编码'),
        ),
        migrations.AddField(
            model_name='service',
            name='not_suitable',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='不适用对象'),
        ),
        migrations.AddField(
            model_name='service',
            name='priority',
            field=models.PositiveSmallIntegerField(choices=[(0, '0级'), (1, '紧急'), (2, '优先'), (3, '一般')], default=3, verbose_name='优先级'),
        ),
        migrations.AddField(
            model_name='service',
            name='pym',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='拼音码'),
        ),
        migrations.AddField(
            model_name='service',
            name='resource_devices',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='配套设备'),
        ),
        migrations.AddField(
            model_name='service',
            name='resource_knowledge',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='服务知识'),
        ),
        migrations.AddField(
            model_name='service',
            name='resource_materials',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='配套物料'),
        ),
        migrations.AddField(
            model_name='service',
            name='script',
            field=models.TextField(blank=True, help_text="script['views'] , script['urls'], script['templates']", null=True, verbose_name='运行时脚本'),
        ),
        migrations.AddField(
            model_name='service',
            name='suppliers',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='供应商'),
        ),
        migrations.AddField(
            model_name='service',
            name='working_hours',
            field=models.DurationField(blank=True, null=True, verbose_name='工时'),
        ),
        migrations.AlterField(
            model_name='service',
            name='label',
            field=models.CharField(max_length=255, null=True, verbose_name='名称'),
        ),
        migrations.AlterField(
            model_name='service',
            name='name',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='name'),
        ),
        migrations.AlterField(
            model_name='staff',
            name='slug',
            field=models.SlugField(blank=True, max_length=250, null=True, verbose_name='slug'),
        ),
        migrations.DeleteModel(
            name='Event',
        ),
        migrations.DeleteModel(
            name='Event_instructions',
        ),
        migrations.DeleteModel(
            name='Instruction',
        ),
        migrations.DeleteModel(
            name='Operation',
        ),
        migrations.AddField(
            model_name='servicepackagedetail',
            name='service',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.service', verbose_name='服务项目'),
        ),
        migrations.AddField(
            model_name='servicepackagedetail',
            name='servicepackage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.servicepackage', verbose_name='服务包'),
        ),
        migrations.AddField(
            model_name='servicepackage',
            name='services',
            field=models.ManyToManyField(through='core.ServicePackageDetail', to='core.Service', verbose_name='服务项目'),
        ),
        migrations.AddField(
            model_name='buessinessformssetting',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.service', verbose_name='作业'),
        ),
        migrations.AddField(
            model_name='service',
            name='buessiness_forms',
            field=models.ManyToManyField(through='core.BuessinessFormsSetting', to='core.BuessinessForm', verbose_name='作业表单'),
        ),
        migrations.AddField(
            model_name='service',
            name='group',
            field=models.ManyToManyField(blank=True, to='core.Role', verbose_name='服务岗位'),
        ),
        migrations.AddField(
            model_name='service',
            name='managed_entity',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.managedentity', verbose_name='管理实体'),
        ),
        migrations.AlterField(
            model_name='operationproc',
            name='group',
            field=models.ManyToManyField(blank=True, to='core.Role', verbose_name='角色组'),
        ),
        migrations.AlterField(
            model_name='staff',
            name='role',
            field=models.ManyToManyField(related_name='staff_role', to='core.Role', verbose_name='角色'),
        ),
    ]
