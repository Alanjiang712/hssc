{
    "role": [
        {
            "label": "健康管理师",
            "name": "jian_kang_guan_li_shi",
            "hssc_id": "de18f0fc-9aa1-11ec-bde1-8a6e55faf877",
            "pym": "jkgls",
            "description": null
        },
        {
            "label": "护士",
            "name": "hu_shi",
            "hssc_id": "de194c50-9aa1-11ec-bde1-8a6e55faf877",
            "pym": "hs",
            "description": null
        },
        {
            "label": "医生助理",
            "name": "yi_sheng_zhu_li",
            "hssc_id": "de1992d2-9aa1-11ec-bde1-8a6e55faf877",
            "pym": "yszl",
            "description": null
        },
        {
            "label": "医生",
            "name": "yi_sheng",
            "hssc_id": "de19d6a2-9aa1-11ec-bde1-8a6e55faf877",
            "pym": "ys",
            "description": null
        },
        {
            "label": "质量管理",
            "name": "zhi_liang_guan_li",
            "hssc_id": "de1a253a-9aa1-11ec-bde1-8a6e55faf877",
            "pym": "zlgl",
            "description": null
        },
        {
            "label": "药士",
            "name": "yao_shi",
            "hssc_id": "de1a6f7c-9aa1-11ec-bde1-8a6e55faf877",
            "pym": "ys",
            "description": null
        },
        {
            "label": "药剂师",
            "name": "yao_ji_shi",
            "hssc_id": "de1ab716-9aa1-11ec-bde1-8a6e55faf877",
            "pym": "yjs",
            "description": null
        },
        {
            "label": "公卫",
            "name": "gong_wei",
            "hssc_id": "de1b05cc-9aa1-11ec-bde1-8a6e55faf877",
            "pym": "gw",
            "description": null
        },
        {
            "label": "管理者",
            "name": "guan_li_zhe",
            "hssc_id": "de1b4cc6-9aa1-11ec-bde1-8a6e55faf877",
            "pym": "glz",
            "description": null
        },
        {
            "label": "影像医师",
            "name": "ying_xiang_yi_shi",
            "hssc_id": "de1b9046-9aa1-11ec-bde1-8a6e55faf877",
            "pym": "yxys",
            "description": null
        },
        {
            "label": "康复理疗师",
            "name": "kang_fu_li_liao_shi",
            "hssc_id": "de1bcda4-9aa1-11ec-bde1-8a6e55faf877",
            "pym": "kflls",
            "description": null
        },
        {
            "label": "中医师",
            "name": "zhong_yi_shi",
            "hssc_id": "de1c1052-9aa1-11ec-bde1-8a6e55faf877",
            "pym": "zys",
            "description": null
        },
        {
            "label": "患者",
            "name": "huan_zhe",
            "hssc_id": "de1c5a4e-9aa1-11ec-bde1-8a6e55faf877",
            "pym": "hz",
            "description": null
        },
        {
            "label": "患者家属",
            "name": "huan_zhe_jia_shu",
            "hssc_id": "de1ca0c6-9aa1-11ec-bde1-8a6e55faf877",
            "pym": "hzjs",
            "description": null
        },
        {
            "label": "检验师",
            "name": "jian_yan_shi",
            "hssc_id": "de1ce450-9aa1-11ec-bde1-8a6e55faf877",
            "pym": "jys",
            "description": null
        },
        {
            "label": "系统管理员",
            "name": "xi_tong_guan_li_yuan",
            "hssc_id": "de1d24ec-9aa1-11ec-bde1-8a6e55faf877",
            "pym": "xtgly",
            "description": null
        },
        {
            "label": "供应商",
            "name": "gong_ying_shang",
            "hssc_id": "de1d6952-9aa1-11ec-bde1-8a6e55faf877",
            "pym": "gys",
            "description": null
        },
        {
            "label": "保险人员",
            "name": "bao_xian_ren_yuan",
            "hssc_id": "de1daa3e-9aa1-11ec-bde1-8a6e55faf877",
            "pym": "bxry",
            "description": null
        }
    ],
    "buessinessform": [
        {
            "label": "院外咨询",
            "name": "A6201",
            "hssc_id": "0c89031c-9e23-11ec-aa2c-fe35a7065cdd",
            "pym": "ywzx",
            "name_icpc": "A6201",
            "description": null,
            "meta_data": "{\n    \"name\": \"A6201\",\n    \"label\": \"院外咨询\",\n    \"hssc_id\": \"0c89031c-9e23-11ec-aa2c-fe35a7065cdd\",\n    \"fields\": [\n        {\n            \"name\": \"characterfield_supplementary_description_of_the_condition\",\n            \"label\": \"病情补充描述\",\n            \"hssc_id\": \"de9ad1a8-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"relatedfield_symptom_list\",\n            \"label\": \"症状\",\n            \"hssc_id\": \"deb93f26-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Icpc3_symptoms_and_problems\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"boolfield_chang_yong_zheng_zhuang\",\n            \"label\": \"常用症状\",\n            \"hssc_id\": \"1287193a-a52a-11ec-a478-2ec403f6c47b\",\n            \"type\": \"Chang_yong_zheng_zhuang\",\n            \"app_label\": \"\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class A6201(HsscFormModel):\\n    characterfield_supplementary_description_of_the_condition = models.CharField(max_length=255, null=True, blank=True, verbose_name='病情补充描述')\\n    relatedfield_symptom_list = models.ManyToManyField(Icpc3_symptoms_and_problems, related_name='icpc3_symptoms_and_problems_for_relatedfield_symptom_list_A6201', verbose_name='症状')\\n    boolfield_chang_yong_zheng_zhuang = models.ManyToManyField(Chang_yong_zheng_zhuang, related_name='chang_yong_zheng_zhuang_for_boolfield_chang_yong_zheng_zhuang_A6201', verbose_name='常用症状')\\n    class Meta:\\n        verbose_name = '院外咨询'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('A6201_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('A6201_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass A6201Admin(HsscFormAdmin):\\n    autocomplete_fields = [\\\"relatedfield_symptom_list\\\", \\\"boolfield_chang_yong_zheng_zhuang\\\", ]\\nadmin.site.register(A6201, A6201Admin)\\nclinic_site.register(A6201, A6201Admin)\\n\", \"forms\": \"\\nclass A6201_ModelForm(ModelForm):\\n    class Meta:\\n        model = A6201\\n        fields = ['characterfield_supplementary_description_of_the_condition', 'relatedfield_symptom_list', 'boolfield_chang_yong_zheng_zhuang', ]\\n        widgets = {'relatedfield_symptom_list': SelectMultiple, 'boolfield_chang_yong_zheng_zhuang': CheckboxSelectMultiple, }\\n    \"}",
            "components": [
                "de9ad1a8-9aa1-11ec-bde1-8a6e55faf877",
                "deb93f26-9aa1-11ec-bde1-8a6e55faf877",
                "1287193a-a52a-11ec-a478-2ec403f6c47b"
            ],
            "components_groups": []
        },
        {
            "label": "门诊分诊",
            "name": "A6502",
            "hssc_id": "0d1b5014-9e23-11ec-aa2c-fe35a7065cdd",
            "pym": "mzfz",
            "name_icpc": "A6502",
            "description": null,
            "meta_data": "{\n    \"name\": \"A6502\",\n    \"label\": \"门诊分诊\",\n    \"hssc_id\": \"0d1b5014-9e23-11ec-aa2c-fe35a7065cdd\",\n    \"fields\": [\n        {\n            \"name\": \"boolfield_qian_dao_que_ren\",\n            \"label\": \"签到确认\",\n            \"hssc_id\": \"98dbd7f4-a52b-11ec-9b14-2ec403f6c47b\",\n            \"type\": \"Qian_dao_que_ren\",\n            \"app_label\": \"\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class A6502(HsscFormModel):\\n    boolfield_qian_dao_que_ren = models.ForeignKey(Qian_dao_que_ren, related_name='qian_dao_que_ren_for_boolfield_qian_dao_que_ren_A6502', on_delete=models.CASCADE, null=True, blank=True, verbose_name='签到确认')\\n    class Meta:\\n        verbose_name = '门诊分诊'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('A6502_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('A6502_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass A6502Admin(HsscFormAdmin):\\n    autocomplete_fields = [\\\"boolfield_qian_dao_que_ren\\\", ]\\nadmin.site.register(A6502, A6502Admin)\\nclinic_site.register(A6502, A6502Admin)\\n\", \"forms\": \"\\nclass A6502_ModelForm(ModelForm):\\n    class Meta:\\n        model = A6502\\n        fields = ['boolfield_qian_dao_que_ren', ]\\n        widgets = {'boolfield_qian_dao_que_ren': RadioSelect, }\\n    \"}",
            "components": [
                "98dbd7f4-a52b-11ec-9b14-2ec403f6c47b"
            ],
            "components_groups": []
        },
        {
            "label": "疾病史",
            "name": "A6204",
            "hssc_id": "0ca96526-9e23-11ec-aa2c-fe35a7065cdd",
            "pym": "jbs",
            "name_icpc": "A6204",
            "description": null,
            "meta_data": "{\n    \"name\": \"A6204\",\n    \"label\": \"疾病史\",\n    \"hssc_id\": \"0ca96526-9e23-11ec-aa2c-fe35a7065cdd\",\n    \"fields\": [\n        {\n            \"name\": \"datetimefield_time_of_diagnosis\",\n            \"label\": \"确诊时间\",\n            \"hssc_id\": \"deb70576-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"datetime\"\n        },\n        {\n            \"name\": \"boolfield_ge_ren_bing_shi\",\n            \"label\": \"个人病史\",\n            \"hssc_id\": \"e2257bfc-cab2-11ec-a675-8e39d789b675\",\n            \"type\": \"Icpc5_evaluation_and_diagnoses\",\n            \"app_label\": \"\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class A6204(HsscFormModel):\\n    datetimefield_time_of_diagnosis = models.DateTimeField(null=True, blank=True, verbose_name='确诊时间')\\n    boolfield_ge_ren_bing_shi = models.ForeignKey(Icpc5_evaluation_and_diagnoses, related_name='icpc5_evaluation_and_diagnoses_for_boolfield_ge_ren_bing_shi_A6204', on_delete=models.CASCADE, null=True, blank=True, verbose_name='个人病史')\\n    class Meta:\\n        verbose_name = '疾病史'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('A6204_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('A6204_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass A6204Admin(HsscFormAdmin):\\n    autocomplete_fields = [\\\"boolfield_ge_ren_bing_shi\\\", ]\\nadmin.site.register(A6204, A6204Admin)\\nclinic_site.register(A6204, A6204Admin)\\n\", \"forms\": \"\\nclass A6204_ModelForm(ModelForm):\\n    class Meta:\\n        model = A6204\\n        fields = ['datetimefield_time_of_diagnosis', 'boolfield_ge_ren_bing_shi', ]\\n        widgets = {'boolfield_ge_ren_bing_shi': Select, }\\n    \"}",
            "components": [
                "deb70576-9aa1-11ec-bde1-8a6e55faf877",
                "e2257bfc-cab2-11ec-a675-8e39d789b675"
            ],
            "components_groups": []
        },
        {
            "label": "糖尿病一般随访",
            "name": "T6301",
            "hssc_id": "0ce866ae-9e23-11ec-aa2c-fe35a7065cdd",
            "pym": "tnbybsf",
            "name_icpc": "T6301",
            "description": null,
            "meta_data": "{\n    \"name\": \"T6301\",\n    \"label\": \"糖尿病一般随访\",\n    \"hssc_id\": \"0ce866ae-9e23-11ec-aa2c-fe35a7065cdd\",\n    \"fields\": [\n        {\n            \"name\": \"boolfield_fu_yong_pin_ci\",\n            \"label\": \"用药频次\",\n            \"hssc_id\": \"1bf942da-c5ce-11ec-b9d4-725badf7393d\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"boolfield_yao_pin_dan_wei\",\n            \"label\": \"药品单位\",\n            \"hssc_id\": \"873f9a88-c13e-11ec-b731-2617a93150cd\",\n            \"type\": \"Yao_pin_dan_wei\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"relatedfield_drug_name\",\n            \"label\": \"药品名称\",\n            \"hssc_id\": \"dec637d0-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Medicine\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"relatedfield_drinking_frequency\",\n            \"label\": \"饮酒频次\",\n            \"hssc_id\": \"decabc92-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Frequency\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"relatedfield_smoking_frequency\",\n            \"label\": \"吸烟频次\",\n            \"hssc_id\": \"decba0ee-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Frequency\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"boolfield_tang_niao_bing_zheng_zhuang\",\n            \"label\": \"糖尿病症状\",\n            \"hssc_id\": \"1cad2116-a52a-11ec-a478-2ec403f6c47b\",\n            \"type\": \"Tang_niao_bing_zheng_zhuang\",\n            \"app_label\": \"\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class T6301(HsscFormModel):\\n    boolfield_fu_yong_pin_ci = models.CharField(max_length=255, null=True, blank=True, verbose_name='用药频次')\\n    boolfield_yao_pin_dan_wei = models.ForeignKey(Yao_pin_dan_wei, related_name='yao_pin_dan_wei_for_boolfield_yao_pin_dan_wei_T6301', on_delete=models.CASCADE, null=True, blank=True, verbose_name='药品单位')\\n    relatedfield_drug_name = models.ManyToManyField(Medicine, related_name='medicine_for_relatedfield_drug_name_T6301', verbose_name='药品名称')\\n    relatedfield_drinking_frequency = models.ForeignKey(Frequency, related_name='frequency_for_relatedfield_drinking_frequency_T6301', on_delete=models.CASCADE, null=True, blank=True, verbose_name='饮酒频次')\\n    relatedfield_smoking_frequency = models.ForeignKey(Frequency, related_name='frequency_for_relatedfield_smoking_frequency_T6301', on_delete=models.CASCADE, null=True, blank=True, verbose_name='吸烟频次')\\n    boolfield_tang_niao_bing_zheng_zhuang = models.ManyToManyField(Tang_niao_bing_zheng_zhuang, related_name='tang_niao_bing_zheng_zhuang_for_boolfield_tang_niao_bing_zheng_zhuang_T6301', verbose_name='糖尿病症状')\\n    class Meta:\\n        verbose_name = '糖尿病一般随访'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('T6301_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('T6301_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass T6301Admin(HsscFormAdmin):\\n    autocomplete_fields = [\\\"boolfield_yao_pin_dan_wei\\\", \\\"relatedfield_drug_name\\\", \\\"relatedfield_drinking_frequency\\\", \\\"relatedfield_smoking_frequency\\\", \\\"boolfield_tang_niao_bing_zheng_zhuang\\\", ]\\nadmin.site.register(T6301, T6301Admin)\\nclinic_site.register(T6301, T6301Admin)\\n\", \"forms\": \"\\nclass T6301_ModelForm(ModelForm):\\n    class Meta:\\n        model = T6301\\n        fields = ['boolfield_fu_yong_pin_ci', 'boolfield_yao_pin_dan_wei', 'relatedfield_drug_name', 'relatedfield_drinking_frequency', 'relatedfield_smoking_frequency', 'boolfield_tang_niao_bing_zheng_zhuang', ]\\n        widgets = {'boolfield_yao_pin_dan_wei': Select, 'relatedfield_drug_name': SelectMultiple, 'relatedfield_drinking_frequency': RadioSelect, 'relatedfield_smoking_frequency': RadioSelect, 'boolfield_tang_niao_bing_zheng_zhuang': CheckboxSelectMultiple, }\\n    \"}",
            "components": [
                "1bf942da-c5ce-11ec-b9d4-725badf7393d",
                "873f9a88-c13e-11ec-b731-2617a93150cd",
                "dec637d0-9aa1-11ec-bde1-8a6e55faf877",
                "decabc92-9aa1-11ec-bde1-8a6e55faf877",
                "decba0ee-9aa1-11ec-bde1-8a6e55faf877",
                "1cad2116-a52a-11ec-a478-2ec403f6c47b"
            ],
            "components_groups": []
        },
        {
            "label": "医生注册",
            "name": "Z6205",
            "hssc_id": "0bbc9e76-9e23-11ec-aa2c-fe35a7065cdd",
            "pym": "yszc",
            "name_icpc": "Z6205",
            "description": null,
            "meta_data": "{\n    \"name\": \"Z6205\",\n    \"label\": \"医生注册\",\n    \"hssc_id\": \"0bbc9e76-9e23-11ec-aa2c-fe35a7065cdd\",\n    \"fields\": [\n        {\n            \"name\": \"characterfield_name\",\n            \"label\": \"姓名\",\n            \"hssc_id\": \"de9de26c-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"characterfield_gender\",\n            \"label\": \"性别\",\n            \"hssc_id\": \"de9e99dc-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"characterfield_age\",\n            \"label\": \"年龄\",\n            \"hssc_id\": \"de9f4ea4-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"characterhssc_identification_number\",\n            \"label\": \"身份证号码\",\n            \"hssc_id\": \"dea0045c-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"characterfield_contact_address\",\n            \"label\": \"联系地址\",\n            \"hssc_id\": \"dea1797c-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"characterfield_practice_qualification\",\n            \"label\": \"执业资质\",\n            \"hssc_id\": \"dea24708-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"characterfield_password_setting\",\n            \"label\": \"密码设置\",\n            \"hssc_id\": \"dea37b46-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"characterfield_confirm_password\",\n            \"label\": \"确认密码\",\n            \"hssc_id\": \"dea437ac-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"characterfield_expertise\",\n            \"label\": \"专长\",\n            \"hssc_id\": \"dea4f05c-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"characterfield_practice_time\",\n            \"label\": \"执业时间\",\n            \"hssc_id\": \"dea5a43e-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"datetimefield_date_of_birth\",\n            \"label\": \"出生日期\",\n            \"hssc_id\": \"deb7b0ac-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"datetime\"\n        },\n        {\n            \"name\": \"relatedfield_affiliation\",\n            \"label\": \"所属机构\",\n            \"hssc_id\": \"ded78062-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Institution\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"relatedfield_service_role\",\n            \"label\": \"服务角色\",\n            \"hssc_id\": \"ded69094-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Fu_wu_jue_se\",\n            \"app_label\": \"\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class Z6205(HsscFormModel):\\n    characterfield_name = models.CharField(max_length=255, null=True, blank=True, verbose_name='姓名')\\n    characterfield_gender = models.CharField(max_length=255, null=True, blank=True, verbose_name='性别')\\n    characterfield_age = models.CharField(max_length=255, null=True, blank=True, verbose_name='年龄')\\n    characterhssc_identification_number = models.CharField(max_length=255, null=True, blank=True, verbose_name='身份证号码')\\n    characterfield_contact_address = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系地址')\\n    characterfield_practice_qualification = models.CharField(max_length=255, null=True, blank=True, verbose_name='执业资质')\\n    characterfield_password_setting = models.CharField(max_length=255, null=True, blank=True, verbose_name='密码设置')\\n    characterfield_confirm_password = models.CharField(max_length=255, null=True, blank=True, verbose_name='确认密码')\\n    characterfield_expertise = models.CharField(max_length=255, null=True, blank=True, verbose_name='专长')\\n    characterfield_practice_time = models.CharField(max_length=255, null=True, blank=True, verbose_name='执业时间')\\n    datetimefield_date_of_birth = models.DateTimeField(null=True, blank=True, verbose_name='出生日期')\\n    relatedfield_affiliation = models.ForeignKey(Institution, related_name='institution_for_relatedfield_affiliation_Z6205', on_delete=models.CASCADE, null=True, blank=True, verbose_name='所属机构')\\n    relatedfield_service_role = models.ManyToManyField(Fu_wu_jue_se, related_name='fu_wu_jue_se_for_relatedfield_service_role_Z6205', verbose_name='服务角色')\\n    class Meta:\\n        verbose_name = '医生注册'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('Z6205_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('Z6205_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass Z6205Admin(HsscFormAdmin):\\n    autocomplete_fields = [\\\"relatedfield_affiliation\\\", \\\"relatedfield_service_role\\\", ]\\nadmin.site.register(Z6205, Z6205Admin)\\nclinic_site.register(Z6205, Z6205Admin)\\n\", \"forms\": \"\\nclass Z6205_ModelForm(ModelForm):\\n    class Meta:\\n        model = Z6205\\n        fields = ['characterfield_name', 'characterfield_gender', 'characterfield_age', 'characterhssc_identification_number', 'characterfield_contact_address', 'characterfield_practice_qualification', 'characterfield_password_setting', 'characterfield_confirm_password', 'characterfield_expertise', 'characterfield_practice_time', 'datetimefield_date_of_birth', 'relatedfield_affiliation', 'relatedfield_service_role', ]\\n        widgets = {'relatedfield_affiliation': Select, 'relatedfield_service_role': CheckboxSelectMultiple, }\\n    \"}",
            "components": [
                "de9de26c-9aa1-11ec-bde1-8a6e55faf877",
                "de9e99dc-9aa1-11ec-bde1-8a6e55faf877",
                "de9f4ea4-9aa1-11ec-bde1-8a6e55faf877",
                "dea0045c-9aa1-11ec-bde1-8a6e55faf877",
                "dea1797c-9aa1-11ec-bde1-8a6e55faf877",
                "dea24708-9aa1-11ec-bde1-8a6e55faf877",
                "dea37b46-9aa1-11ec-bde1-8a6e55faf877",
                "dea437ac-9aa1-11ec-bde1-8a6e55faf877",
                "dea4f05c-9aa1-11ec-bde1-8a6e55faf877",
                "dea5a43e-9aa1-11ec-bde1-8a6e55faf877",
                "deb7b0ac-9aa1-11ec-bde1-8a6e55faf877",
                "ded78062-9aa1-11ec-bde1-8a6e55faf877",
                "ded69094-9aa1-11ec-bde1-8a6e55faf877"
            ],
            "components_groups": []
        },
        {
            "label": "视力检查",
            "name": "A3109",
            "hssc_id": "0c00501c-9e23-11ec-aa2c-fe35a7065cdd",
            "pym": "sljc",
            "name_icpc": "A3109",
            "description": null,
            "meta_data": "{\n    \"name\": \"A3109\",\n    \"label\": \"视力检查\",\n    \"hssc_id\": \"0c00501c-9e23-11ec-aa2c-fe35a7065cdd\",\n    \"fields\": [\n        {\n            \"name\": \"characterfield_right_eye_vision\",\n            \"label\": \"右眼视力\",\n            \"hssc_id\": \"dea93de2-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"characterfield_left_eye_vision\",\n            \"label\": \"左眼视力\",\n            \"hssc_id\": \"dea8864a-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class A3109(HsscFormModel):\\n    characterfield_right_eye_vision = models.CharField(max_length=255, null=True, blank=True, verbose_name='右眼视力')\\n    characterfield_left_eye_vision = models.CharField(max_length=255, null=True, blank=True, verbose_name='左眼视力')\\n    class Meta:\\n        verbose_name = '视力检查'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('A3109_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('A3109_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass A3109Admin(HsscFormAdmin):\\n    pass\\nadmin.site.register(A3109, A3109Admin)\\nclinic_site.register(A3109, A3109Admin)\\n\", \"forms\": \"\\nclass A3109_ModelForm(ModelForm):\\n    class Meta:\\n        model = A3109\\n        fields = ['characterfield_right_eye_vision', 'characterfield_left_eye_vision', ]\\n        \\n    \"}",
            "components": [
                "dea93de2-9aa1-11ec-bde1-8a6e55faf877",
                "dea8864a-9aa1-11ec-bde1-8a6e55faf877"
            ],
            "components_groups": []
        },
        {
            "label": "口腔检查",
            "name": "A3108",
            "hssc_id": "0bf1f86e-9e23-11ec-aa2c-fe35a7065cdd",
            "pym": "kqjc",
            "name_icpc": "A3108",
            "description": null,
            "meta_data": "{\n    \"name\": \"A3108\",\n    \"label\": \"口腔检查\",\n    \"hssc_id\": \"0bf1f86e-9e23-11ec-aa2c-fe35a7065cdd\",\n    \"fields\": [\n        {\n            \"name\": \"relatedfield_lips\",\n            \"label\": \"口唇\",\n            \"hssc_id\": \"dedcdfee-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Lips\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"relatedfield_dentition\",\n            \"label\": \"齿列\",\n            \"hssc_id\": \"deddcb16-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Dentition\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"relatedfield_pharynx\",\n            \"label\": \"咽部\",\n            \"hssc_id\": \"dedebd28-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Pharynx\",\n            \"app_label\": \"\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class A3108(HsscFormModel):\\n    relatedfield_lips = models.ForeignKey(Lips, related_name='lips_for_relatedfield_lips_A3108', on_delete=models.CASCADE, null=True, blank=True, verbose_name='口唇')\\n    relatedfield_dentition = models.ForeignKey(Dentition, related_name='dentition_for_relatedfield_dentition_A3108', on_delete=models.CASCADE, null=True, blank=True, verbose_name='齿列')\\n    relatedfield_pharynx = models.ForeignKey(Pharynx, related_name='pharynx_for_relatedfield_pharynx_A3108', on_delete=models.CASCADE, null=True, blank=True, verbose_name='咽部')\\n    class Meta:\\n        verbose_name = '口腔检查'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('A3108_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('A3108_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass A3108Admin(HsscFormAdmin):\\n    autocomplete_fields = [\\\"relatedfield_lips\\\", \\\"relatedfield_dentition\\\", \\\"relatedfield_pharynx\\\", ]\\nadmin.site.register(A3108, A3108Admin)\\nclinic_site.register(A3108, A3108Admin)\\n\", \"forms\": \"\\nclass A3108_ModelForm(ModelForm):\\n    class Meta:\\n        model = A3108\\n        fields = ['relatedfield_lips', 'relatedfield_dentition', 'relatedfield_pharynx', ]\\n        widgets = {'relatedfield_lips': RadioSelect, 'relatedfield_dentition': RadioSelect, 'relatedfield_pharynx': Select, }\\n    \"}",
            "components": [
                "dedcdfee-9aa1-11ec-bde1-8a6e55faf877",
                "deddcb16-9aa1-11ec-bde1-8a6e55faf877",
                "dedebd28-9aa1-11ec-bde1-8a6e55faf877"
            ],
            "components_groups": []
        },
        {
            "label": "运动干预",
            "name": "T4502",
            "hssc_id": "7f149618-a4c6-11ec-a7bb-cecec7a0e139",
            "pym": "ydgy",
            "name_icpc": "T4502",
            "description": null,
            "meta_data": "{\n    \"name\": \"T4502\",\n    \"label\": \"运动干预\",\n    \"hssc_id\": \"7f149618-a4c6-11ec-a7bb-cecec7a0e139\",\n    \"fields\": [\n        {\n            \"name\": \"T4502\",\n            \"label\": \"运动干预\",\n            \"hssc_id\": \"bcb64276-a4c3-11ec-a7bb-cecec7a0e139\",\n            \"type\": \"Icpc8_other_health_interventions\",\n            \"app_label\": \"\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class T4502(HsscFormModel):\\n    T4502 = models.ManyToManyField(Icpc8_other_health_interventions, related_name='icpc8_other_health_interventions_for_T4502_T4502', verbose_name='运动干预')\\n    class Meta:\\n        verbose_name = '运动干预'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('T4502_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('T4502_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass T4502Admin(HsscFormAdmin):\\n    autocomplete_fields = [\\\"T4502\\\", ]\\nadmin.site.register(T4502, T4502Admin)\\nclinic_site.register(T4502, T4502Admin)\\n\", \"forms\": \"\\nclass T4502_ModelForm(ModelForm):\\n    class Meta:\\n        model = T4502\\n        fields = ['T4502', ]\\n        widgets = {'T4502': SelectMultiple, }\\n    \"}",
            "components": [
                "bcb64276-a4c3-11ec-a7bb-cecec7a0e139"
            ],
            "components_groups": []
        },
        {
            "label": "机构基本信息表",
            "name": "ji_gou_ji_ben_xin_xi_biao",
            "hssc_id": "43464b44-c5c9-11ec-b819-725badf7393d",
            "pym": "jgjbxxb",
            "name_icpc": null,
            "description": null,
            "meta_data": "{\n    \"name\": \"ji_gou_ji_ben_xin_xi_biao\",\n    \"label\": \"机构基本信息表\",\n    \"hssc_id\": \"43464b44-c5c9-11ec-b819-725badf7393d\",\n    \"fields\": [\n        {\n            \"name\": \"characterfield_contact_address\",\n            \"label\": \"联系地址\",\n            \"hssc_id\": \"dea1797c-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"characterfield_contact_number\",\n            \"label\": \"联系电话\",\n            \"hssc_id\": \"deab5d16-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"boolfield_ji_gou_bian_ma\",\n            \"label\": \"机构编码\",\n            \"hssc_id\": \"b65a7d04-c5c8-11ec-b819-725badf7393d\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"boolfield_ji_gou_ming_cheng\",\n            \"label\": \"机构名称\",\n            \"hssc_id\": \"d31f31aa-c5c8-11ec-b819-725badf7393d\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"boolfield_ji_gou_dai_ma\",\n            \"label\": \"机构代码\",\n            \"hssc_id\": \"d8aa48a8-c5c8-11ec-b9d4-725badf7393d\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"boolfield_ji_gou_shu_xing\",\n            \"label\": \"机构属性\",\n            \"hssc_id\": \"dec11cee-c5c8-11ec-b819-725badf7393d\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"boolfield_ji_gou_ceng_ji\",\n            \"label\": \"机构层级\",\n            \"hssc_id\": \"eb5c311e-c5c8-11ec-b819-725badf7393d\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"boolfield_suo_zai_hang_zheng_qu_hua_dai_ma\",\n            \"label\": \"所在行政区划代码\",\n            \"hssc_id\": \"0443bd28-c5c9-11ec-b819-725badf7393d\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"boolfield_xing_zheng_qu_hua_gui_shu\",\n            \"label\": \"行政区划归属\",\n            \"hssc_id\": \"0b72d3cc-c5c9-11ec-b819-725badf7393d\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"boolfield_fa_ding_fu_ze_ren\",\n            \"label\": \"法定负责人\",\n            \"hssc_id\": \"13299560-c5c9-11ec-b9d4-725badf7393d\",\n            \"type\": \"string\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class Ji_gou_ji_ben_xin_xi_biao(HsscFormModel):\\n    characterfield_contact_address = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系地址')\\n    characterfield_contact_number = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系电话')\\n    boolfield_ji_gou_bian_ma = models.CharField(max_length=255, null=True, blank=True, verbose_name='机构编码')\\n    boolfield_ji_gou_ming_cheng = models.CharField(max_length=255, null=True, blank=True, verbose_name='机构名称')\\n    boolfield_ji_gou_dai_ma = models.CharField(max_length=255, null=True, blank=True, verbose_name='机构代码')\\n    boolfield_ji_gou_shu_xing = models.CharField(max_length=255, null=True, blank=True, verbose_name='机构属性')\\n    boolfield_ji_gou_ceng_ji = models.CharField(max_length=255, null=True, blank=True, verbose_name='机构层级')\\n    boolfield_suo_zai_hang_zheng_qu_hua_dai_ma = models.CharField(max_length=255, null=True, blank=True, verbose_name='所在行政区划代码')\\n    boolfield_xing_zheng_qu_hua_gui_shu = models.CharField(max_length=255, null=True, blank=True, verbose_name='行政区划归属')\\n    boolfield_fa_ding_fu_ze_ren = models.CharField(max_length=255, null=True, blank=True, verbose_name='法定负责人')\\n    class Meta:\\n        verbose_name = '机构基本信息表'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('ji_gou_ji_ben_xin_xi_biao_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('ji_gou_ji_ben_xin_xi_biao_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass Ji_gou_ji_ben_xin_xi_biaoAdmin(HsscFormAdmin):\\n    pass\\nadmin.site.register(Ji_gou_ji_ben_xin_xi_biao, Ji_gou_ji_ben_xin_xi_biaoAdmin)\\nclinic_site.register(Ji_gou_ji_ben_xin_xi_biao, Ji_gou_ji_ben_xin_xi_biaoAdmin)\\n\", \"forms\": \"\\nclass Ji_gou_ji_ben_xin_xi_biao_ModelForm(ModelForm):\\n    class Meta:\\n        model = Ji_gou_ji_ben_xin_xi_biao\\n        fields = ['characterfield_contact_address', 'characterfield_contact_number', 'boolfield_ji_gou_bian_ma', 'boolfield_ji_gou_ming_cheng', 'boolfield_ji_gou_dai_ma', 'boolfield_ji_gou_shu_xing', 'boolfield_ji_gou_ceng_ji', 'boolfield_suo_zai_hang_zheng_qu_hua_dai_ma', 'boolfield_xing_zheng_qu_hua_gui_shu', 'boolfield_fa_ding_fu_ze_ren', ]\\n        \\n    \"}",
            "components": [
                "dea1797c-9aa1-11ec-bde1-8a6e55faf877",
                "deab5d16-9aa1-11ec-bde1-8a6e55faf877",
                "b65a7d04-c5c8-11ec-b819-725badf7393d",
                "d31f31aa-c5c8-11ec-b819-725badf7393d",
                "d8aa48a8-c5c8-11ec-b9d4-725badf7393d",
                "dec11cee-c5c8-11ec-b819-725badf7393d",
                "eb5c311e-c5c8-11ec-b819-725badf7393d",
                "0443bd28-c5c9-11ec-b819-725badf7393d",
                "0b72d3cc-c5c9-11ec-b819-725badf7393d",
                "13299560-c5c9-11ec-b9d4-725badf7393d"
            ],
            "components_groups": []
        },
        {
            "label": "物料供应商基本信息表",
            "name": "wu_liu_gong_ying_shang_ji_ben_xin_xi_biao",
            "hssc_id": "63347e8a-c5c9-11ec-b819-725badf7393d",
            "pym": "wlgysjbxxb",
            "name_icpc": null,
            "description": null,
            "meta_data": "{\n    \"name\": \"wu_liu_gong_ying_shang_ji_ben_xin_xi_biao\",\n    \"label\": \"物料供应商基本信息表\",\n    \"hssc_id\": \"63347e8a-c5c9-11ec-b819-725badf7393d\",\n    \"fields\": [\n        {\n            \"name\": \"characterfield_contact_address\",\n            \"label\": \"联系地址\",\n            \"hssc_id\": \"dea1797c-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"characterfield_contact_number\",\n            \"label\": \"联系电话\",\n            \"hssc_id\": \"deab5d16-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"boolfield_gong_ying_shang_bian_ma\",\n            \"label\": \"供应商编码\",\n            \"hssc_id\": \"2bb30548-c5ca-11ec-b9d4-725badf7393d\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"boolfield_zhu_yao_gong_ying_chan_pin\",\n            \"label\": \"主要供应产品\",\n            \"hssc_id\": \"36fae812-c5ca-11ec-b819-725badf7393d\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"boolfield_gong_huo_zhou_qi\",\n            \"label\": \"供货周期\",\n            \"hssc_id\": \"42583a7a-c5ca-11ec-b819-725badf7393d\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"boolfield_gong_ying_shang_ming_cheng\",\n            \"label\": \"供应商名称\",\n            \"hssc_id\": \"7c53c810-c5cb-11ec-b819-725badf7393d\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"boolfield_xin_yu_ping_ji\",\n            \"label\": \"信誉评级\",\n            \"hssc_id\": \"5f80d88c-c5ca-11ec-b819-725badf7393d\",\n            \"type\": \"Xin_yu_ping_ji\",\n            \"app_label\": \"\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class Wu_liu_gong_ying_shang_ji_ben_xin_xi_biao(HsscFormModel):\\n    characterfield_contact_address = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系地址')\\n    characterfield_contact_number = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系电话')\\n    boolfield_gong_ying_shang_bian_ma = models.CharField(max_length=255, null=True, blank=True, verbose_name='供应商编码')\\n    boolfield_zhu_yao_gong_ying_chan_pin = models.CharField(max_length=255, null=True, blank=True, verbose_name='主要供应产品')\\n    boolfield_gong_huo_zhou_qi = models.CharField(max_length=255, null=True, blank=True, verbose_name='供货周期')\\n    boolfield_gong_ying_shang_ming_cheng = models.CharField(max_length=255, null=True, blank=True, verbose_name='供应商名称')\\n    boolfield_xin_yu_ping_ji = models.ForeignKey(Xin_yu_ping_ji, related_name='xin_yu_ping_ji_for_boolfield_xin_yu_ping_ji_wu_liu_gong_ying_shang_ji_ben_xin_xi_biao', on_delete=models.CASCADE, null=True, blank=True, verbose_name='信誉评级')\\n    class Meta:\\n        verbose_name = '物料供应商基本信息表'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('wu_liu_gong_ying_shang_ji_ben_xin_xi_biao_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('wu_liu_gong_ying_shang_ji_ben_xin_xi_biao_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass Wu_liu_gong_ying_shang_ji_ben_xin_xi_biaoAdmin(HsscFormAdmin):\\n    autocomplete_fields = [\\\"boolfield_xin_yu_ping_ji\\\", ]\\nadmin.site.register(Wu_liu_gong_ying_shang_ji_ben_xin_xi_biao, Wu_liu_gong_ying_shang_ji_ben_xin_xi_biaoAdmin)\\nclinic_site.register(Wu_liu_gong_ying_shang_ji_ben_xin_xi_biao, Wu_liu_gong_ying_shang_ji_ben_xin_xi_biaoAdmin)\\n\", \"forms\": \"\\nclass Wu_liu_gong_ying_shang_ji_ben_xin_xi_biao_ModelForm(ModelForm):\\n    class Meta:\\n        model = Wu_liu_gong_ying_shang_ji_ben_xin_xi_biao\\n        fields = ['characterfield_contact_address', 'characterfield_contact_number', 'boolfield_gong_ying_shang_bian_ma', 'boolfield_zhu_yao_gong_ying_chan_pin', 'boolfield_gong_huo_zhou_qi', 'boolfield_gong_ying_shang_ming_cheng', 'boolfield_xin_yu_ping_ji', ]\\n        widgets = {'boolfield_xin_yu_ping_ji': Select, }\\n    \"}",
            "components": [
                "dea1797c-9aa1-11ec-bde1-8a6e55faf877",
                "deab5d16-9aa1-11ec-bde1-8a6e55faf877",
                "2bb30548-c5ca-11ec-b9d4-725badf7393d",
                "36fae812-c5ca-11ec-b819-725badf7393d",
                "42583a7a-c5ca-11ec-b819-725badf7393d",
                "7c53c810-c5cb-11ec-b819-725badf7393d",
                "5f80d88c-c5ca-11ec-b819-725badf7393d"
            ],
            "components_groups": []
        },
        {
            "label": "职员基本信息表",
            "name": "zhi_yuan_ji_ben_xin_xi_biao",
            "hssc_id": "bca10e04-c5c7-11ec-b819-725badf7393d",
            "pym": "zyjbxxb",
            "name_icpc": null,
            "description": null,
            "meta_data": "{\n    \"name\": \"zhi_yuan_ji_ben_xin_xi_biao\",\n    \"label\": \"职员基本信息表\",\n    \"hssc_id\": \"bca10e04-c5c7-11ec-b819-725badf7393d\",\n    \"fields\": [\n        {\n            \"name\": \"characterfield_name\",\n            \"label\": \"姓名\",\n            \"hssc_id\": \"de9de26c-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"characterhssc_identification_number\",\n            \"label\": \"身份证号码\",\n            \"hssc_id\": \"dea0045c-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"characterfield_practice_qualification\",\n            \"label\": \"执业资质\",\n            \"hssc_id\": \"dea24708-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"characterfield_expertise\",\n            \"label\": \"专长\",\n            \"hssc_id\": \"dea4f05c-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"characterfield_practice_time\",\n            \"label\": \"执业时间\",\n            \"hssc_id\": \"dea5a43e-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"characterfield_contact_number\",\n            \"label\": \"联系电话\",\n            \"hssc_id\": \"deab5d16-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"boolfield_zhi_yuan_bian_ma\",\n            \"label\": \"职员编码\",\n            \"hssc_id\": \"f586a648-c5c7-11ec-b9d4-725badf7393d\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"relatedfield_affiliation\",\n            \"label\": \"所属机构\",\n            \"hssc_id\": \"ded78062-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Institution\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"relatedfield_service_role\",\n            \"label\": \"服务角色\",\n            \"hssc_id\": \"ded69094-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Fu_wu_jue_se\",\n            \"app_label\": \"\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class Zhi_yuan_ji_ben_xin_xi_biao(HsscFormModel):\\n    characterfield_name = models.CharField(max_length=255, null=True, blank=True, verbose_name='姓名')\\n    characterhssc_identification_number = models.CharField(max_length=255, null=True, blank=True, verbose_name='身份证号码')\\n    characterfield_practice_qualification = models.CharField(max_length=255, null=True, blank=True, verbose_name='执业资质')\\n    characterfield_expertise = models.CharField(max_length=255, null=True, blank=True, verbose_name='专长')\\n    characterfield_practice_time = models.CharField(max_length=255, null=True, blank=True, verbose_name='执业时间')\\n    characterfield_contact_number = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系电话')\\n    boolfield_zhi_yuan_bian_ma = models.CharField(max_length=255, null=True, blank=True, verbose_name='职员编码')\\n    relatedfield_affiliation = models.ForeignKey(Institution, related_name='institution_for_relatedfield_affiliation_zhi_yuan_ji_ben_xin_xi_biao', on_delete=models.CASCADE, null=True, blank=True, verbose_name='所属机构')\\n    relatedfield_service_role = models.ManyToManyField(Fu_wu_jue_se, related_name='fu_wu_jue_se_for_relatedfield_service_role_zhi_yuan_ji_ben_xin_xi_biao', verbose_name='服务角色')\\n    class Meta:\\n        verbose_name = '职员基本信息表'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('zhi_yuan_ji_ben_xin_xi_biao_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('zhi_yuan_ji_ben_xin_xi_biao_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass Zhi_yuan_ji_ben_xin_xi_biaoAdmin(HsscFormAdmin):\\n    autocomplete_fields = [\\\"relatedfield_affiliation\\\", \\\"relatedfield_service_role\\\", ]\\nadmin.site.register(Zhi_yuan_ji_ben_xin_xi_biao, Zhi_yuan_ji_ben_xin_xi_biaoAdmin)\\nclinic_site.register(Zhi_yuan_ji_ben_xin_xi_biao, Zhi_yuan_ji_ben_xin_xi_biaoAdmin)\\n\", \"forms\": \"\\nclass Zhi_yuan_ji_ben_xin_xi_biao_ModelForm(ModelForm):\\n    class Meta:\\n        model = Zhi_yuan_ji_ben_xin_xi_biao\\n        fields = ['characterfield_name', 'characterhssc_identification_number', 'characterfield_practice_qualification', 'characterfield_expertise', 'characterfield_practice_time', 'characterfield_contact_number', 'boolfield_zhi_yuan_bian_ma', 'relatedfield_affiliation', 'relatedfield_service_role', ]\\n        widgets = {'relatedfield_affiliation': Select, 'relatedfield_service_role': CheckboxSelectMultiple, }\\n    \"}",
            "components": [
                "de9de26c-9aa1-11ec-bde1-8a6e55faf877",
                "dea0045c-9aa1-11ec-bde1-8a6e55faf877",
                "dea24708-9aa1-11ec-bde1-8a6e55faf877",
                "dea4f05c-9aa1-11ec-bde1-8a6e55faf877",
                "dea5a43e-9aa1-11ec-bde1-8a6e55faf877",
                "deab5d16-9aa1-11ec-bde1-8a6e55faf877",
                "f586a648-c5c7-11ec-b9d4-725badf7393d",
                "ded78062-9aa1-11ec-bde1-8a6e55faf877",
                "ded69094-9aa1-11ec-bde1-8a6e55faf877"
            ],
            "components_groups": []
        },
        {
            "label": "设备基本信息表",
            "name": "she_bei_ji_ben_xin_xi_biao",
            "hssc_id": "7c8caaba-c5c9-11ec-b9d4-725badf7393d",
            "pym": "sbjbxxb",
            "name_icpc": null,
            "description": null,
            "meta_data": "{\n    \"name\": \"she_bei_ji_ben_xin_xi_biao\",\n    \"label\": \"设备基本信息表\",\n    \"hssc_id\": \"7c8caaba-c5c9-11ec-b9d4-725badf7393d\",\n    \"fields\": [\n        {\n            \"name\": \"characterfield_contact_number\",\n            \"label\": \"联系电话\",\n            \"hssc_id\": \"deab5d16-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"boolfield_she_bei_ming_cheng\",\n            \"label\": \"设备名称\",\n            \"hssc_id\": \"66ae19e2-c5cc-11ec-b9d4-725badf7393d\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"boolfield_she_bei_bian_ma\",\n            \"label\": \"设备编码\",\n            \"hssc_id\": \"6f02d90c-c5cc-11ec-b9d4-725badf7393d\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"boolfield_sheng_chan_chang_jia\",\n            \"label\": \"生产厂家\",\n            \"hssc_id\": \"761f6a66-c5cc-11ec-b819-725badf7393d\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"boolfield_she_bei_fu_wu_dan_wei_hao_shi\",\n            \"label\": \"设备服务单位耗时\",\n            \"hssc_id\": \"856e1558-c5cc-11ec-b819-725badf7393d\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"boolfield_she_bei_jian_xiu_zhou_qi\",\n            \"label\": \"设备检修周期\",\n            \"hssc_id\": \"8cc15d92-c5cc-11ec-b9d4-725badf7393d\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"boolfield_she_bei_shi_yong_cheng_ben\",\n            \"label\": \"设备使用成本\",\n            \"hssc_id\": \"939876dc-c5cc-11ec-b9d4-725badf7393d\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"boolfield_she_bei_shi_yong_fu_wu_gong_neng\",\n            \"label\": \"设备适用服务功能\",\n            \"hssc_id\": \"ca6c7ec4-c5cc-11ec-b819-725badf7393d\",\n            \"type\": \"Icpc4_physical_examination_and_tests\",\n            \"app_label\": \"\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class She_bei_ji_ben_xin_xi_biao(HsscFormModel):\\n    characterfield_contact_number = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系电话')\\n    boolfield_she_bei_ming_cheng = models.CharField(max_length=255, null=True, blank=True, verbose_name='设备名称')\\n    boolfield_she_bei_bian_ma = models.CharField(max_length=255, null=True, blank=True, verbose_name='设备编码')\\n    boolfield_sheng_chan_chang_jia = models.CharField(max_length=255, null=True, blank=True, verbose_name='生产厂家')\\n    boolfield_she_bei_fu_wu_dan_wei_hao_shi = models.CharField(max_length=255, null=True, blank=True, verbose_name='设备服务单位耗时')\\n    boolfield_she_bei_jian_xiu_zhou_qi = models.CharField(max_length=255, null=True, blank=True, verbose_name='设备检修周期')\\n    boolfield_she_bei_shi_yong_cheng_ben = models.CharField(max_length=255, null=True, blank=True, verbose_name='设备使用成本')\\n    boolfield_she_bei_shi_yong_fu_wu_gong_neng = models.ForeignKey(Icpc4_physical_examination_and_tests, related_name='icpc4_physical_examination_and_tests_for_boolfield_she_bei_shi_yong_fu_wu_gong_neng_she_bei_ji_ben_xin_xi_biao', on_delete=models.CASCADE, null=True, blank=True, verbose_name='设备适用服务功能')\\n    class Meta:\\n        verbose_name = '设备基本信息表'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('she_bei_ji_ben_xin_xi_biao_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('she_bei_ji_ben_xin_xi_biao_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass She_bei_ji_ben_xin_xi_biaoAdmin(HsscFormAdmin):\\n    autocomplete_fields = [\\\"boolfield_she_bei_shi_yong_fu_wu_gong_neng\\\", ]\\nadmin.site.register(She_bei_ji_ben_xin_xi_biao, She_bei_ji_ben_xin_xi_biaoAdmin)\\nclinic_site.register(She_bei_ji_ben_xin_xi_biao, She_bei_ji_ben_xin_xi_biaoAdmin)\\n\", \"forms\": \"\\nclass She_bei_ji_ben_xin_xi_biao_ModelForm(ModelForm):\\n    class Meta:\\n        model = She_bei_ji_ben_xin_xi_biao\\n        fields = ['characterfield_contact_number', 'boolfield_she_bei_ming_cheng', 'boolfield_she_bei_bian_ma', 'boolfield_sheng_chan_chang_jia', 'boolfield_she_bei_fu_wu_dan_wei_hao_shi', 'boolfield_she_bei_jian_xiu_zhou_qi', 'boolfield_she_bei_shi_yong_cheng_ben', 'boolfield_she_bei_shi_yong_fu_wu_gong_neng', ]\\n        widgets = {'boolfield_she_bei_shi_yong_fu_wu_gong_neng': Select, }\\n    \"}",
            "components": [
                "deab5d16-9aa1-11ec-bde1-8a6e55faf877",
                "66ae19e2-c5cc-11ec-b9d4-725badf7393d",
                "6f02d90c-c5cc-11ec-b9d4-725badf7393d",
                "761f6a66-c5cc-11ec-b819-725badf7393d",
                "856e1558-c5cc-11ec-b819-725badf7393d",
                "8cc15d92-c5cc-11ec-b9d4-725badf7393d",
                "939876dc-c5cc-11ec-b9d4-725badf7393d",
                "ca6c7ec4-c5cc-11ec-b819-725badf7393d"
            ],
            "components_groups": []
        },
        {
            "label": "用药调查表",
            "name": "yong_yao_diao_cha_biao",
            "hssc_id": "0c4fb9cc-9e23-11ec-aa2c-fe35a7065cdd",
            "pym": "yydcb",
            "name_icpc": null,
            "description": null,
            "meta_data": "{\n    \"name\": \"yong_yao_diao_cha_biao\",\n    \"label\": \"用药调查表\",\n    \"hssc_id\": \"0c4fb9cc-9e23-11ec-aa2c-fe35a7065cdd\",\n    \"fields\": [\n        {\n            \"name\": \"relatedfield_drug_name\",\n            \"label\": \"药品名称\",\n            \"hssc_id\": \"dec637d0-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Medicine\",\n            \"app_label\": \"\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class Yong_yao_diao_cha_biao(HsscFormModel):\\n    relatedfield_drug_name = models.ManyToManyField(Medicine, related_name='medicine_for_relatedfield_drug_name_yong_yao_diao_cha_biao', verbose_name='药品名称')\\n    class Meta:\\n        verbose_name = '用药调查表'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('yong_yao_diao_cha_biao_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('yong_yao_diao_cha_biao_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass Yong_yao_diao_cha_biaoAdmin(HsscFormAdmin):\\n    autocomplete_fields = [\\\"relatedfield_drug_name\\\", ]\\nadmin.site.register(Yong_yao_diao_cha_biao, Yong_yao_diao_cha_biaoAdmin)\\nclinic_site.register(Yong_yao_diao_cha_biao, Yong_yao_diao_cha_biaoAdmin)\\n\", \"forms\": \"\\nclass Yong_yao_diao_cha_biao_ModelForm(ModelForm):\\n    class Meta:\\n        model = Yong_yao_diao_cha_biao\\n        fields = ['relatedfield_drug_name', ]\\n        widgets = {'relatedfield_drug_name': SelectMultiple, }\\n    \"}",
            "components": [
                "dec637d0-9aa1-11ec-bde1-8a6e55faf877"
            ],
            "components_groups": []
        },
        {
            "label": "足背动脉检查",
            "name": "T3003",
            "hssc_id": "0bd6215c-9e23-11ec-aa2c-fe35a7065cdd",
            "pym": "zbdmjc",
            "name_icpc": "T3003",
            "description": null,
            "meta_data": "{\n    \"name\": \"T3003\",\n    \"label\": \"足背动脉检查\",\n    \"hssc_id\": \"0bd6215c-9e23-11ec-aa2c-fe35a7065cdd\",\n    \"fields\": [\n        {\n            \"name\": \"relatedfield_left_foot\",\n            \"label\": \"左脚\",\n            \"hssc_id\": \"ded859ba-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Dorsal_artery_pulsation\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"relatedfield_right_foot\",\n            \"label\": \"右脚\",\n            \"hssc_id\": \"ded93d62-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Dorsal_artery_pulsation\",\n            \"app_label\": \"\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class T3003(HsscFormModel):\\n    relatedfield_left_foot = models.ForeignKey(Dorsal_artery_pulsation, related_name='dorsal_artery_pulsation_for_relatedfield_left_foot_T3003', on_delete=models.CASCADE, null=True, blank=True, verbose_name='左脚')\\n    relatedfield_right_foot = models.ForeignKey(Dorsal_artery_pulsation, related_name='dorsal_artery_pulsation_for_relatedfield_right_foot_T3003', on_delete=models.CASCADE, null=True, blank=True, verbose_name='右脚')\\n    class Meta:\\n        verbose_name = '足背动脉检查'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('T3003_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('T3003_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass T3003Admin(HsscFormAdmin):\\n    autocomplete_fields = [\\\"relatedfield_left_foot\\\", \\\"relatedfield_right_foot\\\", ]\\nadmin.site.register(T3003, T3003Admin)\\nclinic_site.register(T3003, T3003Admin)\\n\", \"forms\": \"\\nclass T3003_ModelForm(ModelForm):\\n    class Meta:\\n        model = T3003\\n        fields = ['relatedfield_left_foot', 'relatedfield_right_foot', ]\\n        widgets = {'relatedfield_left_foot': RadioSelect, 'relatedfield_right_foot': RadioSelect, }\\n    \"}",
            "components": [
                "ded859ba-9aa1-11ec-bde1-8a6e55faf877",
                "ded93d62-9aa1-11ec-bde1-8a6e55faf877"
            ],
            "components_groups": []
        },
        {
            "label": "眼底检查",
            "name": "T3002",
            "hssc_id": "0bb0c86c-9e23-11ec-aa2c-fe35a7065cdd",
            "pym": "ydjc",
            "name_icpc": "T3002",
            "description": null,
            "meta_data": "{\n    \"name\": \"T3002\",\n    \"label\": \"眼底检查\",\n    \"hssc_id\": \"0bb0c86c-9e23-11ec-aa2c-fe35a7065cdd\",\n    \"fields\": [\n        {\n            \"name\": \"relatedfield_fundus\",\n            \"label\": \"眼底\",\n            \"hssc_id\": \"ded5a800-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Normality\",\n            \"app_label\": \"\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class T3002(HsscFormModel):\\n    relatedfield_fundus = models.ForeignKey(Normality, related_name='normality_for_relatedfield_fundus_T3002', on_delete=models.CASCADE, null=True, blank=True, verbose_name='眼底')\\n    class Meta:\\n        verbose_name = '眼底检查'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('T3002_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('T3002_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass T3002Admin(HsscFormAdmin):\\n    autocomplete_fields = [\\\"relatedfield_fundus\\\", ]\\nadmin.site.register(T3002, T3002Admin)\\nclinic_site.register(T3002, T3002Admin)\\n\", \"forms\": \"\\nclass T3002_ModelForm(ModelForm):\\n    class Meta:\\n        model = T3002\\n        fields = ['relatedfield_fundus', ]\\n        widgets = {'relatedfield_fundus': Select, }\\n    \"}",
            "components": [
                "ded5a800-9aa1-11ec-bde1-8a6e55faf877"
            ],
            "components_groups": []
        },
        {
            "label": "服务分供机构基本信息表",
            "name": "fu_wu_fen_gong_ji_gou_ji_ben_xin_xi_biao",
            "hssc_id": "73e24eec-c5c9-11ec-b9d4-725badf7393d",
            "pym": "fwfgjgjbxxb",
            "name_icpc": null,
            "description": null,
            "meta_data": "{\n    \"name\": \"fu_wu_fen_gong_ji_gou_ji_ben_xin_xi_biao\",\n    \"label\": \"服务分供机构基本信息表\",\n    \"hssc_id\": \"73e24eec-c5c9-11ec-b9d4-725badf7393d\",\n    \"fields\": [\n        {\n            \"name\": \"characterfield_contact_address\",\n            \"label\": \"联系地址\",\n            \"hssc_id\": \"dea1797c-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"characterfield_contact_number\",\n            \"label\": \"联系电话\",\n            \"hssc_id\": \"deab5d16-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"boolfield_ji_gou_dai_ma\",\n            \"label\": \"机构代码\",\n            \"hssc_id\": \"d8aa48a8-c5c8-11ec-b9d4-725badf7393d\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"boolfield_ji_gou_shu_xing\",\n            \"label\": \"机构属性\",\n            \"hssc_id\": \"dec11cee-c5c8-11ec-b819-725badf7393d\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"boolfield_gong_ying_shang_bian_ma\",\n            \"label\": \"供应商编码\",\n            \"hssc_id\": \"2bb30548-c5ca-11ec-b9d4-725badf7393d\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"boolfield_gong_ying_shang_ming_cheng\",\n            \"label\": \"供应商名称\",\n            \"hssc_id\": \"7c53c810-c5cb-11ec-b819-725badf7393d\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"boolfield_zhuan_ye_fu_wu\",\n            \"label\": \"专业服务\",\n            \"hssc_id\": \"2c8ed21a-c5cc-11ec-b9d4-725badf7393d\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"boolfield_xin_yu_ping_ji\",\n            \"label\": \"信誉评级\",\n            \"hssc_id\": \"5f80d88c-c5ca-11ec-b819-725badf7393d\",\n            \"type\": \"Xin_yu_ping_ji\",\n            \"app_label\": \"\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class Fu_wu_fen_gong_ji_gou_ji_ben_xin_xi_biao(HsscFormModel):\\n    characterfield_contact_address = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系地址')\\n    characterfield_contact_number = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系电话')\\n    boolfield_ji_gou_dai_ma = models.CharField(max_length=255, null=True, blank=True, verbose_name='机构代码')\\n    boolfield_ji_gou_shu_xing = models.CharField(max_length=255, null=True, blank=True, verbose_name='机构属性')\\n    boolfield_gong_ying_shang_bian_ma = models.CharField(max_length=255, null=True, blank=True, verbose_name='供应商编码')\\n    boolfield_gong_ying_shang_ming_cheng = models.CharField(max_length=255, null=True, blank=True, verbose_name='供应商名称')\\n    boolfield_zhuan_ye_fu_wu = models.CharField(max_length=255, null=True, blank=True, verbose_name='专业服务')\\n    boolfield_xin_yu_ping_ji = models.ForeignKey(Xin_yu_ping_ji, related_name='xin_yu_ping_ji_for_boolfield_xin_yu_ping_ji_fu_wu_fen_gong_ji_gou_ji_ben_xin_xi_biao', on_delete=models.CASCADE, null=True, blank=True, verbose_name='信誉评级')\\n    class Meta:\\n        verbose_name = '服务分供机构基本信息表'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('fu_wu_fen_gong_ji_gou_ji_ben_xin_xi_biao_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('fu_wu_fen_gong_ji_gou_ji_ben_xin_xi_biao_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass Fu_wu_fen_gong_ji_gou_ji_ben_xin_xi_biaoAdmin(HsscFormAdmin):\\n    autocomplete_fields = [\\\"boolfield_xin_yu_ping_ji\\\", ]\\nadmin.site.register(Fu_wu_fen_gong_ji_gou_ji_ben_xin_xi_biao, Fu_wu_fen_gong_ji_gou_ji_ben_xin_xi_biaoAdmin)\\nclinic_site.register(Fu_wu_fen_gong_ji_gou_ji_ben_xin_xi_biao, Fu_wu_fen_gong_ji_gou_ji_ben_xin_xi_biaoAdmin)\\n\", \"forms\": \"\\nclass Fu_wu_fen_gong_ji_gou_ji_ben_xin_xi_biao_ModelForm(ModelForm):\\n    class Meta:\\n        model = Fu_wu_fen_gong_ji_gou_ji_ben_xin_xi_biao\\n        fields = ['characterfield_contact_address', 'characterfield_contact_number', 'boolfield_ji_gou_dai_ma', 'boolfield_ji_gou_shu_xing', 'boolfield_gong_ying_shang_bian_ma', 'boolfield_gong_ying_shang_ming_cheng', 'boolfield_zhuan_ye_fu_wu', 'boolfield_xin_yu_ping_ji', ]\\n        widgets = {'boolfield_xin_yu_ping_ji': Select, }\\n    \"}",
            "components": [
                "dea1797c-9aa1-11ec-bde1-8a6e55faf877",
                "deab5d16-9aa1-11ec-bde1-8a6e55faf877",
                "d8aa48a8-c5c8-11ec-b9d4-725badf7393d",
                "dec11cee-c5c8-11ec-b819-725badf7393d",
                "2bb30548-c5ca-11ec-b9d4-725badf7393d",
                "7c53c810-c5cb-11ec-b819-725badf7393d",
                "2c8ed21a-c5cc-11ec-b9d4-725badf7393d",
                "5f80d88c-c5ca-11ec-b819-725badf7393d"
            ],
            "components_groups": []
        },
        {
            "label": "输血史",
            "name": "A6208",
            "hssc_id": "0ba2ba9c-9e23-11ec-aa2c-fe35a7065cdd",
            "pym": "sxs",
            "name_icpc": "A6208",
            "description": null,
            "meta_data": "{\n    \"name\": \"A6208\",\n    \"label\": \"输血史\",\n    \"hssc_id\": \"0ba2ba9c-9e23-11ec-aa2c-fe35a7065cdd\",\n    \"fields\": [\n        {\n            \"name\": \"numberfield_blood_transfusion\",\n            \"label\": \"输血量\",\n            \"hssc_id\": \"deb2a274-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"number\"\n        },\n        {\n            \"name\": \"boolfield_shu_xue_ri_qi\",\n            \"label\": \"输血日期\",\n            \"hssc_id\": \"dd6c67a8-c9ed-11ec-b369-168d53e8234e\",\n            \"type\": \"datetime\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class A6208(HsscFormModel):\\n    numberfield_blood_transfusion = models.IntegerField(null=True, blank=True, verbose_name='输血量')\\n    numberfield_blood_transfusion_standard_value = models.IntegerField(null=True, blank=True, verbose_name='输血量标准值')\\n    numberfield_blood_transfusion_up_limit = models.IntegerField(default=400.0, null=True, blank=True, verbose_name='输血量上限')\\n    numberfield_blood_transfusion_down_limit = models.IntegerField(null=True, blank=True, verbose_name='输血量下限')\\n    boolfield_shu_xue_ri_qi = models.DateField(null=True, blank=True, verbose_name='输血日期')\\n    class Meta:\\n        verbose_name = '输血史'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('A6208_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('A6208_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass A6208Admin(HsscFormAdmin):\\n    pass\\nadmin.site.register(A6208, A6208Admin)\\nclinic_site.register(A6208, A6208Admin)\\n\", \"forms\": \"\\nclass A6208_ModelForm(ModelForm):\\n    class Meta:\\n        model = A6208\\n        fields = ['numberfield_blood_transfusion', 'boolfield_shu_xue_ri_qi', ]\\n        \\n    \"}",
            "components": [
                "deb2a274-9aa1-11ec-bde1-8a6e55faf877",
                "dd6c67a8-c9ed-11ec-b369-168d53e8234e"
            ],
            "components_groups": []
        },
        {
            "label": "医生",
            "name": "Z6233",
            "hssc_id": "0bcfcb9a-9e23-11ec-aa2c-fe35a7065cdd",
            "pym": "ys",
            "name_icpc": "Z6233",
            "description": null,
            "meta_data": "{\n    \"name\": \"Z6233\",\n    \"label\": \"医生\",\n    \"hssc_id\": \"0bcfcb9a-9e23-11ec-aa2c-fe35a7065cdd\",\n    \"fields\": [\n        {\n            \"name\": \"characterfield_username\",\n            \"label\": \"用户名\",\n            \"hssc_id\": \"dea654a6-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"characterfield_password\",\n            \"label\": \"密码\",\n            \"hssc_id\": \"dea7211a-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class Z6233(HsscFormModel):\\n    characterfield_username = models.CharField(max_length=255, null=True, blank=True, verbose_name='用户名')\\n    characterfield_password = models.CharField(max_length=255, null=True, blank=True, verbose_name='密码')\\n    class Meta:\\n        verbose_name = '医生'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('Z6233_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('Z6233_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass Z6233Admin(HsscFormAdmin):\\n    pass\\nadmin.site.register(Z6233, Z6233Admin)\\nclinic_site.register(Z6233, Z6233Admin)\\n\", \"forms\": \"\\nclass Z6233_ModelForm(ModelForm):\\n    class Meta:\\n        model = Z6233\\n        fields = ['characterfield_username', 'characterfield_password', ]\\n        \\n    \"}",
            "components": [
                "dea654a6-9aa1-11ec-bde1-8a6e55faf877",
                "dea7211a-9aa1-11ec-bde1-8a6e55faf877"
            ],
            "components_groups": []
        },
        {
            "label": "药品基本信息表",
            "name": "yao_pin_ji_ben_xin_xi_biao",
            "hssc_id": "a2fc46f0-c115-11ec-9685-2617a93150cd",
            "pym": "ypjbxxb",
            "name_icpc": null,
            "description": null,
            "meta_data": "{\n    \"name\": \"yao_pin_ji_ben_xin_xi_biao\",\n    \"label\": \"药品基本信息表\",\n    \"hssc_id\": \"a2fc46f0-c115-11ec-9685-2617a93150cd\",\n    \"fields\": [\n        {\n            \"name\": \"boolfield_yao_pin_bian_ma\",\n            \"label\": \"药品编码\",\n            \"hssc_id\": \"afe6851a-c115-11ec-9685-2617a93150cd\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"boolfield_yao_pin_gui_ge\",\n            \"label\": \"药品规格\",\n            \"hssc_id\": \"fbdc40fe-c115-11ec-b731-2617a93150cd\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"boolfield_yong_yao_zhou_qi\",\n            \"label\": \"用药疗程\",\n            \"hssc_id\": \"a6c0522e-bf7e-11ec-843b-6afc6c25d902\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"boolfield_chang_yong_chu_fang_liang\",\n            \"label\": \"常用处方量\",\n            \"hssc_id\": \"2b80da60-c5ce-11ec-b819-725badf7393d\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"boolfield_dui_zhao_yi_bao_ming_cheng\",\n            \"label\": \"对照医保名称\",\n            \"hssc_id\": \"33bc581c-c5ce-11ec-b9d4-725badf7393d\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"boolfield_dui_zhao_ji_yao_ming_cheng\",\n            \"label\": \"对照基药名称\",\n            \"hssc_id\": \"3e18992e-c5ce-11ec-b9d4-725badf7393d\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"boolfield_huan_suan_gui_ze\",\n            \"label\": \"换算规则\",\n            \"hssc_id\": \"4a10254e-c5ce-11ec-b9d4-725badf7393d\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"boolfield_fu_yong_pin_ci\",\n            \"label\": \"用药频次\",\n            \"hssc_id\": \"1bf942da-c5ce-11ec-b9d4-725badf7393d\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"boolfield_chu_fang_ji_liang_dan_wei\",\n            \"label\": \"处方计量单位\",\n            \"hssc_id\": \"77226cfe-c5ce-11ec-b819-725badf7393d\",\n            \"type\": \"Yao_pin_dan_wei\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"boolfield_ru_ku_ji_liang_dan_wei\",\n            \"label\": \"入库计量单位\",\n            \"hssc_id\": \"654dfc0a-c5ce-11ec-b819-725badf7393d\",\n            \"type\": \"Yao_pin_dan_wei\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"boolfield_xiao_shou_ji_liang_dan_wei\",\n            \"label\": \"销售计量单位\",\n            \"hssc_id\": \"6da75824-c5ce-11ec-b819-725badf7393d\",\n            \"type\": \"Yao_pin_dan_wei\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"relatedfield_drug_name\",\n            \"label\": \"药品名称\",\n            \"hssc_id\": \"dec637d0-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Medicine\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"boolfield_yong_yao_tu_jing\",\n            \"label\": \"用药途径\",\n            \"hssc_id\": \"db0aa7e6-bf7e-11ec-8dcd-6afc6c25d902\",\n            \"type\": \"Yong_yao_tu_jing\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"boolfield_yao_pin_fen_lei\",\n            \"label\": \"药品分类\",\n            \"hssc_id\": \"5dc1e618-c5ce-11ec-b9d4-725badf7393d\",\n            \"type\": \"Yao_pin_fen_lei\",\n            \"app_label\": \"\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class Yao_pin_ji_ben_xin_xi_biao(HsscFormModel):\\n    boolfield_yao_pin_bian_ma = models.CharField(max_length=255, null=True, blank=True, verbose_name='药品编码')\\n    boolfield_yao_pin_gui_ge = models.CharField(max_length=255, null=True, blank=True, verbose_name='药品规格')\\n    boolfield_yong_yao_zhou_qi = models.CharField(max_length=255, null=True, blank=True, verbose_name='用药疗程')\\n    boolfield_chang_yong_chu_fang_liang = models.CharField(max_length=255, null=True, blank=True, verbose_name='常用处方量')\\n    boolfield_dui_zhao_yi_bao_ming_cheng = models.CharField(max_length=255, null=True, blank=True, verbose_name='对照医保名称')\\n    boolfield_dui_zhao_ji_yao_ming_cheng = models.CharField(max_length=255, null=True, blank=True, verbose_name='对照基药名称')\\n    boolfield_huan_suan_gui_ze = models.CharField(max_length=255, null=True, blank=True, verbose_name='换算规则')\\n    boolfield_fu_yong_pin_ci = models.CharField(max_length=255, null=True, blank=True, verbose_name='用药频次')\\n    boolfield_chu_fang_ji_liang_dan_wei = models.ForeignKey(Yao_pin_dan_wei, related_name='yao_pin_dan_wei_for_boolfield_chu_fang_ji_liang_dan_wei_yao_pin_ji_ben_xin_xi_biao', on_delete=models.CASCADE, null=True, blank=True, verbose_name='处方计量单位')\\n    boolfield_ru_ku_ji_liang_dan_wei = models.ForeignKey(Yao_pin_dan_wei, related_name='yao_pin_dan_wei_for_boolfield_ru_ku_ji_liang_dan_wei_yao_pin_ji_ben_xin_xi_biao', on_delete=models.CASCADE, null=True, blank=True, verbose_name='入库计量单位')\\n    boolfield_xiao_shou_ji_liang_dan_wei = models.ForeignKey(Yao_pin_dan_wei, related_name='yao_pin_dan_wei_for_boolfield_xiao_shou_ji_liang_dan_wei_yao_pin_ji_ben_xin_xi_biao', on_delete=models.CASCADE, null=True, blank=True, verbose_name='销售计量单位')\\n    relatedfield_drug_name = models.ManyToManyField(Medicine, related_name='medicine_for_relatedfield_drug_name_yao_pin_ji_ben_xin_xi_biao', verbose_name='药品名称')\\n    boolfield_yong_yao_tu_jing = models.ForeignKey(Yong_yao_tu_jing, related_name='yong_yao_tu_jing_for_boolfield_yong_yao_tu_jing_yao_pin_ji_ben_xin_xi_biao', on_delete=models.CASCADE, null=True, blank=True, verbose_name='用药途径')\\n    boolfield_yao_pin_fen_lei = models.ForeignKey(Yao_pin_fen_lei, related_name='yao_pin_fen_lei_for_boolfield_yao_pin_fen_lei_yao_pin_ji_ben_xin_xi_biao', on_delete=models.CASCADE, null=True, blank=True, verbose_name='药品分类')\\n    class Meta:\\n        verbose_name = '药品基本信息表'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('yao_pin_ji_ben_xin_xi_biao_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('yao_pin_ji_ben_xin_xi_biao_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass Yao_pin_ji_ben_xin_xi_biaoAdmin(HsscFormAdmin):\\n    autocomplete_fields = [\\\"boolfield_chu_fang_ji_liang_dan_wei\\\", \\\"boolfield_ru_ku_ji_liang_dan_wei\\\", \\\"boolfield_xiao_shou_ji_liang_dan_wei\\\", \\\"relatedfield_drug_name\\\", \\\"boolfield_yong_yao_tu_jing\\\", \\\"boolfield_yao_pin_fen_lei\\\", ]\\nadmin.site.register(Yao_pin_ji_ben_xin_xi_biao, Yao_pin_ji_ben_xin_xi_biaoAdmin)\\nclinic_site.register(Yao_pin_ji_ben_xin_xi_biao, Yao_pin_ji_ben_xin_xi_biaoAdmin)\\n\", \"forms\": \"\\nclass Yao_pin_ji_ben_xin_xi_biao_ModelForm(ModelForm):\\n    class Meta:\\n        model = Yao_pin_ji_ben_xin_xi_biao\\n        fields = ['boolfield_yao_pin_bian_ma', 'boolfield_yao_pin_gui_ge', 'boolfield_yong_yao_zhou_qi', 'boolfield_chang_yong_chu_fang_liang', 'boolfield_dui_zhao_yi_bao_ming_cheng', 'boolfield_dui_zhao_ji_yao_ming_cheng', 'boolfield_huan_suan_gui_ze', 'boolfield_fu_yong_pin_ci', 'boolfield_chu_fang_ji_liang_dan_wei', 'boolfield_ru_ku_ji_liang_dan_wei', 'boolfield_xiao_shou_ji_liang_dan_wei', 'relatedfield_drug_name', 'boolfield_yong_yao_tu_jing', 'boolfield_yao_pin_fen_lei', ]\\n        widgets = {'boolfield_chu_fang_ji_liang_dan_wei': Select, 'boolfield_ru_ku_ji_liang_dan_wei': Select, 'boolfield_xiao_shou_ji_liang_dan_wei': Select, 'relatedfield_drug_name': SelectMultiple, 'boolfield_yong_yao_tu_jing': Select, 'boolfield_yao_pin_fen_lei': Select, }\\n    \"}",
            "components": [
                "afe6851a-c115-11ec-9685-2617a93150cd",
                "fbdc40fe-c115-11ec-b731-2617a93150cd",
                "a6c0522e-bf7e-11ec-843b-6afc6c25d902",
                "2b80da60-c5ce-11ec-b819-725badf7393d",
                "33bc581c-c5ce-11ec-b9d4-725badf7393d",
                "3e18992e-c5ce-11ec-b9d4-725badf7393d",
                "4a10254e-c5ce-11ec-b9d4-725badf7393d",
                "1bf942da-c5ce-11ec-b9d4-725badf7393d",
                "77226cfe-c5ce-11ec-b819-725badf7393d",
                "654dfc0a-c5ce-11ec-b819-725badf7393d",
                "6da75824-c5ce-11ec-b819-725badf7393d",
                "dec637d0-9aa1-11ec-bde1-8a6e55faf877",
                "db0aa7e6-bf7e-11ec-8dcd-6afc6c25d902",
                "5dc1e618-c5ce-11ec-b9d4-725badf7393d"
            ],
            "components_groups": []
        },
        {
            "label": "药物处方",
            "name": "A5001",
            "hssc_id": "0ce117aa-9e23-11ec-aa2c-fe35a7065cdd",
            "pym": "ywcf",
            "name_icpc": null,
            "description": null,
            "meta_data": "{\n    \"name\": \"A5001\",\n    \"label\": \"药物处方\",\n    \"hssc_id\": \"0ce117aa-9e23-11ec-aa2c-fe35a7065cdd\",\n    \"fields\": [\n        {\n            \"name\": \"boolfield_yong_yao_zhou_qi\",\n            \"label\": \"用药疗程\",\n            \"hssc_id\": \"a6c0522e-bf7e-11ec-843b-6afc6c25d902\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"boolfield_chang_yong_chu_fang_liang\",\n            \"label\": \"常用处方量\",\n            \"hssc_id\": \"2b80da60-c5ce-11ec-b819-725badf7393d\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"boolfield_fu_yong_pin_ci\",\n            \"label\": \"用药频次\",\n            \"hssc_id\": \"1bf942da-c5ce-11ec-b9d4-725badf7393d\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"relatedfield_drug_name\",\n            \"label\": \"药品名称\",\n            \"hssc_id\": \"dec637d0-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Medicine\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"boolfield_yong_yao_tu_jing\",\n            \"label\": \"用药途径\",\n            \"hssc_id\": \"db0aa7e6-bf7e-11ec-8dcd-6afc6c25d902\",\n            \"type\": \"Yong_yao_tu_jing\",\n            \"app_label\": \"\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class A5001(HsscFormModel):\\n    boolfield_yong_yao_zhou_qi = models.CharField(max_length=255, null=True, blank=True, verbose_name='用药疗程')\\n    boolfield_chang_yong_chu_fang_liang = models.CharField(max_length=255, null=True, blank=True, verbose_name='常用处方量')\\n    boolfield_fu_yong_pin_ci = models.CharField(max_length=255, null=True, blank=True, verbose_name='用药频次')\\n    relatedfield_drug_name = models.ManyToManyField(Medicine, related_name='medicine_for_relatedfield_drug_name_A5001', verbose_name='药品名称')\\n    boolfield_yong_yao_tu_jing = models.ForeignKey(Yong_yao_tu_jing, related_name='yong_yao_tu_jing_for_boolfield_yong_yao_tu_jing_A5001', on_delete=models.CASCADE, null=True, blank=True, verbose_name='用药途径')\\n    class Meta:\\n        verbose_name = '药物处方'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('A5001_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('A5001_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass A5001Admin(HsscFormAdmin):\\n    autocomplete_fields = [\\\"relatedfield_drug_name\\\", \\\"boolfield_yong_yao_tu_jing\\\", ]\\nadmin.site.register(A5001, A5001Admin)\\nclinic_site.register(A5001, A5001Admin)\\n\", \"forms\": \"\\nclass A5001_ModelForm(ModelForm):\\n    class Meta:\\n        model = A5001\\n        fields = ['boolfield_yong_yao_zhou_qi', 'boolfield_chang_yong_chu_fang_liang', 'boolfield_fu_yong_pin_ci', 'relatedfield_drug_name', 'boolfield_yong_yao_tu_jing', ]\\n        widgets = {'relatedfield_drug_name': SelectMultiple, 'boolfield_yong_yao_tu_jing': Select, }\\n    \"}",
            "components": [
                "a6c0522e-bf7e-11ec-843b-6afc6c25d902",
                "2b80da60-c5ce-11ec-b819-725badf7393d",
                "1bf942da-c5ce-11ec-b9d4-725badf7393d",
                "dec637d0-9aa1-11ec-bde1-8a6e55faf877",
                "db0aa7e6-bf7e-11ec-8dcd-6afc6c25d902"
            ],
            "components_groups": []
        },
        {
            "label": "健康教育",
            "name": "T4504",
            "hssc_id": "44fd7242-a4c6-11ec-a7bb-cecec7a0e139",
            "pym": "jkjy",
            "name_icpc": "T4504",
            "description": null,
            "meta_data": "{\n    \"name\": \"T4504\",\n    \"label\": \"健康教育\",\n    \"hssc_id\": \"44fd7242-a4c6-11ec-a7bb-cecec7a0e139\",\n    \"fields\": [\n        {\n            \"name\": \"T4504\",\n            \"label\": \"健康教育\",\n            \"hssc_id\": \"cdfeff00-a4c3-11ec-8f29-cecec7a0e139\",\n            \"type\": \"Icpc8_other_health_interventions\",\n            \"app_label\": \"\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class T4504(HsscFormModel):\\n    T4504 = models.ManyToManyField(Icpc8_other_health_interventions, related_name='icpc8_other_health_interventions_for_T4504_T4504', verbose_name='健康教育')\\n    class Meta:\\n        verbose_name = '健康教育'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('T4504_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('T4504_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass T4504Admin(HsscFormAdmin):\\n    autocomplete_fields = [\\\"T4504\\\", ]\\nadmin.site.register(T4504, T4504Admin)\\nclinic_site.register(T4504, T4504Admin)\\n\", \"forms\": \"\\nclass T4504_ModelForm(ModelForm):\\n    class Meta:\\n        model = T4504\\n        fields = ['T4504', ]\\n        widgets = {'T4504': SelectMultiple, }\\n    \"}",
            "components": [
                "cdfeff00-a4c3-11ec-8f29-cecec7a0e139"
            ],
            "components_groups": []
        },
        {
            "label": "输液注射单",
            "name": "shu_ye_zhu_she_dan",
            "hssc_id": "3e88f758-c9ef-11ec-b369-168d53e8234e",
            "pym": "syzsd",
            "name_icpc": null,
            "description": null,
            "meta_data": "{\n    \"name\": \"shu_ye_zhu_she_dan\",\n    \"label\": \"输液注射单\",\n    \"hssc_id\": \"3e88f758-c9ef-11ec-b369-168d53e8234e\",\n    \"fields\": [\n        {\n            \"name\": \"boolfield_yao_pin_gui_ge\",\n            \"label\": \"药品规格\",\n            \"hssc_id\": \"fbdc40fe-c115-11ec-b731-2617a93150cd\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"boolfield_yong_yao_zhou_qi\",\n            \"label\": \"用药疗程\",\n            \"hssc_id\": \"a6c0522e-bf7e-11ec-843b-6afc6c25d902\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"boolfield_chang_yong_chu_fang_liang\",\n            \"label\": \"常用处方量\",\n            \"hssc_id\": \"2b80da60-c5ce-11ec-b819-725badf7393d\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"boolfield_zhi_xing_qian_ming\",\n            \"label\": \"执行签名\",\n            \"hssc_id\": \"e98d52f2-c9ef-11ec-b452-168d53e8234e\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"boolfield_fu_yong_pin_ci\",\n            \"label\": \"用药频次\",\n            \"hssc_id\": \"1bf942da-c5ce-11ec-b9d4-725badf7393d\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"boolfield_zhu_she_ri_qi\",\n            \"label\": \"注射日期\",\n            \"hssc_id\": \"abe7baaa-c9ef-11ec-b369-168d53e8234e\",\n            \"type\": \"datetime\"\n        },\n        {\n            \"name\": \"relatedfield_drug_name\",\n            \"label\": \"药品名称\",\n            \"hssc_id\": \"dec637d0-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Medicine\",\n            \"app_label\": \"\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class Shu_ye_zhu_she_dan(HsscFormModel):\\n    boolfield_yao_pin_gui_ge = models.CharField(max_length=255, null=True, blank=True, verbose_name='药品规格')\\n    boolfield_yong_yao_zhou_qi = models.CharField(max_length=255, null=True, blank=True, verbose_name='用药疗程')\\n    boolfield_chang_yong_chu_fang_liang = models.CharField(max_length=255, null=True, blank=True, verbose_name='常用处方量')\\n    boolfield_zhi_xing_qian_ming = models.CharField(max_length=255, null=True, blank=True, verbose_name='执行签名')\\n    boolfield_fu_yong_pin_ci = models.CharField(max_length=255, null=True, blank=True, verbose_name='用药频次')\\n    boolfield_zhu_she_ri_qi = models.DateTimeField(null=True, blank=True, verbose_name='注射日期')\\n    relatedfield_drug_name = models.ManyToManyField(Medicine, related_name='medicine_for_relatedfield_drug_name_shu_ye_zhu_she_dan', verbose_name='药品名称')\\n    class Meta:\\n        verbose_name = '输液注射单'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('shu_ye_zhu_she_dan_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('shu_ye_zhu_she_dan_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass Shu_ye_zhu_she_danAdmin(HsscFormAdmin):\\n    autocomplete_fields = [\\\"relatedfield_drug_name\\\", ]\\nadmin.site.register(Shu_ye_zhu_she_dan, Shu_ye_zhu_she_danAdmin)\\nclinic_site.register(Shu_ye_zhu_she_dan, Shu_ye_zhu_she_danAdmin)\\n\", \"forms\": \"\\nclass Shu_ye_zhu_she_dan_ModelForm(ModelForm):\\n    class Meta:\\n        model = Shu_ye_zhu_she_dan\\n        fields = ['boolfield_yao_pin_gui_ge', 'boolfield_yong_yao_zhou_qi', 'boolfield_chang_yong_chu_fang_liang', 'boolfield_zhi_xing_qian_ming', 'boolfield_fu_yong_pin_ci', 'boolfield_zhu_she_ri_qi', 'relatedfield_drug_name', ]\\n        widgets = {'relatedfield_drug_name': SelectMultiple, }\\n    \"}",
            "components": [
                "fbdc40fe-c115-11ec-b731-2617a93150cd",
                "a6c0522e-bf7e-11ec-843b-6afc6c25d902",
                "2b80da60-c5ce-11ec-b819-725badf7393d",
                "e98d52f2-c9ef-11ec-b452-168d53e8234e",
                "1bf942da-c5ce-11ec-b9d4-725badf7393d",
                "abe7baaa-c9ef-11ec-b369-168d53e8234e",
                "dec637d0-9aa1-11ec-bde1-8a6e55faf877"
            ],
            "components_groups": []
        },
        {
            "label": "糖尿病专用问诊",
            "name": "A6219",
            "hssc_id": "0c620622-9e23-11ec-aa2c-fe35a7065cdd",
            "pym": "tnbzywz",
            "name_icpc": "A6219",
            "description": null,
            "meta_data": "{\n    \"name\": \"A6219\",\n    \"label\": \"糖尿病专用问诊\",\n    \"hssc_id\": \"0c620622-9e23-11ec-aa2c-fe35a7065cdd\",\n    \"fields\": [\n        {\n            \"name\": \"characterfield_supplementary_description_of_the_condition\",\n            \"label\": \"病情补充描述\",\n            \"hssc_id\": \"de9ad1a8-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"relatedfield_symptom_list\",\n            \"label\": \"症状\",\n            \"hssc_id\": \"deb93f26-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Icpc3_symptoms_and_problems\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"boolfield_tang_niao_bing_zheng_zhuang\",\n            \"label\": \"糖尿病症状\",\n            \"hssc_id\": \"1cad2116-a52a-11ec-a478-2ec403f6c47b\",\n            \"type\": \"Tang_niao_bing_zheng_zhuang\",\n            \"app_label\": \"\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class A6219(HsscFormModel):\\n    characterfield_supplementary_description_of_the_condition = models.CharField(max_length=255, null=True, blank=True, verbose_name='病情补充描述')\\n    relatedfield_symptom_list = models.ManyToManyField(Icpc3_symptoms_and_problems, related_name='icpc3_symptoms_and_problems_for_relatedfield_symptom_list_A6219', verbose_name='症状')\\n    boolfield_tang_niao_bing_zheng_zhuang = models.ManyToManyField(Tang_niao_bing_zheng_zhuang, related_name='tang_niao_bing_zheng_zhuang_for_boolfield_tang_niao_bing_zheng_zhuang_A6219', verbose_name='糖尿病症状')\\n    class Meta:\\n        verbose_name = '糖尿病专用问诊'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('A6219_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('A6219_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass A6219Admin(HsscFormAdmin):\\n    autocomplete_fields = [\\\"relatedfield_symptom_list\\\", \\\"boolfield_tang_niao_bing_zheng_zhuang\\\", ]\\nadmin.site.register(A6219, A6219Admin)\\nclinic_site.register(A6219, A6219Admin)\\n\", \"forms\": \"\\nclass A6219_ModelForm(ModelForm):\\n    class Meta:\\n        model = A6219\\n        fields = ['characterfield_supplementary_description_of_the_condition', 'relatedfield_symptom_list', 'boolfield_tang_niao_bing_zheng_zhuang', ]\\n        widgets = {'relatedfield_symptom_list': SelectMultiple, 'boolfield_tang_niao_bing_zheng_zhuang': CheckboxSelectMultiple, }\\n    \"}",
            "components": [
                "de9ad1a8-9aa1-11ec-bde1-8a6e55faf877",
                "deb93f26-9aa1-11ec-bde1-8a6e55faf877",
                "1cad2116-a52a-11ec-a478-2ec403f6c47b"
            ],
            "components_groups": []
        },
        {
            "label": "个人基本信息",
            "name": "A6203",
            "hssc_id": "0c0f81b8-9e23-11ec-aa2c-fe35a7065cdd",
            "pym": "grjbxx",
            "name_icpc": "A6203",
            "description": null,
            "meta_data": "{\n    \"name\": \"A6203\",\n    \"label\": \"个人基本信息\",\n    \"hssc_id\": \"0c0f81b8-9e23-11ec-aa2c-fe35a7065cdd\",\n    \"fields\": [\n        {\n            \"name\": \"characterfield_name\",\n            \"label\": \"姓名\",\n            \"hssc_id\": \"de9de26c-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"characterhssc_identification_number\",\n            \"label\": \"身份证号码\",\n            \"hssc_id\": \"dea0045c-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"characterfield_resident_file_number\",\n            \"label\": \"居民档案号\",\n            \"hssc_id\": \"dea9f25a-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"characterfield_family_address\",\n            \"label\": \"家庭地址\",\n            \"hssc_id\": \"deaaac2c-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"characterfield_contact_number\",\n            \"label\": \"联系电话\",\n            \"hssc_id\": \"deab5d16-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"characterfield_medical_ic_card_number\",\n            \"label\": \"医疗ic卡号\",\n            \"hssc_id\": \"deac1aa8-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"datetimefield_date_of_birth\",\n            \"label\": \"出生日期\",\n            \"hssc_id\": \"deb7b0ac-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"datetime\"\n        },\n        {\n            \"name\": \"relatedfield_gender\",\n            \"label\": \"性别\",\n            \"hssc_id\": \"debcb08e-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Gender\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"relatedfield_nationality\",\n            \"label\": \"民族\",\n            \"hssc_id\": \"debdab56-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Nationality\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"relatedfield_marital_status\",\n            \"label\": \"婚姻状况\",\n            \"hssc_id\": \"debf042e-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Marital_status\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"relatedfield_education\",\n            \"label\": \"文化程度\",\n            \"hssc_id\": \"debff348-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Education\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"relatedfield_occupational_status\",\n            \"label\": \"职业状况\",\n            \"hssc_id\": \"dec0d42a-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Occupational_status\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"relatedfield_medical_expenses_burden\",\n            \"label\": \"医疗费用负担\",\n            \"hssc_id\": \"dec1c100-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Medical_expenses_burden\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"relatedfield_type_of_residence\",\n            \"label\": \"居住类型\",\n            \"hssc_id\": \"dec2ab9c-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Type_of_residence\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"relatedfield_blood_type\",\n            \"label\": \"血型\",\n            \"hssc_id\": \"dec38ce2-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Blood_type\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"relatedfield_signed_family_doctor\",\n            \"label\": \"签约家庭医生\",\n            \"hssc_id\": \"dec46bf8-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Staff\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"relatedfield_family_relationship\",\n            \"label\": \"家庭成员关系\",\n            \"hssc_id\": \"ded3d502-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Family_relationship\",\n            \"app_label\": \"\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class A6203(HsscFormModel):\\n    characterfield_name = models.CharField(max_length=255, null=True, blank=True, verbose_name='姓名')\\n    characterhssc_identification_number = models.CharField(max_length=255, null=True, blank=True, verbose_name='身份证号码')\\n    characterfield_resident_file_number = models.CharField(max_length=255, null=True, blank=True, verbose_name='居民档案号')\\n    characterfield_family_address = models.CharField(max_length=255, null=True, blank=True, verbose_name='家庭地址')\\n    characterfield_contact_number = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系电话')\\n    characterfield_medical_ic_card_number = models.CharField(max_length=255, null=True, blank=True, verbose_name='医疗ic卡号')\\n    datetimefield_date_of_birth = models.DateTimeField(null=True, blank=True, verbose_name='出生日期')\\n    relatedfield_gender = models.ForeignKey(Gender, related_name='gender_for_relatedfield_gender_A6203', on_delete=models.CASCADE, null=True, blank=True, verbose_name='性别')\\n    relatedfield_nationality = models.ForeignKey(Nationality, related_name='nationality_for_relatedfield_nationality_A6203', on_delete=models.CASCADE, null=True, blank=True, verbose_name='民族')\\n    relatedfield_marital_status = models.ForeignKey(Marital_status, related_name='marital_status_for_relatedfield_marital_status_A6203', on_delete=models.CASCADE, null=True, blank=True, verbose_name='婚姻状况')\\n    relatedfield_education = models.ForeignKey(Education, related_name='education_for_relatedfield_education_A6203', on_delete=models.CASCADE, null=True, blank=True, verbose_name='文化程度')\\n    relatedfield_occupational_status = models.ForeignKey(Occupational_status, related_name='occupational_status_for_relatedfield_occupational_status_A6203', on_delete=models.CASCADE, null=True, blank=True, verbose_name='职业状况')\\n    relatedfield_medical_expenses_burden = models.ManyToManyField(Medical_expenses_burden, related_name='medical_expenses_burden_for_relatedfield_medical_expenses_burden_A6203', verbose_name='医疗费用负担')\\n    relatedfield_type_of_residence = models.ForeignKey(Type_of_residence, related_name='type_of_residence_for_relatedfield_type_of_residence_A6203', on_delete=models.CASCADE, null=True, blank=True, verbose_name='居住类型')\\n    relatedfield_blood_type = models.ForeignKey(Blood_type, related_name='blood_type_for_relatedfield_blood_type_A6203', on_delete=models.CASCADE, null=True, blank=True, verbose_name='血型')\\n    relatedfield_signed_family_doctor = models.ForeignKey(Staff, related_name='staff_for_relatedfield_signed_family_doctor_A6203', on_delete=models.CASCADE, null=True, blank=True, verbose_name='签约家庭医生')\\n    relatedfield_family_relationship = models.ForeignKey(Family_relationship, related_name='family_relationship_for_relatedfield_family_relationship_A6203', on_delete=models.CASCADE, null=True, blank=True, verbose_name='家庭成员关系')\\n    class Meta:\\n        verbose_name = '个人基本信息'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('A6203_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('A6203_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass A6203Admin(HsscFormAdmin):\\n    autocomplete_fields = [\\\"relatedfield_gender\\\", \\\"relatedfield_nationality\\\", \\\"relatedfield_marital_status\\\", \\\"relatedfield_education\\\", \\\"relatedfield_occupational_status\\\", \\\"relatedfield_medical_expenses_burden\\\", \\\"relatedfield_type_of_residence\\\", \\\"relatedfield_blood_type\\\", \\\"relatedfield_signed_family_doctor\\\", \\\"relatedfield_family_relationship\\\", ]\\nadmin.site.register(A6203, A6203Admin)\\nclinic_site.register(A6203, A6203Admin)\\n\", \"forms\": \"\\nclass A6203_ModelForm(ModelForm):\\n    class Meta:\\n        model = A6203\\n        fields = ['characterfield_name', 'characterhssc_identification_number', 'characterfield_resident_file_number', 'characterfield_family_address', 'characterfield_contact_number', 'characterfield_medical_ic_card_number', 'datetimefield_date_of_birth', 'relatedfield_gender', 'relatedfield_nationality', 'relatedfield_marital_status', 'relatedfield_education', 'relatedfield_occupational_status', 'relatedfield_medical_expenses_burden', 'relatedfield_type_of_residence', 'relatedfield_blood_type', 'relatedfield_signed_family_doctor', 'relatedfield_family_relationship', ]\\n        widgets = {'relatedfield_gender': Select, 'relatedfield_nationality': Select, 'relatedfield_marital_status': Select, 'relatedfield_education': Select, 'relatedfield_occupational_status': Select, 'relatedfield_medical_expenses_burden': CheckboxSelectMultiple, 'relatedfield_type_of_residence': Select, 'relatedfield_blood_type': Select, 'relatedfield_signed_family_doctor': Select, 'relatedfield_family_relationship': Select, }\\n    \"}",
            "components": [
                "de9de26c-9aa1-11ec-bde1-8a6e55faf877",
                "dea0045c-9aa1-11ec-bde1-8a6e55faf877",
                "dea9f25a-9aa1-11ec-bde1-8a6e55faf877",
                "deaaac2c-9aa1-11ec-bde1-8a6e55faf877",
                "deab5d16-9aa1-11ec-bde1-8a6e55faf877",
                "deac1aa8-9aa1-11ec-bde1-8a6e55faf877",
                "deb7b0ac-9aa1-11ec-bde1-8a6e55faf877",
                "debcb08e-9aa1-11ec-bde1-8a6e55faf877",
                "debdab56-9aa1-11ec-bde1-8a6e55faf877",
                "debf042e-9aa1-11ec-bde1-8a6e55faf877",
                "debff348-9aa1-11ec-bde1-8a6e55faf877",
                "dec0d42a-9aa1-11ec-bde1-8a6e55faf877",
                "dec1c100-9aa1-11ec-bde1-8a6e55faf877",
                "dec2ab9c-9aa1-11ec-bde1-8a6e55faf877",
                "dec38ce2-9aa1-11ec-bde1-8a6e55faf877",
                "dec46bf8-9aa1-11ec-bde1-8a6e55faf877",
                "ded3d502-9aa1-11ec-bde1-8a6e55faf877"
            ],
            "components_groups": []
        },
        {
            "label": "体格检查表",
            "name": "A3001",
            "hssc_id": "0cd1dcea-9e23-11ec-aa2c-fe35a7065cdd",
            "pym": "tgjcb",
            "name_icpc": null,
            "description": null,
            "meta_data": "{\n    \"name\": \"A3001\",\n    \"label\": \"体格检查表\",\n    \"hssc_id\": \"0cd1dcea-9e23-11ec-aa2c-fe35a7065cdd\",\n    \"fields\": [\n        {\n            \"name\": \"characterfield_right_eye_vision\",\n            \"label\": \"右眼视力\",\n            \"hssc_id\": \"dea93de2-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"characterfield_left_eye_vision\",\n            \"label\": \"左眼视力\",\n            \"hssc_id\": \"dea8864a-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"numberfield_body_temperature\",\n            \"label\": \"体温\",\n            \"hssc_id\": \"deae47e2-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"number\"\n        },\n        {\n            \"name\": \"numberfield_pulse\",\n            \"label\": \"脉搏\",\n            \"hssc_id\": \"deaf1ae6-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"number\"\n        },\n        {\n            \"name\": \"numberfield_respiratory_rate\",\n            \"label\": \"呼吸频率\",\n            \"hssc_id\": \"deafc9f0-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"number\"\n        },\n        {\n            \"name\": \"numberfield_hight\",\n            \"label\": \"身高\",\n            \"hssc_id\": \"deb08872-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"number\"\n        },\n        {\n            \"name\": \"numberfield_weight\",\n            \"label\": \"体重\",\n            \"hssc_id\": \"deb135ec-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"number\"\n        },\n        {\n            \"name\": \"numberfield_body_mass_index\",\n            \"label\": \"体质指数\",\n            \"hssc_id\": \"deb1ef6e-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"number\"\n        },\n        {\n            \"name\": \"numberfield_systolic_blood_pressure\",\n            \"label\": \"收缩压\",\n            \"hssc_id\": \"deb35b74-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"number\"\n        },\n        {\n            \"name\": \"numberfield_diastolic_blood_pressure\",\n            \"label\": \"舒张压\",\n            \"hssc_id\": \"deb416fe-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"number\"\n        },\n        {\n            \"name\": \"boolfield_yao_wei\",\n            \"label\": \"腰围\",\n            \"hssc_id\": \"2cc86fcc-b89b-11ec-aad8-322924405212\",\n            \"type\": \"number\"\n        },\n        {\n            \"name\": \"relatedfield_athletic_ability\",\n            \"label\": \"运动能力\",\n            \"hssc_id\": \"dec54e10-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Exercise_time\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"relatedfield_left_ear_hearing\",\n            \"label\": \"左耳听力\",\n            \"hssc_id\": \"deda1db8-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Hearing\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"relatedfield_right_ear_hearing\",\n            \"label\": \"右耳听力\",\n            \"hssc_id\": \"dedb0962-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Hearing\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"relatedfield_lips\",\n            \"label\": \"口唇\",\n            \"hssc_id\": \"dedcdfee-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Lips\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"relatedfield_dentition\",\n            \"label\": \"齿列\",\n            \"hssc_id\": \"deddcb16-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Dentition\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"relatedfield_pharynx\",\n            \"label\": \"咽部\",\n            \"hssc_id\": \"dedebd28-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Pharynx\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"relatedfield_lower_extremity_edema\",\n            \"label\": \"下肢水肿\",\n            \"hssc_id\": \"dee098fa-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Edema\",\n            \"app_label\": \"\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class A3001(HsscFormModel):\\n    characterfield_right_eye_vision = models.CharField(max_length=255, null=True, blank=True, verbose_name='右眼视力')\\n    characterfield_left_eye_vision = models.CharField(max_length=255, null=True, blank=True, verbose_name='左眼视力')\\n    numberfield_body_temperature = models.IntegerField(null=True, blank=True, verbose_name='体温')\\n    numberfield_body_temperature_standard_value = models.IntegerField(null=True, blank=True, verbose_name='体温标准值')\\n    numberfield_body_temperature_up_limit = models.IntegerField(default=37.4, null=True, blank=True, verbose_name='体温上限')\\n    numberfield_body_temperature_down_limit = models.IntegerField(default=36.0, null=True, blank=True, verbose_name='体温下限')\\n    numberfield_pulse = models.IntegerField(null=True, blank=True, verbose_name='脉搏')\\n    numberfield_pulse_standard_value = models.IntegerField(null=True, blank=True, verbose_name='脉搏标准值')\\n    numberfield_pulse_up_limit = models.IntegerField(default=100.0, null=True, blank=True, verbose_name='脉搏上限')\\n    numberfield_pulse_down_limit = models.IntegerField(default=60.0, null=True, blank=True, verbose_name='脉搏下限')\\n    numberfield_respiratory_rate = models.IntegerField(null=True, blank=True, verbose_name='呼吸频率')\\n    numberfield_respiratory_rate_standard_value = models.IntegerField(null=True, blank=True, verbose_name='呼吸频率标准值')\\n    numberfield_respiratory_rate_up_limit = models.IntegerField(default=20.0, null=True, blank=True, verbose_name='呼吸频率上限')\\n    numberfield_respiratory_rate_down_limit = models.IntegerField(default=10.0, null=True, blank=True, verbose_name='呼吸频率下限')\\n    numberfield_hight = models.IntegerField(null=True, blank=True, verbose_name='身高')\\n    numberfield_hight_standard_value = models.IntegerField(null=True, blank=True, verbose_name='身高标准值')\\n    numberfield_hight_up_limit = models.IntegerField(null=True, blank=True, verbose_name='身高上限')\\n    numberfield_hight_down_limit = models.IntegerField(null=True, blank=True, verbose_name='身高下限')\\n    numberfield_weight = models.IntegerField(null=True, blank=True, verbose_name='体重')\\n    numberfield_weight_standard_value = models.IntegerField(null=True, blank=True, verbose_name='体重标准值')\\n    numberfield_weight_up_limit = models.IntegerField(null=True, blank=True, verbose_name='体重上限')\\n    numberfield_weight_down_limit = models.IntegerField(null=True, blank=True, verbose_name='体重下限')\\n    numberfield_body_mass_index = models.IntegerField(null=True, blank=True, verbose_name='体质指数')\\n    numberfield_body_mass_index_standard_value = models.IntegerField(null=True, blank=True, verbose_name='体质指数标准值')\\n    numberfield_body_mass_index_up_limit = models.IntegerField(default=23.9, null=True, blank=True, verbose_name='体质指数上限')\\n    numberfield_body_mass_index_down_limit = models.IntegerField(default=18.5, null=True, blank=True, verbose_name='体质指数下限')\\n    numberfield_systolic_blood_pressure = models.IntegerField(null=True, blank=True, verbose_name='收缩压')\\n    numberfield_systolic_blood_pressure_standard_value = models.IntegerField(null=True, blank=True, verbose_name='收缩压标准值')\\n    numberfield_systolic_blood_pressure_up_limit = models.IntegerField(default=139.0, null=True, blank=True, verbose_name='收缩压上限')\\n    numberfield_systolic_blood_pressure_down_limit = models.IntegerField(default=90.0, null=True, blank=True, verbose_name='收缩压下限')\\n    numberfield_diastolic_blood_pressure = models.IntegerField(null=True, blank=True, verbose_name='舒张压')\\n    numberfield_diastolic_blood_pressure_standard_value = models.IntegerField(null=True, blank=True, verbose_name='舒张压标准值')\\n    numberfield_diastolic_blood_pressure_up_limit = models.IntegerField(default=89.0, null=True, blank=True, verbose_name='舒张压上限')\\n    numberfield_diastolic_blood_pressure_down_limit = models.IntegerField(default=60.0, null=True, blank=True, verbose_name='舒张压下限')\\n    boolfield_yao_wei = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True, verbose_name='腰围')\\n    boolfield_yao_wei_standard_value = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True, verbose_name='腰围标准值')\\n    boolfield_yao_wei_up_limit = models.DecimalField(max_digits=10, decimal_places=2, default=85.0, null=True, blank=True, verbose_name='腰围上限')\\n    boolfield_yao_wei_down_limit = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True, verbose_name='腰围下限')\\n    relatedfield_athletic_ability = models.ForeignKey(Exercise_time, related_name='exercise_time_for_relatedfield_athletic_ability_A3001', on_delete=models.CASCADE, null=True, blank=True, verbose_name='运动能力')\\n    relatedfield_left_ear_hearing = models.ForeignKey(Hearing, related_name='hearing_for_relatedfield_left_ear_hearing_A3001', on_delete=models.CASCADE, null=True, blank=True, verbose_name='左耳听力')\\n    relatedfield_right_ear_hearing = models.ForeignKey(Hearing, related_name='hearing_for_relatedfield_right_ear_hearing_A3001', on_delete=models.CASCADE, null=True, blank=True, verbose_name='右耳听力')\\n    relatedfield_lips = models.ForeignKey(Lips, related_name='lips_for_relatedfield_lips_A3001', on_delete=models.CASCADE, null=True, blank=True, verbose_name='口唇')\\n    relatedfield_dentition = models.ForeignKey(Dentition, related_name='dentition_for_relatedfield_dentition_A3001', on_delete=models.CASCADE, null=True, blank=True, verbose_name='齿列')\\n    relatedfield_pharynx = models.ForeignKey(Pharynx, related_name='pharynx_for_relatedfield_pharynx_A3001', on_delete=models.CASCADE, null=True, blank=True, verbose_name='咽部')\\n    relatedfield_lower_extremity_edema = models.ForeignKey(Edema, related_name='edema_for_relatedfield_lower_extremity_edema_A3001', on_delete=models.CASCADE, null=True, blank=True, verbose_name='下肢水肿')\\n    class Meta:\\n        verbose_name = '体格检查表'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('A3001_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('A3001_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass A3001Admin(HsscFormAdmin):\\n    autocomplete_fields = [\\\"relatedfield_athletic_ability\\\", \\\"relatedfield_left_ear_hearing\\\", \\\"relatedfield_right_ear_hearing\\\", \\\"relatedfield_lips\\\", \\\"relatedfield_dentition\\\", \\\"relatedfield_pharynx\\\", \\\"relatedfield_lower_extremity_edema\\\", ]\\nadmin.site.register(A3001, A3001Admin)\\nclinic_site.register(A3001, A3001Admin)\\n\", \"forms\": \"\\nclass A3001_ModelForm(ModelForm):\\n    class Meta:\\n        model = A3001\\n        fields = ['characterfield_right_eye_vision', 'characterfield_left_eye_vision', 'numberfield_body_temperature', 'numberfield_pulse', 'numberfield_respiratory_rate', 'numberfield_hight', 'numberfield_weight', 'numberfield_body_mass_index', 'numberfield_systolic_blood_pressure', 'numberfield_diastolic_blood_pressure', 'boolfield_yao_wei', 'relatedfield_athletic_ability', 'relatedfield_left_ear_hearing', 'relatedfield_right_ear_hearing', 'relatedfield_lips', 'relatedfield_dentition', 'relatedfield_pharynx', 'relatedfield_lower_extremity_edema', ]\\n        widgets = {'relatedfield_athletic_ability': Select, 'relatedfield_left_ear_hearing': Select, 'relatedfield_right_ear_hearing': Select, 'relatedfield_lips': RadioSelect, 'relatedfield_dentition': RadioSelect, 'relatedfield_pharynx': Select, 'relatedfield_lower_extremity_edema': RadioSelect, }\\n    \"}",
            "components": [
                "dea93de2-9aa1-11ec-bde1-8a6e55faf877",
                "dea8864a-9aa1-11ec-bde1-8a6e55faf877",
                "deae47e2-9aa1-11ec-bde1-8a6e55faf877",
                "deaf1ae6-9aa1-11ec-bde1-8a6e55faf877",
                "deafc9f0-9aa1-11ec-bde1-8a6e55faf877",
                "deb08872-9aa1-11ec-bde1-8a6e55faf877",
                "deb135ec-9aa1-11ec-bde1-8a6e55faf877",
                "deb1ef6e-9aa1-11ec-bde1-8a6e55faf877",
                "deb35b74-9aa1-11ec-bde1-8a6e55faf877",
                "deb416fe-9aa1-11ec-bde1-8a6e55faf877",
                "2cc86fcc-b89b-11ec-aad8-322924405212",
                "dec54e10-9aa1-11ec-bde1-8a6e55faf877",
                "deda1db8-9aa1-11ec-bde1-8a6e55faf877",
                "dedb0962-9aa1-11ec-bde1-8a6e55faf877",
                "dedcdfee-9aa1-11ec-bde1-8a6e55faf877",
                "deddcb16-9aa1-11ec-bde1-8a6e55faf877",
                "dedebd28-9aa1-11ec-bde1-8a6e55faf877",
                "dee098fa-9aa1-11ec-bde1-8a6e55faf877"
            ],
            "components_groups": []
        },
        {
            "label": "身高体重测量",
            "name": "A3101",
            "hssc_id": "0b9d151a-9e23-11ec-aa2c-fe35a7065cdd",
            "pym": "sgtzcl",
            "name_icpc": null,
            "description": null,
            "meta_data": "{\n    \"name\": \"A3101\",\n    \"label\": \"身高体重测量\",\n    \"hssc_id\": \"0b9d151a-9e23-11ec-aa2c-fe35a7065cdd\",\n    \"fields\": [\n        {\n            \"name\": \"numberfield_hight\",\n            \"label\": \"身高\",\n            \"hssc_id\": \"deb08872-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"number\"\n        },\n        {\n            \"name\": \"numberfield_weight\",\n            \"label\": \"体重\",\n            \"hssc_id\": \"deb135ec-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"number\"\n        },\n        {\n            \"name\": \"numberfield_body_mass_index\",\n            \"label\": \"体质指数\",\n            \"hssc_id\": \"deb1ef6e-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"number\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class A3101(HsscFormModel):\\n    numberfield_hight = models.IntegerField(null=True, blank=True, verbose_name='身高')\\n    numberfield_hight_standard_value = models.IntegerField(null=True, blank=True, verbose_name='身高标准值')\\n    numberfield_hight_up_limit = models.IntegerField(null=True, blank=True, verbose_name='身高上限')\\n    numberfield_hight_down_limit = models.IntegerField(null=True, blank=True, verbose_name='身高下限')\\n    numberfield_weight = models.IntegerField(null=True, blank=True, verbose_name='体重')\\n    numberfield_weight_standard_value = models.IntegerField(null=True, blank=True, verbose_name='体重标准值')\\n    numberfield_weight_up_limit = models.IntegerField(null=True, blank=True, verbose_name='体重上限')\\n    numberfield_weight_down_limit = models.IntegerField(null=True, blank=True, verbose_name='体重下限')\\n    numberfield_body_mass_index = models.IntegerField(null=True, blank=True, verbose_name='体质指数')\\n    numberfield_body_mass_index_standard_value = models.IntegerField(null=True, blank=True, verbose_name='体质指数标准值')\\n    numberfield_body_mass_index_up_limit = models.IntegerField(default=23.9, null=True, blank=True, verbose_name='体质指数上限')\\n    numberfield_body_mass_index_down_limit = models.IntegerField(default=18.5, null=True, blank=True, verbose_name='体质指数下限')\\n    class Meta:\\n        verbose_name = '身高体重测量'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('A3101_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('A3101_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass A3101Admin(HsscFormAdmin):\\n    pass\\nadmin.site.register(A3101, A3101Admin)\\nclinic_site.register(A3101, A3101Admin)\\n\", \"forms\": \"\\nclass A3101_ModelForm(ModelForm):\\n    class Meta:\\n        model = A3101\\n        fields = ['numberfield_hight', 'numberfield_weight', 'numberfield_body_mass_index', ]\\n        \\n    \"}",
            "components": [
                "deb08872-9aa1-11ec-bde1-8a6e55faf877",
                "deb135ec-9aa1-11ec-bde1-8a6e55faf877",
                "deb1ef6e-9aa1-11ec-bde1-8a6e55faf877"
            ],
            "components_groups": []
        },
        {
            "label": "代人预约挂号",
            "name": "A6501",
            "hssc_id": "0d137dbc-9e23-11ec-aa2c-fe35a7065cdd",
            "pym": "dryygh",
            "name_icpc": "A6501",
            "description": null,
            "meta_data": "{\n    \"name\": \"A6501\",\n    \"label\": \"代人预约挂号\",\n    \"hssc_id\": \"0d137dbc-9e23-11ec-aa2c-fe35a7065cdd\",\n    \"fields\": [\n        {\n            \"name\": \"datetimefield_ri_qi_shi_jian\",\n            \"label\": \"预约时间\",\n            \"hssc_id\": \"deb85c6e-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"datetime\"\n        },\n        {\n            \"name\": \"boolfield_ze_ren_ren\",\n            \"label\": \"责任人\",\n            \"hssc_id\": \"401d33d8-aa49-11ec-9f15-ee7ade4bced6\",\n            \"type\": \"Staff\",\n            \"app_label\": \"\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class A6501(HsscFormModel):\\n    datetimefield_ri_qi_shi_jian = models.DateTimeField(null=True, blank=True, verbose_name='预约时间')\\n    boolfield_ze_ren_ren = models.ForeignKey(Staff, related_name='staff_for_boolfield_ze_ren_ren_A6501', on_delete=models.CASCADE, null=True, blank=True, verbose_name='责任人')\\n    class Meta:\\n        verbose_name = '代人预约挂号'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('A6501_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('A6501_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass A6501Admin(HsscFormAdmin):\\n    autocomplete_fields = [\\\"boolfield_ze_ren_ren\\\", ]\\nadmin.site.register(A6501, A6501Admin)\\nclinic_site.register(A6501, A6501Admin)\\n\", \"forms\": \"\\nclass A6501_ModelForm(ModelForm):\\n    class Meta:\\n        model = A6501\\n        fields = ['datetimefield_ri_qi_shi_jian', 'boolfield_ze_ren_ren', ]\\n        widgets = {'boolfield_ze_ren_ren': Select, }\\n    \"}",
            "components": [
                "deb85c6e-9aa1-11ec-bde1-8a6e55faf877",
                "401d33d8-aa49-11ec-9f15-ee7ade4bced6"
            ],
            "components_groups": []
        },
        {
            "label": "糖尿病自我监测",
            "name": "T4505",
            "hssc_id": "0d3821bc-9e23-11ec-aa2c-fe35a7065cdd",
            "pym": "tnbzwjc",
            "name_icpc": null,
            "description": null,
            "meta_data": "{\n    \"name\": \"T4505\",\n    \"label\": \"糖尿病自我监测\",\n    \"hssc_id\": \"0d3821bc-9e23-11ec-aa2c-fe35a7065cdd\",\n    \"fields\": [\n        {\n            \"name\": \"numberfield_kong_fu_xue_tang\",\n            \"label\": \"空腹血糖\",\n            \"hssc_id\": \"deb59434-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"number\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class T4505(HsscFormModel):\\n    numberfield_kong_fu_xue_tang = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True, verbose_name='空腹血糖')\\n    numberfield_kong_fu_xue_tang_standard_value = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True, verbose_name='空腹血糖标准值')\\n    numberfield_kong_fu_xue_tang_up_limit = models.DecimalField(max_digits=10, decimal_places=2, default=7.0, null=True, blank=True, verbose_name='空腹血糖上限')\\n    numberfield_kong_fu_xue_tang_down_limit = models.DecimalField(max_digits=10, decimal_places=2, default=3.9, null=True, blank=True, verbose_name='空腹血糖下限')\\n    class Meta:\\n        verbose_name = '糖尿病自我监测'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('T4505_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('T4505_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass T4505Admin(HsscFormAdmin):\\n    pass\\nadmin.site.register(T4505, T4505Admin)\\nclinic_site.register(T4505, T4505Admin)\\n\", \"forms\": \"\\nclass T4505_ModelForm(ModelForm):\\n    class Meta:\\n        model = T4505\\n        fields = ['numberfield_kong_fu_xue_tang', ]\\n        \\n    \"}",
            "components": [
                "deb59434-9aa1-11ec-bde1-8a6e55faf877"
            ],
            "components_groups": []
        },
        {
            "label": "重大生活事件调查",
            "name": "A6211",
            "hssc_id": "0bfb5648-9e23-11ec-aa2c-fe35a7065cdd",
            "pym": "zdshsjdc",
            "name_icpc": "A6211",
            "description": null,
            "meta_data": "{\n    \"name\": \"A6211\",\n    \"label\": \"重大生活事件调查\",\n    \"hssc_id\": \"0bfb5648-9e23-11ec-aa2c-fe35a7065cdd\",\n    \"fields\": [\n        {\n            \"name\": \"datetimefield_date\",\n            \"label\": \"手术日期\",\n            \"hssc_id\": \"deb645d2-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"datetime\"\n        },\n        {\n            \"name\": \"relatedfield_major_life\",\n            \"label\": \"生活事件\",\n            \"hssc_id\": \"dedfa5b2-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Life_event\",\n            \"app_label\": \"\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class A6211(HsscFormModel):\\n    datetimefield_date = models.DateField(null=True, blank=True, verbose_name='手术日期')\\n    relatedfield_major_life = models.ManyToManyField(Life_event, related_name='life_event_for_relatedfield_major_life_A6211', verbose_name='生活事件')\\n    class Meta:\\n        verbose_name = '重大生活事件调查'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('A6211_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('A6211_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass A6211Admin(HsscFormAdmin):\\n    autocomplete_fields = [\\\"relatedfield_major_life\\\", ]\\nadmin.site.register(A6211, A6211Admin)\\nclinic_site.register(A6211, A6211Admin)\\n\", \"forms\": \"\\nclass A6211_ModelForm(ModelForm):\\n    class Meta:\\n        model = A6211\\n        fields = ['datetimefield_date', 'relatedfield_major_life', ]\\n        widgets = {'relatedfield_major_life': CheckboxSelectMultiple, }\\n    \"}",
            "components": [
                "deb645d2-9aa1-11ec-bde1-8a6e55faf877",
                "dedfa5b2-9aa1-11ec-bde1-8a6e55faf877"
            ],
            "components_groups": []
        },
        {
            "label": "尿常规检查",
            "name": "A3502",
            "hssc_id": "2abcc130-b092-11ec-9cae-5ed0e34457d3",
            "pym": "ncgjc",
            "name_icpc": "A3502",
            "description": null,
            "meta_data": "{\n    \"name\": \"A3502\",\n    \"label\": \"尿常规检查\",\n    \"hssc_id\": \"2abcc130-b092-11ec-9cae-5ed0e34457d3\",\n    \"fields\": [\n        {\n            \"name\": \"boolfield_niao_tang\",\n            \"label\": \"尿糖\",\n            \"hssc_id\": \"f9eed08e-b091-11ec-b42a-5ed0e34457d3\",\n            \"type\": \"Niao_tang\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"boolfield_dan_bai_zhi\",\n            \"label\": \"蛋白质\",\n            \"hssc_id\": \"04381988-b092-11ec-b42a-5ed0e34457d3\",\n            \"type\": \"Dan_bai_zhi\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"boolfield_tong_ti\",\n            \"label\": \"尿酮体\",\n            \"hssc_id\": \"15957162-b092-11ec-b42a-5ed0e34457d3\",\n            \"type\": \"Tong_ti\",\n            \"app_label\": \"\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class A3502(HsscFormModel):\\n    boolfield_niao_tang = models.ForeignKey(Niao_tang, related_name='niao_tang_for_boolfield_niao_tang_A3502', on_delete=models.CASCADE, null=True, blank=True, verbose_name='尿糖')\\n    boolfield_dan_bai_zhi = models.ForeignKey(Dan_bai_zhi, related_name='dan_bai_zhi_for_boolfield_dan_bai_zhi_A3502', on_delete=models.CASCADE, null=True, blank=True, verbose_name='蛋白质')\\n    boolfield_tong_ti = models.ForeignKey(Tong_ti, related_name='tong_ti_for_boolfield_tong_ti_A3502', on_delete=models.CASCADE, null=True, blank=True, verbose_name='尿酮体')\\n    class Meta:\\n        verbose_name = '尿常规检查'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('A3502_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('A3502_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass A3502Admin(HsscFormAdmin):\\n    autocomplete_fields = [\\\"boolfield_niao_tang\\\", \\\"boolfield_dan_bai_zhi\\\", \\\"boolfield_tong_ti\\\", ]\\nadmin.site.register(A3502, A3502Admin)\\nclinic_site.register(A3502, A3502Admin)\\n\", \"forms\": \"\\nclass A3502_ModelForm(ModelForm):\\n    class Meta:\\n        model = A3502\\n        fields = ['boolfield_niao_tang', 'boolfield_dan_bai_zhi', 'boolfield_tong_ti', ]\\n        widgets = {'boolfield_niao_tang': Select, 'boolfield_dan_bai_zhi': Select, 'boolfield_tong_ti': Select, }\\n    \"}",
            "components": [
                "f9eed08e-b091-11ec-b42a-5ed0e34457d3",
                "04381988-b092-11ec-b42a-5ed0e34457d3",
                "15957162-b092-11ec-b42a-5ed0e34457d3"
            ],
            "components_groups": []
        },
        {
            "label": "营养干预",
            "name": "T4501",
            "hssc_id": "69c663ea-a4c6-11ec-a7bb-cecec7a0e139",
            "pym": "yygy",
            "name_icpc": "T4501",
            "description": null,
            "meta_data": "{\n    \"name\": \"T4501\",\n    \"label\": \"营养干预\",\n    \"hssc_id\": \"69c663ea-a4c6-11ec-a7bb-cecec7a0e139\",\n    \"fields\": [\n        {\n            \"name\": \"T4501\",\n            \"label\": \"营养干预\",\n            \"hssc_id\": \"abc77c0a-a4c3-11ec-8f29-cecec7a0e139\",\n            \"type\": \"Icpc8_other_health_interventions\",\n            \"app_label\": \"\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class T4501(HsscFormModel):\\n    T4501 = models.ManyToManyField(Icpc8_other_health_interventions, related_name='icpc8_other_health_interventions_for_T4501_T4501', verbose_name='营养干预')\\n    class Meta:\\n        verbose_name = '营养干预'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('T4501_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('T4501_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass T4501Admin(HsscFormAdmin):\\n    autocomplete_fields = [\\\"T4501\\\", ]\\nadmin.site.register(T4501, T4501Admin)\\nclinic_site.register(T4501, T4501Admin)\\n\", \"forms\": \"\\nclass T4501_ModelForm(ModelForm):\\n    class Meta:\\n        model = T4501\\n        fields = ['T4501', ]\\n        widgets = {'T4501': SelectMultiple, }\\n    \"}",
            "components": [
                "abc77c0a-a4c3-11ec-8f29-cecec7a0e139"
            ],
            "components_groups": []
        },
        {
            "label": "过敏史",
            "name": "A6207",
            "hssc_id": "0b54db10-9e23-11ec-aa2c-fe35a7065cdd",
            "pym": "gms",
            "name_icpc": "A6207",
            "description": null,
            "meta_data": "{\n    \"name\": \"A6207\",\n    \"label\": \"过敏史\",\n    \"hssc_id\": \"0b54db10-9e23-11ec-aa2c-fe35a7065cdd\",\n    \"fields\": [\n        {\n            \"name\": \"relatedfield_drug_name\",\n            \"label\": \"药品名称\",\n            \"hssc_id\": \"dec637d0-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Medicine\",\n            \"app_label\": \"\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class A6207(HsscFormModel):\\n    relatedfield_drug_name = models.ManyToManyField(Medicine, related_name='medicine_for_relatedfield_drug_name_A6207', verbose_name='药品名称')\\n    class Meta:\\n        verbose_name = '过敏史'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('A6207_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('A6207_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass A6207Admin(HsscFormAdmin):\\n    autocomplete_fields = [\\\"relatedfield_drug_name\\\", ]\\nadmin.site.register(A6207, A6207Admin)\\nclinic_site.register(A6207, A6207Admin)\\n\", \"forms\": \"\\nclass A6207_ModelForm(ModelForm):\\n    class Meta:\\n        model = A6207\\n        fields = ['relatedfield_drug_name', ]\\n        widgets = {'relatedfield_drug_name': SelectMultiple, }\\n    \"}",
            "components": [
                "dec637d0-9aa1-11ec-bde1-8a6e55faf877"
            ],
            "components_groups": []
        },
        {
            "label": "外伤史",
            "name": "A6206",
            "hssc_id": "0ba83c56-9e23-11ec-aa2c-fe35a7065cdd",
            "pym": "wss",
            "name_icpc": "A6206",
            "description": null,
            "meta_data": "{\n    \"name\": \"A6206\",\n    \"label\": \"外伤史\",\n    \"hssc_id\": \"0ba83c56-9e23-11ec-aa2c-fe35a7065cdd\",\n    \"fields\": [\n        {\n            \"name\": \"boolfield_wai_shang_ri_qi\",\n            \"label\": \"外伤日期\",\n            \"hssc_id\": \"35091e02-c9ee-11ec-b369-168d53e8234e\",\n            \"type\": \"datetime\"\n        },\n        {\n            \"name\": \"boolfield_wai_shang_xing_ji_bing\",\n            \"label\": \"外伤性疾病\",\n            \"hssc_id\": \"df91ce4e-cab3-11ec-b358-8e39d789b675\",\n            \"type\": \"Icpc5_evaluation_and_diagnoses\",\n            \"app_label\": \"\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class A6206(HsscFormModel):\\n    boolfield_wai_shang_ri_qi = models.DateField(null=True, blank=True, verbose_name='外伤日期')\\n    boolfield_wai_shang_xing_ji_bing = models.ForeignKey(Icpc5_evaluation_and_diagnoses, related_name='icpc5_evaluation_and_diagnoses_for_boolfield_wai_shang_xing_ji_bing_A6206', on_delete=models.CASCADE, null=True, blank=True, verbose_name='外伤性疾病')\\n    class Meta:\\n        verbose_name = '外伤史'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('A6206_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('A6206_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass A6206Admin(HsscFormAdmin):\\n    autocomplete_fields = [\\\"boolfield_wai_shang_xing_ji_bing\\\", ]\\nadmin.site.register(A6206, A6206Admin)\\nclinic_site.register(A6206, A6206Admin)\\n\", \"forms\": \"\\nclass A6206_ModelForm(ModelForm):\\n    class Meta:\\n        model = A6206\\n        fields = ['boolfield_wai_shang_ri_qi', 'boolfield_wai_shang_xing_ji_bing', ]\\n        widgets = {'boolfield_wai_shang_xing_ji_bing': Select, }\\n    \"}",
            "components": [
                "35091e02-c9ee-11ec-b369-168d53e8234e",
                "df91ce4e-cab3-11ec-b358-8e39d789b675"
            ],
            "components_groups": []
        },
        {
            "label": "生命体征检查",
            "name": "A3103",
            "hssc_id": "0b8fdf12-9e23-11ec-aa2c-fe35a7065cdd",
            "pym": "smtzjc",
            "name_icpc": "A3103",
            "description": null,
            "meta_data": "{\n    \"name\": \"A3103\",\n    \"label\": \"生命体征检查\",\n    \"hssc_id\": \"0b8fdf12-9e23-11ec-aa2c-fe35a7065cdd\",\n    \"fields\": [\n        {\n            \"name\": \"numberfield_body_temperature\",\n            \"label\": \"体温\",\n            \"hssc_id\": \"deae47e2-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"number\"\n        },\n        {\n            \"name\": \"numberfield_pulse\",\n            \"label\": \"脉搏\",\n            \"hssc_id\": \"deaf1ae6-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"number\"\n        },\n        {\n            \"name\": \"numberfield_respiratory_rate\",\n            \"label\": \"呼吸频率\",\n            \"hssc_id\": \"deafc9f0-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"number\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class A3103(HsscFormModel):\\n    numberfield_body_temperature = models.IntegerField(null=True, blank=True, verbose_name='体温')\\n    numberfield_body_temperature_standard_value = models.IntegerField(null=True, blank=True, verbose_name='体温标准值')\\n    numberfield_body_temperature_up_limit = models.IntegerField(default=37.4, null=True, blank=True, verbose_name='体温上限')\\n    numberfield_body_temperature_down_limit = models.IntegerField(default=36.0, null=True, blank=True, verbose_name='体温下限')\\n    numberfield_pulse = models.IntegerField(null=True, blank=True, verbose_name='脉搏')\\n    numberfield_pulse_standard_value = models.IntegerField(null=True, blank=True, verbose_name='脉搏标准值')\\n    numberfield_pulse_up_limit = models.IntegerField(default=100.0, null=True, blank=True, verbose_name='脉搏上限')\\n    numberfield_pulse_down_limit = models.IntegerField(default=60.0, null=True, blank=True, verbose_name='脉搏下限')\\n    numberfield_respiratory_rate = models.IntegerField(null=True, blank=True, verbose_name='呼吸频率')\\n    numberfield_respiratory_rate_standard_value = models.IntegerField(null=True, blank=True, verbose_name='呼吸频率标准值')\\n    numberfield_respiratory_rate_up_limit = models.IntegerField(default=20.0, null=True, blank=True, verbose_name='呼吸频率上限')\\n    numberfield_respiratory_rate_down_limit = models.IntegerField(default=10.0, null=True, blank=True, verbose_name='呼吸频率下限')\\n    class Meta:\\n        verbose_name = '生命体征检查'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('A3103_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('A3103_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass A3103Admin(HsscFormAdmin):\\n    pass\\nadmin.site.register(A3103, A3103Admin)\\nclinic_site.register(A3103, A3103Admin)\\n\", \"forms\": \"\\nclass A3103_ModelForm(ModelForm):\\n    class Meta:\\n        model = A3103\\n        fields = ['numberfield_body_temperature', 'numberfield_pulse', 'numberfield_respiratory_rate', ]\\n        \\n    \"}",
            "components": [
                "deae47e2-9aa1-11ec-bde1-8a6e55faf877",
                "deaf1ae6-9aa1-11ec-bde1-8a6e55faf877",
                "deafc9f0-9aa1-11ec-bde1-8a6e55faf877"
            ],
            "components_groups": []
        },
        {
            "label": "个人适应能力评估",
            "name": "A6215",
            "hssc_id": "0b648650-9e23-11ec-aa2c-fe35a7065cdd",
            "pym": "grsynlpg",
            "name_icpc": "A6215",
            "description": null,
            "meta_data": "{\n    \"name\": \"A6215\",\n    \"label\": \"个人适应能力评估\",\n    \"hssc_id\": \"0b648650-9e23-11ec-aa2c-fe35a7065cdd\",\n    \"fields\": [\n        {\n            \"name\": \"characterfield_working_hours_per_day\",\n            \"label\": \"每天工作及工作往返总时长\",\n            \"hssc_id\": \"de9bbcf8-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"relatedfield_are_you_satisfied_with_the_job_and_life\",\n            \"label\": \"对目前生活和工作满意吗\",\n            \"hssc_id\": \"dec7ec2e-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Satisfaction\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"relatedfield_are_you_satisfied_with_your_adaptability\",\n            \"label\": \"对自己的适应能力满意吗\",\n            \"hssc_id\": \"dec8f9a2-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Satisfaction\",\n            \"app_label\": \"\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class A6215(HsscFormModel):\\n    characterfield_working_hours_per_day = models.TextField(max_length=255, null=True, blank=True, verbose_name='每天工作及工作往返总时长')\\n    relatedfield_are_you_satisfied_with_the_job_and_life = models.ForeignKey(Satisfaction, related_name='satisfaction_for_relatedfield_are_you_satisfied_with_the_job_and_life_A6215', on_delete=models.CASCADE, null=True, blank=True, verbose_name='对目前生活和工作满意吗')\\n    relatedfield_are_you_satisfied_with_your_adaptability = models.ForeignKey(Satisfaction, related_name='satisfaction_for_relatedfield_are_you_satisfied_with_your_adaptability_A6215', on_delete=models.CASCADE, null=True, blank=True, verbose_name='对自己的适应能力满意吗')\\n    class Meta:\\n        verbose_name = '个人适应能力评估'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('A6215_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('A6215_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass A6215Admin(HsscFormAdmin):\\n    autocomplete_fields = [\\\"relatedfield_are_you_satisfied_with_the_job_and_life\\\", \\\"relatedfield_are_you_satisfied_with_your_adaptability\\\", ]\\nadmin.site.register(A6215, A6215Admin)\\nclinic_site.register(A6215, A6215Admin)\\n\", \"forms\": \"\\nclass A6215_ModelForm(ModelForm):\\n    class Meta:\\n        model = A6215\\n        fields = ['characterfield_working_hours_per_day', 'relatedfield_are_you_satisfied_with_the_job_and_life', 'relatedfield_are_you_satisfied_with_your_adaptability', ]\\n        widgets = {'relatedfield_are_you_satisfied_with_the_job_and_life': Select, 'relatedfield_are_you_satisfied_with_your_adaptability': Select, }\\n    \"}",
            "components": [
                "de9bbcf8-9aa1-11ec-bde1-8a6e55faf877",
                "dec7ec2e-9aa1-11ec-bde1-8a6e55faf877",
                "dec8f9a2-9aa1-11ec-bde1-8a6e55faf877"
            ],
            "components_groups": []
        },
        {
            "label": "用户注册",
            "name": "Z6201",
            "hssc_id": "0c314e38-9e23-11ec-aa2c-fe35a7065cdd",
            "pym": "yhzc",
            "name_icpc": "Z6201",
            "description": null,
            "meta_data": "{\n    \"name\": \"Z6201\",\n    \"label\": \"用户注册\",\n    \"hssc_id\": \"0c314e38-9e23-11ec-aa2c-fe35a7065cdd\",\n    \"fields\": [\n        {\n            \"name\": \"characterfield_name\",\n            \"label\": \"姓名\",\n            \"hssc_id\": \"de9de26c-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"characterfield_gender\",\n            \"label\": \"性别\",\n            \"hssc_id\": \"de9e99dc-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"characterfield_age\",\n            \"label\": \"年龄\",\n            \"hssc_id\": \"de9f4ea4-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"characterhssc_identification_number\",\n            \"label\": \"身份证号码\",\n            \"hssc_id\": \"dea0045c-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"characterfield_contact_address\",\n            \"label\": \"联系地址\",\n            \"hssc_id\": \"dea1797c-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"characterfield_password_setting\",\n            \"label\": \"密码设置\",\n            \"hssc_id\": \"dea37b46-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"characterfield_confirm_password\",\n            \"label\": \"确认密码\",\n            \"hssc_id\": \"dea437ac-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"datetimefield_date_of_birth\",\n            \"label\": \"出生日期\",\n            \"hssc_id\": \"deb7b0ac-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"datetime\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class Z6201(HsscFormModel):\\n    characterfield_name = models.CharField(max_length=255, null=True, blank=True, verbose_name='姓名')\\n    characterfield_gender = models.CharField(max_length=255, null=True, blank=True, verbose_name='性别')\\n    characterfield_age = models.CharField(max_length=255, null=True, blank=True, verbose_name='年龄')\\n    characterhssc_identification_number = models.CharField(max_length=255, null=True, blank=True, verbose_name='身份证号码')\\n    characterfield_contact_address = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系地址')\\n    characterfield_password_setting = models.CharField(max_length=255, null=True, blank=True, verbose_name='密码设置')\\n    characterfield_confirm_password = models.CharField(max_length=255, null=True, blank=True, verbose_name='确认密码')\\n    datetimefield_date_of_birth = models.DateTimeField(null=True, blank=True, verbose_name='出生日期')\\n    class Meta:\\n        verbose_name = '用户注册'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('Z6201_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('Z6201_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass Z6201Admin(HsscFormAdmin):\\n    pass\\nadmin.site.register(Z6201, Z6201Admin)\\nclinic_site.register(Z6201, Z6201Admin)\\n\", \"forms\": \"\\nclass Z6201_ModelForm(ModelForm):\\n    class Meta:\\n        model = Z6201\\n        fields = ['characterfield_name', 'characterfield_gender', 'characterfield_age', 'characterhssc_identification_number', 'characterfield_contact_address', 'characterfield_password_setting', 'characterfield_confirm_password', 'datetimefield_date_of_birth', ]\\n        \\n    \"}",
            "components": [
                "de9de26c-9aa1-11ec-bde1-8a6e55faf877",
                "de9e99dc-9aa1-11ec-bde1-8a6e55faf877",
                "de9f4ea4-9aa1-11ec-bde1-8a6e55faf877",
                "dea0045c-9aa1-11ec-bde1-8a6e55faf877",
                "dea1797c-9aa1-11ec-bde1-8a6e55faf877",
                "dea37b46-9aa1-11ec-bde1-8a6e55faf877",
                "dea437ac-9aa1-11ec-bde1-8a6e55faf877",
                "deb7b0ac-9aa1-11ec-bde1-8a6e55faf877"
            ],
            "components_groups": []
        },
        {
            "label": "空腹血糖检查",
            "name": "T3404",
            "hssc_id": "0c3bd51a-9e23-11ec-aa2c-fe35a7065cdd",
            "pym": "kfxtjc",
            "name_icpc": "T3404",
            "description": null,
            "meta_data": "{\n    \"name\": \"T3404\",\n    \"label\": \"空腹血糖检查\",\n    \"hssc_id\": \"0c3bd51a-9e23-11ec-aa2c-fe35a7065cdd\",\n    \"fields\": [\n        {\n            \"name\": \"numberfield_kong_fu_xue_tang\",\n            \"label\": \"空腹血糖\",\n            \"hssc_id\": \"deb59434-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"number\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class T3404(HsscFormModel):\\n    numberfield_kong_fu_xue_tang = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True, verbose_name='空腹血糖')\\n    numberfield_kong_fu_xue_tang_standard_value = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True, verbose_name='空腹血糖标准值')\\n    numberfield_kong_fu_xue_tang_up_limit = models.DecimalField(max_digits=10, decimal_places=2, default=7.0, null=True, blank=True, verbose_name='空腹血糖上限')\\n    numberfield_kong_fu_xue_tang_down_limit = models.DecimalField(max_digits=10, decimal_places=2, default=3.9, null=True, blank=True, verbose_name='空腹血糖下限')\\n    class Meta:\\n        verbose_name = '空腹血糖检查'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('T3404_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('T3404_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass T3404Admin(HsscFormAdmin):\\n    pass\\nadmin.site.register(T3404, T3404Admin)\\nclinic_site.register(T3404, T3404Admin)\\n\", \"forms\": \"\\nclass T3404_ModelForm(ModelForm):\\n    class Meta:\\n        model = T3404\\n        fields = ['numberfield_kong_fu_xue_tang', ]\\n        \\n    \"}",
            "components": [
                "deb59434-9aa1-11ec-bde1-8a6e55faf877"
            ],
            "components_groups": []
        },
        {
            "label": "听力检查",
            "name": "A3110",
            "hssc_id": "0bdf33a0-9e23-11ec-aa2c-fe35a7065cdd",
            "pym": "tljc",
            "name_icpc": "A3110",
            "description": null,
            "meta_data": "{\n    \"name\": \"A3110\",\n    \"label\": \"听力检查\",\n    \"hssc_id\": \"0bdf33a0-9e23-11ec-aa2c-fe35a7065cdd\",\n    \"fields\": [\n        {\n            \"name\": \"relatedfield_left_ear_hearing\",\n            \"label\": \"左耳听力\",\n            \"hssc_id\": \"deda1db8-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Hearing\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"relatedfield_right_ear_hearing\",\n            \"label\": \"右耳听力\",\n            \"hssc_id\": \"dedb0962-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Hearing\",\n            \"app_label\": \"\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class A3110(HsscFormModel):\\n    relatedfield_left_ear_hearing = models.ForeignKey(Hearing, related_name='hearing_for_relatedfield_left_ear_hearing_A3110', on_delete=models.CASCADE, null=True, blank=True, verbose_name='左耳听力')\\n    relatedfield_right_ear_hearing = models.ForeignKey(Hearing, related_name='hearing_for_relatedfield_right_ear_hearing_A3110', on_delete=models.CASCADE, null=True, blank=True, verbose_name='右耳听力')\\n    class Meta:\\n        verbose_name = '听力检查'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('A3110_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('A3110_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass A3110Admin(HsscFormAdmin):\\n    autocomplete_fields = [\\\"relatedfield_left_ear_hearing\\\", \\\"relatedfield_right_ear_hearing\\\", ]\\nadmin.site.register(A3110, A3110Admin)\\nclinic_site.register(A3110, A3110Admin)\\n\", \"forms\": \"\\nclass A3110_ModelForm(ModelForm):\\n    class Meta:\\n        model = A3110\\n        fields = ['relatedfield_left_ear_hearing', 'relatedfield_right_ear_hearing', ]\\n        widgets = {'relatedfield_left_ear_hearing': Select, 'relatedfield_right_ear_hearing': Select, }\\n    \"}",
            "components": [
                "deda1db8-9aa1-11ec-bde1-8a6e55faf877",
                "dedb0962-9aa1-11ec-bde1-8a6e55faf877"
            ],
            "components_groups": []
        },
        {
            "label": "社会环境评估",
            "name": "A6216",
            "hssc_id": "0b86f50a-9e23-11ec-aa2c-fe35a7065cdd",
            "pym": "shhjpg",
            "name_icpc": "A6216",
            "description": null,
            "meta_data": "{\n    \"name\": \"A6216\",\n    \"label\": \"社会环境评估\",\n    \"hssc_id\": \"0b86f50a-9e23-11ec-aa2c-fe35a7065cdd\",\n    \"fields\": [\n        {\n            \"name\": \"relatedfield_is_the_living_environment_satisfactory\",\n            \"label\": \"您对居住环境满意吗\",\n            \"hssc_id\": \"ded110f6-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Satisfaction\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"relatedfield_is_the_transportation_convenient\",\n            \"label\": \"您所在的社区交通方便吗\",\n            \"hssc_id\": \"ded206d2-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Convenience\",\n            \"app_label\": \"\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class A6216(HsscFormModel):\\n    relatedfield_is_the_living_environment_satisfactory = models.ForeignKey(Satisfaction, related_name='satisfaction_for_relatedfield_is_the_living_environment_satisfactory_A6216', on_delete=models.CASCADE, null=True, blank=True, verbose_name='您对居住环境满意吗')\\n    relatedfield_is_the_transportation_convenient = models.ForeignKey(Convenience, related_name='convenience_for_relatedfield_is_the_transportation_convenient_A6216', on_delete=models.CASCADE, null=True, blank=True, verbose_name='您所在的社区交通方便吗')\\n    class Meta:\\n        verbose_name = '社会环境评估'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('A6216_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('A6216_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass A6216Admin(HsscFormAdmin):\\n    autocomplete_fields = [\\\"relatedfield_is_the_living_environment_satisfactory\\\", \\\"relatedfield_is_the_transportation_convenient\\\", ]\\nadmin.site.register(A6216, A6216Admin)\\nclinic_site.register(A6216, A6216Admin)\\n\", \"forms\": \"\\nclass A6216_ModelForm(ModelForm):\\n    class Meta:\\n        model = A6216\\n        fields = ['relatedfield_is_the_living_environment_satisfactory', 'relatedfield_is_the_transportation_convenient', ]\\n        widgets = {'relatedfield_is_the_living_environment_satisfactory': Select, 'relatedfield_is_the_transportation_convenient': Select, }\\n    \"}",
            "components": [
                "ded110f6-9aa1-11ec-bde1-8a6e55faf877",
                "ded206d2-9aa1-11ec-bde1-8a6e55faf877"
            ],
            "components_groups": []
        },
        {
            "label": "门诊医生问诊",
            "name": "A6218",
            "hssc_id": "0c75d8a0-9e23-11ec-aa2c-fe35a7065cdd",
            "pym": "mzyswz",
            "name_icpc": "A6218",
            "description": null,
            "meta_data": "{\n    \"name\": \"A6218\",\n    \"label\": \"门诊医生问诊\",\n    \"hssc_id\": \"0c75d8a0-9e23-11ec-aa2c-fe35a7065cdd\",\n    \"fields\": [\n        {\n            \"name\": \"characterfield_supplementary_description_of_the_condition\",\n            \"label\": \"病情补充描述\",\n            \"hssc_id\": \"de9ad1a8-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"relatedfield_symptom_list\",\n            \"label\": \"症状\",\n            \"hssc_id\": \"deb93f26-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Icpc3_symptoms_and_problems\",\n            \"app_label\": \"\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class A6218(HsscFormModel):\\n    characterfield_supplementary_description_of_the_condition = models.CharField(max_length=255, null=True, blank=True, verbose_name='病情补充描述')\\n    relatedfield_symptom_list = models.ManyToManyField(Icpc3_symptoms_and_problems, related_name='icpc3_symptoms_and_problems_for_relatedfield_symptom_list_A6218', verbose_name='症状')\\n    class Meta:\\n        verbose_name = '门诊医生问诊'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('A6218_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('A6218_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass A6218Admin(HsscFormAdmin):\\n    autocomplete_fields = [\\\"relatedfield_symptom_list\\\", ]\\nadmin.site.register(A6218, A6218Admin)\\nclinic_site.register(A6218, A6218Admin)\\n\", \"forms\": \"\\nclass A6218_ModelForm(ModelForm):\\n    class Meta:\\n        model = A6218\\n        fields = ['characterfield_supplementary_description_of_the_condition', 'relatedfield_symptom_list', ]\\n        widgets = {'relatedfield_symptom_list': SelectMultiple, }\\n    \"}",
            "components": [
                "de9ad1a8-9aa1-11ec-bde1-8a6e55faf877",
                "deb93f26-9aa1-11ec-bde1-8a6e55faf877"
            ],
            "components_groups": []
        },
        {
            "label": "手术史",
            "name": "A6205",
            "hssc_id": "0beb43fc-9e23-11ec-aa2c-fe35a7065cdd",
            "pym": "sss",
            "name_icpc": "A6205",
            "description": null,
            "meta_data": "{\n    \"name\": \"A6205\",\n    \"label\": \"手术史\",\n    \"hssc_id\": \"0beb43fc-9e23-11ec-aa2c-fe35a7065cdd\",\n    \"fields\": [\n        {\n            \"name\": \"datetimefield_date\",\n            \"label\": \"手术日期\",\n            \"hssc_id\": \"deb645d2-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"datetime\"\n        },\n        {\n            \"name\": \"relatedfield_name_of_operation\",\n            \"label\": \"手术名称\",\n            \"hssc_id\": \"dedbea3a-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Icpc7_treatments\",\n            \"app_label\": \"\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class A6205(HsscFormModel):\\n    datetimefield_date = models.DateField(null=True, blank=True, verbose_name='手术日期')\\n    relatedfield_name_of_operation = models.ForeignKey(Icpc7_treatments, related_name='icpc7_treatments_for_relatedfield_name_of_operation_A6205', on_delete=models.CASCADE, null=True, blank=True, verbose_name='手术名称')\\n    class Meta:\\n        verbose_name = '手术史'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('A6205_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('A6205_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass A6205Admin(HsscFormAdmin):\\n    autocomplete_fields = [\\\"relatedfield_name_of_operation\\\", ]\\nadmin.site.register(A6205, A6205Admin)\\nclinic_site.register(A6205, A6205Admin)\\n\", \"forms\": \"\\nclass A6205_ModelForm(ModelForm):\\n    class Meta:\\n        model = A6205\\n        fields = ['datetimefield_date', 'relatedfield_name_of_operation', ]\\n        widgets = {'relatedfield_name_of_operation': RadioSelect, }\\n    \"}",
            "components": [
                "deb645d2-9aa1-11ec-bde1-8a6e55faf877",
                "dedbea3a-9aa1-11ec-bde1-8a6e55faf877"
            ],
            "components_groups": []
        },
        {
            "label": "个人身体健康评估",
            "name": "A6214",
            "hssc_id": "0b787836-9e23-11ec-aa2c-fe35a7065cdd",
            "pym": "grstjkpg",
            "name_icpc": "A6214",
            "description": null,
            "meta_data": "{\n    \"name\": \"A6214\",\n    \"label\": \"个人身体健康评估\",\n    \"hssc_id\": \"0b787836-9e23-11ec-aa2c-fe35a7065cdd\",\n    \"fields\": [\n        {\n            \"name\": \"relatedfield_own_health\",\n            \"label\": \"觉得自身健康状况如何\",\n            \"hssc_id\": \"decc7fdc-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"State_degree\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"relatedfield_compared_to_last_year\",\n            \"label\": \"较之过去一年状态如何\",\n            \"hssc_id\": \"decd7c7a-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Comparative_expression\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"relatedfield_sports_preference\",\n            \"label\": \"运动偏好\",\n            \"hssc_id\": \"dece6cde-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Sports_preference\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"relatedfield_exercise_time\",\n            \"label\": \"运动时长\",\n            \"hssc_id\": \"decf4d66-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Exercise_time\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"relatedfield_have_any_recent_symptoms_of_physical_discomfort\",\n            \"label\": \"近来有无身体不适症状\",\n            \"hssc_id\": \"ded02d26-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Icpc3_symptoms_and_problems\",\n            \"app_label\": \"\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class A6214(HsscFormModel):\\n    relatedfield_own_health = models.ForeignKey(State_degree, related_name='state_degree_for_relatedfield_own_health_A6214', on_delete=models.CASCADE, null=True, blank=True, verbose_name='觉得自身健康状况如何')\\n    relatedfield_compared_to_last_year = models.ForeignKey(Comparative_expression, related_name='comparative_expression_for_relatedfield_compared_to_last_year_A6214', on_delete=models.CASCADE, null=True, blank=True, verbose_name='较之过去一年状态如何')\\n    relatedfield_sports_preference = models.ForeignKey(Sports_preference, related_name='sports_preference_for_relatedfield_sports_preference_A6214', on_delete=models.CASCADE, null=True, blank=True, verbose_name='运动偏好')\\n    relatedfield_exercise_time = models.ForeignKey(Exercise_time, related_name='exercise_time_for_relatedfield_exercise_time_A6214', on_delete=models.CASCADE, null=True, blank=True, verbose_name='运动时长')\\n    relatedfield_have_any_recent_symptoms_of_physical_discomfort = models.ManyToManyField(Icpc3_symptoms_and_problems, related_name='icpc3_symptoms_and_problems_for_relatedfield_have_any_recent_symptoms_of_physical_discomfort_A6214', verbose_name='近来有无身体不适症状')\\n    class Meta:\\n        verbose_name = '个人身体健康评估'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('A6214_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('A6214_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass A6214Admin(HsscFormAdmin):\\n    autocomplete_fields = [\\\"relatedfield_own_health\\\", \\\"relatedfield_compared_to_last_year\\\", \\\"relatedfield_sports_preference\\\", \\\"relatedfield_exercise_time\\\", \\\"relatedfield_have_any_recent_symptoms_of_physical_discomfort\\\", ]\\nadmin.site.register(A6214, A6214Admin)\\nclinic_site.register(A6214, A6214Admin)\\n\", \"forms\": \"\\nclass A6214_ModelForm(ModelForm):\\n    class Meta:\\n        model = A6214\\n        fields = ['relatedfield_own_health', 'relatedfield_compared_to_last_year', 'relatedfield_sports_preference', 'relatedfield_exercise_time', 'relatedfield_have_any_recent_symptoms_of_physical_discomfort', ]\\n        widgets = {'relatedfield_own_health': RadioSelect, 'relatedfield_compared_to_last_year': Select, 'relatedfield_sports_preference': Select, 'relatedfield_exercise_time': RadioSelect, 'relatedfield_have_any_recent_symptoms_of_physical_discomfort': CheckboxSelectMultiple, }\\n    \"}",
            "components": [
                "decc7fdc-9aa1-11ec-bde1-8a6e55faf877",
                "decd7c7a-9aa1-11ec-bde1-8a6e55faf877",
                "dece6cde-9aa1-11ec-bde1-8a6e55faf877",
                "decf4d66-9aa1-11ec-bde1-8a6e55faf877",
                "ded02d26-9aa1-11ec-bde1-8a6e55faf877"
            ],
            "components_groups": []
        },
        {
            "label": "用户登录",
            "name": "Z6230",
            "hssc_id": "0bcb1fc8-9e23-11ec-aa2c-fe35a7065cdd",
            "pym": "yhdl",
            "name_icpc": "Z6230",
            "description": null,
            "meta_data": "{\n    \"name\": \"Z6230\",\n    \"label\": \"用户登录\",\n    \"hssc_id\": \"0bcb1fc8-9e23-11ec-aa2c-fe35a7065cdd\",\n    \"fields\": [\n        {\n            \"name\": \"characterfield_username\",\n            \"label\": \"用户名\",\n            \"hssc_id\": \"dea654a6-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"characterfield_password\",\n            \"label\": \"密码\",\n            \"hssc_id\": \"dea7211a-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class Z6230(HsscFormModel):\\n    characterfield_username = models.CharField(max_length=255, null=True, blank=True, verbose_name='用户名')\\n    characterfield_password = models.CharField(max_length=255, null=True, blank=True, verbose_name='密码')\\n    class Meta:\\n        verbose_name = '用户登录'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('Z6230_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('Z6230_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass Z6230Admin(HsscFormAdmin):\\n    pass\\nadmin.site.register(Z6230, Z6230Admin)\\nclinic_site.register(Z6230, Z6230Admin)\\n\", \"forms\": \"\\nclass Z6230_ModelForm(ModelForm):\\n    class Meta:\\n        model = Z6230\\n        fields = ['characterfield_username', 'characterfield_password', ]\\n        \\n    \"}",
            "components": [
                "dea654a6-9aa1-11ec-bde1-8a6e55faf877",
                "dea7211a-9aa1-11ec-bde1-8a6e55faf877"
            ],
            "components_groups": []
        },
        {
            "label": "血压监测",
            "name": "A3105",
            "hssc_id": "0c940c94-9e23-11ec-aa2c-fe35a7065cdd",
            "pym": "xyjc",
            "name_icpc": "A3105",
            "description": null,
            "meta_data": "{\n    \"name\": \"A3105\",\n    \"label\": \"血压监测\",\n    \"hssc_id\": \"0c940c94-9e23-11ec-aa2c-fe35a7065cdd\",\n    \"fields\": [\n        {\n            \"name\": \"numberfield_systolic_blood_pressure\",\n            \"label\": \"收缩压\",\n            \"hssc_id\": \"deb35b74-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"number\"\n        },\n        {\n            \"name\": \"numberfield_diastolic_blood_pressure\",\n            \"label\": \"舒张压\",\n            \"hssc_id\": \"deb416fe-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"number\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class A3105(HsscFormModel):\\n    numberfield_systolic_blood_pressure = models.IntegerField(null=True, blank=True, verbose_name='收缩压')\\n    numberfield_systolic_blood_pressure_standard_value = models.IntegerField(null=True, blank=True, verbose_name='收缩压标准值')\\n    numberfield_systolic_blood_pressure_up_limit = models.IntegerField(default=139.0, null=True, blank=True, verbose_name='收缩压上限')\\n    numberfield_systolic_blood_pressure_down_limit = models.IntegerField(default=90.0, null=True, blank=True, verbose_name='收缩压下限')\\n    numberfield_diastolic_blood_pressure = models.IntegerField(null=True, blank=True, verbose_name='舒张压')\\n    numberfield_diastolic_blood_pressure_standard_value = models.IntegerField(null=True, blank=True, verbose_name='舒张压标准值')\\n    numberfield_diastolic_blood_pressure_up_limit = models.IntegerField(default=89.0, null=True, blank=True, verbose_name='舒张压上限')\\n    numberfield_diastolic_blood_pressure_down_limit = models.IntegerField(default=60.0, null=True, blank=True, verbose_name='舒张压下限')\\n    class Meta:\\n        verbose_name = '血压监测'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('A3105_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('A3105_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass A3105Admin(HsscFormAdmin):\\n    pass\\nadmin.site.register(A3105, A3105Admin)\\nclinic_site.register(A3105, A3105Admin)\\n\", \"forms\": \"\\nclass A3105_ModelForm(ModelForm):\\n    class Meta:\\n        model = A3105\\n        fields = ['numberfield_systolic_blood_pressure', 'numberfield_diastolic_blood_pressure', ]\\n        \\n    \"}",
            "components": [
                "deb35b74-9aa1-11ec-bde1-8a6e55faf877",
                "deb416fe-9aa1-11ec-bde1-8a6e55faf877"
            ],
            "components_groups": []
        },
        {
            "label": "院内辅助问诊",
            "name": "A6217",
            "hssc_id": "0c82d69a-9e23-11ec-aa2c-fe35a7065cdd",
            "pym": "ynfzwz",
            "name_icpc": "A6217",
            "description": null,
            "meta_data": "{\n    \"name\": \"A6217\",\n    \"label\": \"院内辅助问诊\",\n    \"hssc_id\": \"0c82d69a-9e23-11ec-aa2c-fe35a7065cdd\",\n    \"fields\": [\n        {\n            \"name\": \"characterfield_supplementary_description_of_the_condition\",\n            \"label\": \"病情补充描述\",\n            \"hssc_id\": \"de9ad1a8-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"relatedfield_symptom_list\",\n            \"label\": \"症状\",\n            \"hssc_id\": \"deb93f26-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Icpc3_symptoms_and_problems\",\n            \"app_label\": \"\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class A6217(HsscFormModel):\\n    characterfield_supplementary_description_of_the_condition = models.CharField(max_length=255, null=True, blank=True, verbose_name='病情补充描述')\\n    relatedfield_symptom_list = models.ManyToManyField(Icpc3_symptoms_and_problems, related_name='icpc3_symptoms_and_problems_for_relatedfield_symptom_list_A6217', verbose_name='症状')\\n    class Meta:\\n        verbose_name = '院内辅助问诊'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('A6217_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('A6217_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass A6217Admin(HsscFormAdmin):\\n    autocomplete_fields = [\\\"relatedfield_symptom_list\\\", ]\\nadmin.site.register(A6217, A6217Admin)\\nclinic_site.register(A6217, A6217Admin)\\n\", \"forms\": \"\\nclass A6217_ModelForm(ModelForm):\\n    class Meta:\\n        model = A6217\\n        fields = ['characterfield_supplementary_description_of_the_condition', 'relatedfield_symptom_list', ]\\n        widgets = {'relatedfield_symptom_list': SelectMultiple, }\\n    \"}",
            "components": [
                "de9ad1a8-9aa1-11ec-bde1-8a6e55faf877",
                "deb93f26-9aa1-11ec-bde1-8a6e55faf877"
            ],
            "components_groups": []
        },
        {
            "label": "糖化血红蛋白检查",
            "name": "T3405",
            "hssc_id": "0c440b9a-9e23-11ec-aa2c-fe35a7065cdd",
            "pym": "thxhdbjc",
            "name_icpc": "T3405",
            "description": null,
            "meta_data": "{\n    \"name\": \"T3405\",\n    \"label\": \"糖化血红蛋白检查\",\n    \"hssc_id\": \"0c440b9a-9e23-11ec-aa2c-fe35a7065cdd\",\n    \"fields\": [\n        {\n            \"name\": \"numberfield_tang_hua_xue_hong_dan_bai\",\n            \"label\": \"糖化血红蛋白\",\n            \"hssc_id\": \"deb4e084-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"number\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class T3405(HsscFormModel):\\n    numberfield_tang_hua_xue_hong_dan_bai = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True, verbose_name='糖化血红蛋白')\\n    numberfield_tang_hua_xue_hong_dan_bai_standard_value = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True, verbose_name='糖化血红蛋白标准值')\\n    numberfield_tang_hua_xue_hong_dan_bai_up_limit = models.DecimalField(max_digits=10, decimal_places=2, default=6.0, null=True, blank=True, verbose_name='糖化血红蛋白上限')\\n    numberfield_tang_hua_xue_hong_dan_bai_down_limit = models.DecimalField(max_digits=10, decimal_places=2, default=4.0, null=True, blank=True, verbose_name='糖化血红蛋白下限')\\n    class Meta:\\n        verbose_name = '糖化血红蛋白检查'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('T3405_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('T3405_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass T3405Admin(HsscFormAdmin):\\n    pass\\nadmin.site.register(T3405, T3405Admin)\\nclinic_site.register(T3405, T3405Admin)\\n\", \"forms\": \"\\nclass T3405_ModelForm(ModelForm):\\n    class Meta:\\n        model = T3405\\n        fields = ['numberfield_tang_hua_xue_hong_dan_bai', ]\\n        \\n    \"}",
            "components": [
                "deb4e084-9aa1-11ec-bde1-8a6e55faf877"
            ],
            "components_groups": []
        },
        {
            "label": "院外辅助问诊",
            "name": "A6202",
            "hssc_id": "0c704264-9e23-11ec-aa2c-fe35a7065cdd",
            "pym": "ywfzwz",
            "name_icpc": "A6202",
            "description": null,
            "meta_data": "{\n    \"name\": \"A6202\",\n    \"label\": \"院外辅助问诊\",\n    \"hssc_id\": \"0c704264-9e23-11ec-aa2c-fe35a7065cdd\",\n    \"fields\": [\n        {\n            \"name\": \"characterfield_supplementary_description_of_the_condition\",\n            \"label\": \"病情补充描述\",\n            \"hssc_id\": \"de9ad1a8-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"relatedfield_symptom_list\",\n            \"label\": \"症状\",\n            \"hssc_id\": \"deb93f26-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Icpc3_symptoms_and_problems\",\n            \"app_label\": \"\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class A6202(HsscFormModel):\\n    characterfield_supplementary_description_of_the_condition = models.CharField(max_length=255, null=True, blank=True, verbose_name='病情补充描述')\\n    relatedfield_symptom_list = models.ManyToManyField(Icpc3_symptoms_and_problems, related_name='icpc3_symptoms_and_problems_for_relatedfield_symptom_list_A6202', verbose_name='症状')\\n    class Meta:\\n        verbose_name = '院外辅助问诊'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('A6202_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('A6202_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass A6202Admin(HsscFormAdmin):\\n    autocomplete_fields = [\\\"relatedfield_symptom_list\\\", ]\\nadmin.site.register(A6202, A6202Admin)\\nclinic_site.register(A6202, A6202Admin)\\n\", \"forms\": \"\\nclass A6202_ModelForm(ModelForm):\\n    class Meta:\\n        model = A6202\\n        fields = ['characterfield_supplementary_description_of_the_condition', 'relatedfield_symptom_list', ]\\n        widgets = {'relatedfield_symptom_list': SelectMultiple, }\\n    \"}",
            "components": [
                "de9ad1a8-9aa1-11ec-bde1-8a6e55faf877",
                "deb93f26-9aa1-11ec-bde1-8a6e55faf877"
            ],
            "components_groups": []
        },
        {
            "label": "监测评估",
            "name": "A6220",
            "hssc_id": "bbf2ba74-aa48-11ec-8f0c-ee7ade4bced6",
            "pym": "jcpg",
            "name_icpc": "A6220",
            "description": null,
            "meta_data": "{\n    \"name\": \"A6220\",\n    \"label\": \"监测评估\",\n    \"hssc_id\": \"bbf2ba74-aa48-11ec-8f0c-ee7ade4bced6\",\n    \"fields\": [\n        {\n            \"name\": \"boolfield_yuan_wai_jian_kang_ping_gu\",\n            \"label\": \"监测评估\",\n            \"hssc_id\": \"4bf17ad0-aa48-11ec-9f15-ee7ade4bced6\",\n            \"type\": \"Sui_fang_ping_gu\",\n            \"app_label\": \"\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class A6220(HsscFormModel):\\n    boolfield_yuan_wai_jian_kang_ping_gu = models.ForeignKey(Sui_fang_ping_gu, related_name='sui_fang_ping_gu_for_boolfield_yuan_wai_jian_kang_ping_gu_A6220', on_delete=models.CASCADE, null=True, blank=True, verbose_name='监测评估')\\n    class Meta:\\n        verbose_name = '监测评估'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('A6220_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('A6220_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass A6220Admin(HsscFormAdmin):\\n    autocomplete_fields = [\\\"boolfield_yuan_wai_jian_kang_ping_gu\\\", ]\\nadmin.site.register(A6220, A6220Admin)\\nclinic_site.register(A6220, A6220Admin)\\n\", \"forms\": \"\\nclass A6220_ModelForm(ModelForm):\\n    class Meta:\\n        model = A6220\\n        fields = ['boolfield_yuan_wai_jian_kang_ping_gu', ]\\n        widgets = {'boolfield_yuan_wai_jian_kang_ping_gu': Select, }\\n    \"}",
            "components": [
                "4bf17ad0-aa48-11ec-9f15-ee7ade4bced6"
            ],
            "components_groups": []
        },
        {
            "label": "个人健康行为调查",
            "name": "A6212",
            "hssc_id": "0b6e02b6-9e23-11ec-aa2c-fe35a7065cdd",
            "pym": "grjkxwdc",
            "name_icpc": "A6212",
            "description": null,
            "meta_data": "{\n    \"name\": \"A6212\",\n    \"label\": \"个人健康行为调查\",\n    \"hssc_id\": \"0b6e02b6-9e23-11ec-aa2c-fe35a7065cdd\",\n    \"fields\": [\n        {\n            \"name\": \"characterfield_average_sleep_duration\",\n            \"label\": \"平均睡眠时长\",\n            \"hssc_id\": \"de9c7012-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"characterfield_duration_of_insomnia\",\n            \"label\": \"持续失眠时间\",\n            \"hssc_id\": \"de9d30a6-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"relatedfield_drinking_frequency\",\n            \"label\": \"饮酒频次\",\n            \"hssc_id\": \"decabc92-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Frequency\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"relatedfield_smoking_frequency\",\n            \"label\": \"吸烟频次\",\n            \"hssc_id\": \"decba0ee-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Frequency\",\n            \"app_label\": \"\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class A6212(HsscFormModel):\\n    characterfield_average_sleep_duration = models.CharField(max_length=255, null=True, blank=True, verbose_name='平均睡眠时长')\\n    characterfield_duration_of_insomnia = models.CharField(max_length=255, null=True, blank=True, verbose_name='持续失眠时间')\\n    relatedfield_drinking_frequency = models.ForeignKey(Frequency, related_name='frequency_for_relatedfield_drinking_frequency_A6212', on_delete=models.CASCADE, null=True, blank=True, verbose_name='饮酒频次')\\n    relatedfield_smoking_frequency = models.ForeignKey(Frequency, related_name='frequency_for_relatedfield_smoking_frequency_A6212', on_delete=models.CASCADE, null=True, blank=True, verbose_name='吸烟频次')\\n    class Meta:\\n        verbose_name = '个人健康行为调查'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('A6212_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('A6212_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass A6212Admin(HsscFormAdmin):\\n    autocomplete_fields = [\\\"relatedfield_drinking_frequency\\\", \\\"relatedfield_smoking_frequency\\\", ]\\nadmin.site.register(A6212, A6212Admin)\\nclinic_site.register(A6212, A6212Admin)\\n\", \"forms\": \"\\nclass A6212_ModelForm(ModelForm):\\n    class Meta:\\n        model = A6212\\n        fields = ['characterfield_average_sleep_duration', 'characterfield_duration_of_insomnia', 'relatedfield_drinking_frequency', 'relatedfield_smoking_frequency', ]\\n        widgets = {'relatedfield_drinking_frequency': RadioSelect, 'relatedfield_smoking_frequency': RadioSelect, }\\n    \"}",
            "components": [
                "de9c7012-9aa1-11ec-bde1-8a6e55faf877",
                "de9d30a6-9aa1-11ec-bde1-8a6e55faf877",
                "decabc92-9aa1-11ec-bde1-8a6e55faf877",
                "decba0ee-9aa1-11ec-bde1-8a6e55faf877"
            ],
            "components_groups": []
        },
        {
            "label": "非胰岛素依赖性糖尿病",
            "name": "T9001",
            "hssc_id": "0c7bdb06-9e23-11ec-aa2c-fe35a7065cdd",
            "pym": "fydsylxtnb",
            "name_icpc": "T9001",
            "description": null,
            "meta_data": "{\n    \"name\": \"T9001\",\n    \"label\": \"非胰岛素依赖性糖尿病\",\n    \"hssc_id\": \"0c7bdb06-9e23-11ec-aa2c-fe35a7065cdd\",\n    \"fields\": [\n        {\n            \"name\": \"relatedfield_disease_name\",\n            \"label\": \"疾病名称\",\n            \"hssc_id\": \"ded4c1a6-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Icpc5_evaluation_and_diagnoses\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"relatedfield_yi_lou_zhen_duan\",\n            \"label\": \"可能诊断\",\n            \"hssc_id\": \"6a4b6984-9e93-11ec-a013-aa434405c3fc\",\n            \"type\": \"Icpc5_evaluation_and_diagnoses\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"relatedfield_pai_chu_zhen_duan\",\n            \"label\": \"排除诊断\",\n            \"hssc_id\": \"5b880f4c-9e93-11ec-b91b-aa434405c3fc\",\n            \"type\": \"Icpc5_evaluation_and_diagnoses\",\n            \"app_label\": \"\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class T9001(HsscFormModel):\\n    relatedfield_disease_name = models.ForeignKey(Icpc5_evaluation_and_diagnoses, related_name='icpc5_evaluation_and_diagnoses_for_relatedfield_disease_name_T9001', on_delete=models.CASCADE, null=True, blank=True, verbose_name='疾病名称')\\n    relatedfield_yi_lou_zhen_duan = models.ManyToManyField(Icpc5_evaluation_and_diagnoses, related_name='icpc5_evaluation_and_diagnoses_for_relatedfield_yi_lou_zhen_duan_T9001', verbose_name='可能诊断')\\n    relatedfield_pai_chu_zhen_duan = models.ManyToManyField(Icpc5_evaluation_and_diagnoses, related_name='icpc5_evaluation_and_diagnoses_for_relatedfield_pai_chu_zhen_duan_T9001', verbose_name='排除诊断')\\n    class Meta:\\n        verbose_name = '非胰岛素依赖性糖尿病'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('T9001_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('T9001_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass T9001Admin(HsscFormAdmin):\\n    autocomplete_fields = [\\\"relatedfield_disease_name\\\", \\\"relatedfield_yi_lou_zhen_duan\\\", \\\"relatedfield_pai_chu_zhen_duan\\\", ]\\nadmin.site.register(T9001, T9001Admin)\\nclinic_site.register(T9001, T9001Admin)\\n\", \"forms\": \"\\nclass T9001_ModelForm(ModelForm):\\n    class Meta:\\n        model = T9001\\n        fields = ['relatedfield_disease_name', 'relatedfield_yi_lou_zhen_duan', 'relatedfield_pai_chu_zhen_duan', ]\\n        widgets = {'relatedfield_disease_name': Select, 'relatedfield_yi_lou_zhen_duan': SelectMultiple, 'relatedfield_pai_chu_zhen_duan': SelectMultiple, }\\n    \"}",
            "components": [
                "ded4c1a6-9aa1-11ec-bde1-8a6e55faf877",
                "6a4b6984-9e93-11ec-a013-aa434405c3fc",
                "5b880f4c-9e93-11ec-b91b-aa434405c3fc"
            ],
            "components_groups": []
        },
        {
            "label": "药事服务",
            "name": "A5002",
            "hssc_id": "0d22201a-9e23-11ec-aa2c-fe35a7065cdd",
            "pym": "ysfw",
            "name_icpc": "A5002",
            "description": null,
            "meta_data": "{\n    \"name\": \"A5002\",\n    \"label\": \"药事服务\",\n    \"hssc_id\": \"0d22201a-9e23-11ec-aa2c-fe35a7065cdd\",\n    \"fields\": [\n        {\n            \"name\": \"relatedfield_drug_name\",\n            \"label\": \"药品名称\",\n            \"hssc_id\": \"dec637d0-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Medicine\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"relatedfield_disease_name\",\n            \"label\": \"疾病名称\",\n            \"hssc_id\": \"ded4c1a6-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Icpc5_evaluation_and_diagnoses\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"boolfield_shi_fou_ji_xu_shi_yong\",\n            \"label\": \"是否继续使用\",\n            \"hssc_id\": \"01ae1278-a659-11ec-9221-f6197eef9f67\",\n            \"type\": \"Ji_xu_shi_yong_qing_kuang\",\n            \"app_label\": \"\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class A5002(HsscFormModel):\\n    relatedfield_drug_name = models.ManyToManyField(Medicine, related_name='medicine_for_relatedfield_drug_name_A5002', verbose_name='药品名称')\\n    relatedfield_disease_name = models.ForeignKey(Icpc5_evaluation_and_diagnoses, related_name='icpc5_evaluation_and_diagnoses_for_relatedfield_disease_name_A5002', on_delete=models.CASCADE, null=True, blank=True, verbose_name='疾病名称')\\n    boolfield_shi_fou_ji_xu_shi_yong = models.ForeignKey(Ji_xu_shi_yong_qing_kuang, related_name='ji_xu_shi_yong_qing_kuang_for_boolfield_shi_fou_ji_xu_shi_yong_A5002', on_delete=models.CASCADE, null=True, blank=True, verbose_name='是否继续使用')\\n    class Meta:\\n        verbose_name = '药事服务'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('A5002_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('A5002_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass A5002Admin(HsscFormAdmin):\\n    autocomplete_fields = [\\\"relatedfield_drug_name\\\", \\\"relatedfield_disease_name\\\", \\\"boolfield_shi_fou_ji_xu_shi_yong\\\", ]\\nadmin.site.register(A5002, A5002Admin)\\nclinic_site.register(A5002, A5002Admin)\\n\", \"forms\": \"\\nclass A5002_ModelForm(ModelForm):\\n    class Meta:\\n        model = A5002\\n        fields = ['relatedfield_drug_name', 'relatedfield_disease_name', 'boolfield_shi_fou_ji_xu_shi_yong', ]\\n        widgets = {'relatedfield_drug_name': SelectMultiple, 'relatedfield_disease_name': Select, 'boolfield_shi_fou_ji_xu_shi_yong': RadioSelect, }\\n    \"}",
            "components": [
                "dec637d0-9aa1-11ec-bde1-8a6e55faf877",
                "ded4c1a6-9aa1-11ec-bde1-8a6e55faf877",
                "01ae1278-a659-11ec-9221-f6197eef9f67"
            ],
            "components_groups": []
        },
        {
            "label": "运动能力调查",
            "name": "physical_examination_athletic_ability",
            "hssc_id": "0c2bb0a4-9e23-11ec-aa2c-fe35a7065cdd",
            "pym": "ydnldc",
            "name_icpc": null,
            "description": null,
            "meta_data": "{\n    \"name\": \"physical_examination_athletic_ability\",\n    \"label\": \"运动能力调查\",\n    \"hssc_id\": \"0c2bb0a4-9e23-11ec-aa2c-fe35a7065cdd\",\n    \"fields\": [\n        {\n            \"name\": \"relatedfield_athletic_ability\",\n            \"label\": \"运动能力\",\n            \"hssc_id\": \"dec54e10-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Exercise_time\",\n            \"app_label\": \"\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class Physical_examination_athletic_ability(HsscFormModel):\\n    relatedfield_athletic_ability = models.ForeignKey(Exercise_time, related_name='exercise_time_for_relatedfield_athletic_ability_physical_examination_athletic_ability', on_delete=models.CASCADE, null=True, blank=True, verbose_name='运动能力')\\n    class Meta:\\n        verbose_name = '运动能力调查'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('physical_examination_athletic_ability_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('physical_examination_athletic_ability_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass Physical_examination_athletic_abilityAdmin(HsscFormAdmin):\\n    autocomplete_fields = [\\\"relatedfield_athletic_ability\\\", ]\\nadmin.site.register(Physical_examination_athletic_ability, Physical_examination_athletic_abilityAdmin)\\nclinic_site.register(Physical_examination_athletic_ability, Physical_examination_athletic_abilityAdmin)\\n\", \"forms\": \"\\nclass Physical_examination_athletic_ability_ModelForm(ModelForm):\\n    class Meta:\\n        model = Physical_examination_athletic_ability\\n        fields = ['relatedfield_athletic_ability', ]\\n        widgets = {'relatedfield_athletic_ability': Select, }\\n    \"}",
            "components": [
                "dec54e10-9aa1-11ec-bde1-8a6e55faf877"
            ],
            "components_groups": []
        },
        {
            "label": "个人心理综合素质调查",
            "name": "A6213",
            "hssc_id": "0b5c89be-9e23-11ec-aa2c-fe35a7065cdd",
            "pym": "grxlzhszdc",
            "name_icpc": "A6213",
            "description": null,
            "meta_data": "{\n    \"name\": \"A6213\",\n    \"label\": \"个人心理综合素质调查\",\n    \"hssc_id\": \"0b5c89be-9e23-11ec-aa2c-fe35a7065cdd\",\n    \"fields\": [\n        {\n            \"name\": \"relatedfield_personality_tendency\",\n            \"label\": \"性格倾向\",\n            \"hssc_id\": \"dec70886-9aa1-11ec-bde1-8a6e55faf877\",\n            \"type\": \"Character\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"boolfield_shi_mian_qing_kuang\",\n            \"label\": \"失眠情况\",\n            \"hssc_id\": \"5024b3ea-a52c-11ec-9b14-2ec403f6c47b\",\n            \"type\": \"Shi_mian_qing_kuang\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"boolfield_sheng_huo_gong_zuo_ya_li_qing_kuang\",\n            \"label\": \"生活工作压力情况\",\n            \"hssc_id\": \"5977c26a-a52d-11ec-a478-2ec403f6c47b\",\n            \"type\": \"Ya_li_qing_kuang\",\n            \"app_label\": \"\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class A6213(HsscFormModel):\\n    relatedfield_personality_tendency = models.ForeignKey(Character, related_name='character_for_relatedfield_personality_tendency_A6213', on_delete=models.CASCADE, null=True, blank=True, verbose_name='性格倾向')\\n    boolfield_shi_mian_qing_kuang = models.ForeignKey(Shi_mian_qing_kuang, related_name='shi_mian_qing_kuang_for_boolfield_shi_mian_qing_kuang_A6213', on_delete=models.CASCADE, null=True, blank=True, verbose_name='失眠情况')\\n    boolfield_sheng_huo_gong_zuo_ya_li_qing_kuang = models.ForeignKey(Ya_li_qing_kuang, related_name='ya_li_qing_kuang_for_boolfield_sheng_huo_gong_zuo_ya_li_qing_kuang_A6213', on_delete=models.CASCADE, null=True, blank=True, verbose_name='生活工作压力情况')\\n    class Meta:\\n        verbose_name = '个人心理综合素质调查'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('A6213_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('A6213_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass A6213Admin(HsscFormAdmin):\\n    autocomplete_fields = [\\\"relatedfield_personality_tendency\\\", \\\"boolfield_shi_mian_qing_kuang\\\", \\\"boolfield_sheng_huo_gong_zuo_ya_li_qing_kuang\\\", ]\\nadmin.site.register(A6213, A6213Admin)\\nclinic_site.register(A6213, A6213Admin)\\n\", \"forms\": \"\\nclass A6213_ModelForm(ModelForm):\\n    class Meta:\\n        model = A6213\\n        fields = ['relatedfield_personality_tendency', 'boolfield_shi_mian_qing_kuang', 'boolfield_sheng_huo_gong_zuo_ya_li_qing_kuang', ]\\n        widgets = {'relatedfield_personality_tendency': RadioSelect, 'boolfield_shi_mian_qing_kuang': RadioSelect, 'boolfield_sheng_huo_gong_zuo_ya_li_qing_kuang': RadioSelect, }\\n    \"}",
            "components": [
                "dec70886-9aa1-11ec-bde1-8a6e55faf877",
                "5024b3ea-a52c-11ec-9b14-2ec403f6c47b",
                "5977c26a-a52d-11ec-a478-2ec403f6c47b"
            ],
            "components_groups": []
        },
        {
            "label": "家庭医生签约",
            "name": "Z6261",
            "hssc_id": "d0ce09ec-aa45-11ec-9f15-ee7ade4bced6",
            "pym": "jtysqy",
            "name_icpc": "Z6261",
            "description": null,
            "meta_data": "{\n    \"name\": \"Z6261\",\n    \"label\": \"家庭医生签约\",\n    \"hssc_id\": \"d0ce09ec-aa45-11ec-9f15-ee7ade4bced6\",\n    \"fields\": [\n        {\n            \"name\": \"boolfield_jia_ting_qian_yue_fu_wu_xie_yi\",\n            \"label\": \"家庭签约服务协议\",\n            \"hssc_id\": \"5ff67f9c-aa45-11ec-8f0c-ee7ade4bced6\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"boolfield_qian_yue_que_ren\",\n            \"label\": \"签约确认\",\n            \"hssc_id\": \"b19d4830-aa45-11ec-8f0c-ee7ade4bced6\",\n            \"type\": \"Qian_yue_que_ren\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"boolfield_ze_ren_ren\",\n            \"label\": \"责任人\",\n            \"hssc_id\": \"401d33d8-aa49-11ec-9f15-ee7ade4bced6\",\n            \"type\": \"Staff\",\n            \"app_label\": \"\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class Z6261(HsscFormModel):\\n    boolfield_jia_ting_qian_yue_fu_wu_xie_yi = models.CharField(max_length=255, null=True, blank=True, verbose_name='家庭签约服务协议')\\n    boolfield_qian_yue_que_ren = models.ForeignKey(Qian_yue_que_ren, related_name='qian_yue_que_ren_for_boolfield_qian_yue_que_ren_Z6261', on_delete=models.CASCADE, null=True, blank=True, verbose_name='签约确认')\\n    boolfield_ze_ren_ren = models.ForeignKey(Staff, related_name='staff_for_boolfield_ze_ren_ren_Z6261', on_delete=models.CASCADE, null=True, blank=True, verbose_name='责任人')\\n    class Meta:\\n        verbose_name = '家庭医生签约'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('Z6261_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('Z6261_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass Z6261Admin(HsscFormAdmin):\\n    autocomplete_fields = [\\\"boolfield_qian_yue_que_ren\\\", \\\"boolfield_ze_ren_ren\\\", ]\\nadmin.site.register(Z6261, Z6261Admin)\\nclinic_site.register(Z6261, Z6261Admin)\\n\", \"forms\": \"\\nclass Z6261_ModelForm(ModelForm):\\n    class Meta:\\n        model = Z6261\\n        fields = ['boolfield_jia_ting_qian_yue_fu_wu_xie_yi', 'boolfield_qian_yue_que_ren', 'boolfield_ze_ren_ren', ]\\n        widgets = {'boolfield_qian_yue_que_ren': Select, 'boolfield_ze_ren_ren': Select, }\\n    \"}",
            "components": [
                "5ff67f9c-aa45-11ec-8f0c-ee7ade4bced6",
                "b19d4830-aa45-11ec-8f0c-ee7ade4bced6",
                "401d33d8-aa49-11ec-9f15-ee7ade4bced6"
            ],
            "components_groups": []
        },
        {
            "label": "遗传病史",
            "name": "A6210",
            "hssc_id": "0be59eac-9e23-11ec-aa2c-fe35a7065cdd",
            "pym": "ycbs",
            "name_icpc": "A6210",
            "description": null,
            "meta_data": "{\n    \"name\": \"A6210\",\n    \"label\": \"遗传病史\",\n    \"hssc_id\": \"0be59eac-9e23-11ec-aa2c-fe35a7065cdd\",\n    \"fields\": [\n        {\n            \"name\": \"boolfield_yi_chuan_ji_bing\",\n            \"label\": \"遗传性疾病\",\n            \"hssc_id\": \"0178473c-cab3-11ec-a675-8e39d789b675\",\n            \"type\": \"Icpc5_evaluation_and_diagnoses\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"boolfield_yi_chuan_bing_shi_cheng_yuan\",\n            \"label\": \"遗传病史成员\",\n            \"hssc_id\": \"9c342812-cab9-11ec-a675-8e39d789b675\",\n            \"type\": \"Qin_shu_guan_xi\",\n            \"app_label\": \"\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class A6210(HsscFormModel):\\n    boolfield_yi_chuan_ji_bing = models.ForeignKey(Icpc5_evaluation_and_diagnoses, related_name='icpc5_evaluation_and_diagnoses_for_boolfield_yi_chuan_ji_bing_A6210', on_delete=models.CASCADE, null=True, blank=True, verbose_name='遗传性疾病')\\n    boolfield_yi_chuan_bing_shi_cheng_yuan = models.ManyToManyField(Qin_shu_guan_xi, related_name='qin_shu_guan_xi_for_boolfield_yi_chuan_bing_shi_cheng_yuan_A6210', verbose_name='遗传病史成员')\\n    class Meta:\\n        verbose_name = '遗传病史'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('A6210_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('A6210_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass A6210Admin(HsscFormAdmin):\\n    autocomplete_fields = [\\\"boolfield_yi_chuan_ji_bing\\\", \\\"boolfield_yi_chuan_bing_shi_cheng_yuan\\\", ]\\nadmin.site.register(A6210, A6210Admin)\\nclinic_site.register(A6210, A6210Admin)\\n\", \"forms\": \"\\nclass A6210_ModelForm(ModelForm):\\n    class Meta:\\n        model = A6210\\n        fields = ['boolfield_yi_chuan_ji_bing', 'boolfield_yi_chuan_bing_shi_cheng_yuan', ]\\n        widgets = {'boolfield_yi_chuan_ji_bing': Select, 'boolfield_yi_chuan_bing_shi_cheng_yuan': SelectMultiple, }\\n    \"}",
            "components": [
                "0178473c-cab3-11ec-a675-8e39d789b675",
                "9c342812-cab9-11ec-a675-8e39d789b675"
            ],
            "components_groups": []
        },
        {
            "label": "家族病史",
            "name": "A6209",
            "hssc_id": "0b96f9f0-9e23-11ec-aa2c-fe35a7065cdd",
            "pym": "jzbs",
            "name_icpc": "A6209",
            "description": null,
            "meta_data": "{\n    \"name\": \"A6209\",\n    \"label\": \"家族病史\",\n    \"hssc_id\": \"0b96f9f0-9e23-11ec-aa2c-fe35a7065cdd\",\n    \"fields\": [\n        {\n            \"name\": \"boolfield_jia_zu_xing_ji_bing\",\n            \"label\": \"家族性疾病\",\n            \"hssc_id\": \"5245480e-cab3-11ec-a675-8e39d789b675\",\n            \"type\": \"Icpc5_evaluation_and_diagnoses\",\n            \"app_label\": \"\"\n        },\n        {\n            \"name\": \"boolfield_jia_zu_bing_shi_cheng_yuan\",\n            \"label\": \"家族病史成员\",\n            \"hssc_id\": \"888d068a-cab9-11ec-a675-8e39d789b675\",\n            \"type\": \"Qin_shu_guan_xi\",\n            \"app_label\": \"\"\n        }\n    ]\n}",
            "script": "{\"models\": \"class A6209(HsscFormModel):\\n    boolfield_jia_zu_xing_ji_bing = models.ForeignKey(Icpc5_evaluation_and_diagnoses, related_name='icpc5_evaluation_and_diagnoses_for_boolfield_jia_zu_xing_ji_bing_A6209', on_delete=models.CASCADE, null=True, blank=True, verbose_name='家族性疾病')\\n    boolfield_jia_zu_bing_shi_cheng_yuan = models.ManyToManyField(Qin_shu_guan_xi, related_name='qin_shu_guan_xi_for_boolfield_jia_zu_bing_shi_cheng_yuan_A6209', verbose_name='家族病史成员')\\n    class Meta:\\n        verbose_name = '家族病史'\\n        verbose_name_plural = verbose_name\\n\\n    def get_absolute_url(self):\\n        return reverse('A6209_detail_url', kwargs={'slug': self.slug})\\n\\n    def get_update_url(self):\\n        return reverse('A6209_update_url', kwargs={'slug': self.slug})\\n        \\n\\n\", \"admin\": \"\\nclass A6209Admin(HsscFormAdmin):\\n    autocomplete_fields = [\\\"boolfield_jia_zu_xing_ji_bing\\\", \\\"boolfield_jia_zu_bing_shi_cheng_yuan\\\", ]\\nadmin.site.register(A6209, A6209Admin)\\nclinic_site.register(A6209, A6209Admin)\\n\", \"forms\": \"\\nclass A6209_ModelForm(ModelForm):\\n    class Meta:\\n        model = A6209\\n        fields = ['boolfield_jia_zu_xing_ji_bing', 'boolfield_jia_zu_bing_shi_cheng_yuan', ]\\n        widgets = {'boolfield_jia_zu_xing_ji_bing': Select, 'boolfield_jia_zu_bing_shi_cheng_yuan': SelectMultiple, }\\n    \"}",
            "components": [
                "5245480e-cab3-11ec-a675-8e39d789b675",
                "888d068a-cab9-11ec-a675-8e39d789b675"
            ],
            "components_groups": []
        }
    ],
    "managedentity": [
        {
            "label": "客户",
            "name": "customer",
            "hssc_id": "de87e7d2-9aa1-11ec-bde1-8a6e55faf877",
            "pym": "kh",
            "app_name": "core",
            "model_name": "Customer",
            "base_form": "0c0f81b8-9e23-11ec-aa2c-fe35a7065cdd",
            "header_fields": [
                "de9de26c-9aa1-11ec-bde1-8a6e55faf877",
                "de9e99dc-9aa1-11ec-bde1-8a6e55faf877",
                "de9f4ea4-9aa1-11ec-bde1-8a6e55faf877",
                "dea1797c-9aa1-11ec-bde1-8a6e55faf877",
                "deab5d16-9aa1-11ec-bde1-8a6e55faf877"
            ]
        },
        {
            "label": "药品",
            "name": "medicine",
            "hssc_id": "de896698-9aa1-11ec-bde1-8a6e55faf877",
            "pym": "yp",
            "app_name": "entities",
            "model_name": "Medicine",
            "base_form": "a2fc46f0-c115-11ec-9685-2617a93150cd",
            "header_fields": []
        },
        {
            "label": "职员",
            "name": "staff",
            "hssc_id": "de87315c-9aa1-11ec-bde1-8a6e55faf877",
            "pym": "zy",
            "app_name": "core",
            "model_name": "Staff",
            "base_form": "bca10e04-c5c7-11ec-b819-725badf7393d",
            "header_fields": []
        },
        {
            "label": "机构",
            "name": "institution",
            "hssc_id": "de8ad1a4-9aa1-11ec-bde1-8a6e55faf877",
            "pym": "jg",
            "app_name": "entities",
            "model_name": "Institution",
            "base_form": "43464b44-c5c9-11ec-b819-725badf7393d",
            "header_fields": []
        },
        {
            "label": "设备",
            "name": "device",
            "hssc_id": "de8a1c64-9aa1-11ec-bde1-8a6e55faf877",
            "pym": "sb",
            "app_name": "entities",
            "model_name": "Device",
            "base_form": "7c8caaba-c5c9-11ec-b9d4-725badf7393d",
            "header_fields": []
        },
        {
            "label": "供应商",
            "name": "supplier",
            "hssc_id": "de889948-9aa1-11ec-bde1-8a6e55faf877",
            "pym": "gys",
            "app_name": "entities",
            "model_name": "Supplier",
            "base_form": "63347e8a-c5c9-11ec-b819-725badf7393d",
            "header_fields": []
        }
    ],
    "service": [
        {
            "label": "药物干预",
            "name": "men_zhen_chu_fang_biao",
            "hssc_id": "e0305c18-9aa1-11ec-bde1-8a6e55faf877",
            "pym": "ywgy",
            "name_icpc": null,
            "managed_entity": "de87e7d2-9aa1-11ec-bde1-8a6e55faf877",
            "priority": 3,
            "is_system_service": false,
            "history_services_display": 0,
            "enable_queue_counter": true,
            "suppliers": null,
            "not_suitable": null,
            "execution_time_frame": null,
            "awaiting_time_frame": null,
            "working_hours": null,
            "frequency": null,
            "cost": null,
            "load_feedback": false,
            "resource_materials": null,
            "resource_devices": null,
            "resource_knowledge": null,
            "script": "{\"views\": \"\\nclass Men_zhen_chu_fang_biao_CreateView(CreateView):\\n    success_url = 'forms/'\\n    template_name = 'men_zhen_chu_fang_biao_create.html'\\n    form_class = A5001_ModelForm  # the first form ModelForm class\\n    model = A5001\\n    context = {}\\n\\n    def get_context_data(self, **kwargs):\\n        context = super(Men_zhen_chu_fang_biao_CreateView, self).get_context_data(**kwargs)\\n        if self.request.method == 'POST':\\n            base_form = A6203_ModelForm(self.request.POST, prefix=\\\"base_form\\\")\\n            a5001_form = A5001_ModelForm(self.request.POST, prefix=\\\"a5001_form\\\")\\n        else:\\n            base_form = A6203_ModelForm(prefix=\\\"base_form\\\")\\n            a5001_form = A5001_ModelForm(prefix=\\\"a5001_form\\\")\\n        # context\\n        context['base_form'] = base_form\\n        context['a5001_form'] = a5001_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['a5001_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(Men_zhen_chu_fang_biao_CreateView, self).form_valid(form)\\n\\n\\n\\nclass Men_zhen_chu_fang_biao_UpdateView(SendSignalsMixin, UpdateView):\\n    success_url = 'forms/'\\n    template_name = 'men_zhen_chu_fang_biao_update.html'\\n    form_class = A5001_ModelForm # the first form ModelForm class\\n    model = A5001\\n\\n    # if operation_proc.group is None:  # 如果进程角色已经被置为空，说明已有其他人处理，退出本修改作业进程\\n    #     return redirect(reverse('index'))\\n    # operation_proc.group.set([])  # 设置作业进程所属角色组为空\\n\\n    context = {}\\n        \\n    def get_context_data(self, **kwargs):\\n        context = super(Men_zhen_chu_fang_biao_UpdateView, self).get_context_data(**kwargs)\\n        operation_proc = get_object_or_404(OperationProc, id=kwargs['id'])\\n        customer = operation_proc.customer\\n        base_form = A6203_ModelForm(instance=A6203.objects.get(customer=1), prefix=\\\"base_form\\\")\\n        if self.request.method == 'POST':\\n            a5001_form = A5001_ModelForm(self.request.POST, prefix=\\\"a5001_form\\\")\\n            # 构造作业完成消息参数\\n            self.send_operand_finished(kwargs)\\n            return redirect(reverse('index'))\\n        else:\\n            a5001_form = A5001_ModelForm(instance=A5001.objects.get(pid=kwargs['id']), prefix=\\\"a5001_form\\\")\\n            # 构造作业开始消息参数\\n            self.send_operand_started(kwargs['id'])\\n        # context\\n        context['base_form'] = base_form\\n        context['a5001_form'] = a5001_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['a5001_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(Men_zhen_chu_fang_biao_CreateView, self).form_valid(form)\\n\", \"urls\": \"\\n    path('men_zhen_chu_fang_biao/create', Men_zhen_chu_fang_biao_CreateView.as_view(), name='men_zhen_chu_fang_biao_create_url'),\\n    path('men_zhen_chu_fang_biao/<int:id>/update', Men_zhen_chu_fang_biao_UpdateView.as_view(), name='men_zhen_chu_fang_biao_update_url'),\", \"templates\": [{\"men_zhen_chu_fang_biao_create.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'men_zhen_chu_fang_biao_create_url' %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>药物处方</h5>\\n            {{ a5001_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('a5001_form')\\\" />\\n    {% endblock %}\\n    \"}, {\"men_zhen_chu_fang_biao_update.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'men_zhen_chu_fang_biao_update_url' id %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>药物处方</h5>\\n            {{ a5001_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('a5001_form')\\\" />\\n    {% endblock %}\\n    \"}], \"models\": \"class Men_zhen_chu_fang_biao(HsscFormModel):\\n    characterfield_name = models.CharField(max_length=255, null=True, blank=True, verbose_name='姓名')\\n    characterfield_gender = models.CharField(max_length=255, null=True, blank=True, verbose_name='性别')\\n    characterfield_age = models.CharField(max_length=255, null=True, blank=True, verbose_name='年龄')\\n    characterfield_contact_address = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系地址')\\n    characterfield_contact_number = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系电话')\\n    boolfield_yong_yao_zhou_qi = models.CharField(max_length=255, null=True, blank=True, verbose_name='用药疗程')\\n    boolfield_chang_yong_chu_fang_liang = models.CharField(max_length=255, null=True, blank=True, verbose_name='常用处方量')\\n    boolfield_fu_yong_pin_ci = models.CharField(max_length=255, null=True, blank=True, verbose_name='用药频次')\\n    relatedfield_drug_name = models.ManyToManyField(Medicine, related_name='medicine_for_relatedfield_drug_name_men_zhen_chu_fang_biao', verbose_name='药品名称')\\n    boolfield_yong_yao_tu_jing = models.ForeignKey(Yong_yao_tu_jing, related_name='yong_yao_tu_jing_for_boolfield_yong_yao_tu_jing_men_zhen_chu_fang_biao', on_delete=models.CASCADE, null=True, blank=True, verbose_name='用药途径')\\n\\n    class Meta:\\n        verbose_name = '药物干预'\\n        verbose_name_plural = verbose_name\\n\\n    def __str__(self):\\n        return self.customer.name\\n\\n        \\n\\n\", \"admin\": \"\\nclass Men_zhen_chu_fang_biaoAdmin(HsscFormAdmin):\\n    fieldsets = ((\\\"基本信息\\\", {\\\"fields\\\": ((\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ),)}), \\n        (\\\"药物处方\\\", {\\\"fields\\\": (\\\"boolfield_yong_yao_zhou_qi\\\", \\\"boolfield_chang_yong_chu_fang_liang\\\", \\\"boolfield_fu_yong_pin_ci\\\", \\\"relatedfield_drug_name\\\", \\\"boolfield_yong_yao_tu_jing\\\", )}), )\\n    autocomplete_fields = [\\\"relatedfield_drug_name\\\", \\\"boolfield_yong_yao_tu_jing\\\", ]\\n    readonly_fields = [\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ]\\nadmin.site.register(Men_zhen_chu_fang_biao, Men_zhen_chu_fang_biaoAdmin)\\nclinic_site.register(Men_zhen_chu_fang_biao, Men_zhen_chu_fang_biaoAdmin)\\n\"}",
            "buessiness_forms": [
                "0ce117aa-9e23-11ec-aa2c-fe35a7065cdd"
            ],
            "role": [
                "de19d6a2-9aa1-11ec-bde1-8a6e55faf877"
            ]
        },
        {
            "label": "用户注册",
            "name": "Z6201",
            "hssc_id": "e0317224-9aa1-11ec-bde1-8a6e55faf877",
            "pym": "yhzc",
            "name_icpc": "Z6201",
            "managed_entity": "de87e7d2-9aa1-11ec-bde1-8a6e55faf877",
            "priority": 3,
            "is_system_service": true,
            "history_services_display": 0,
            "enable_queue_counter": true,
            "suppliers": null,
            "not_suitable": null,
            "execution_time_frame": null,
            "awaiting_time_frame": null,
            "working_hours": null,
            "frequency": null,
            "cost": null,
            "load_feedback": false,
            "resource_materials": null,
            "resource_devices": null,
            "resource_knowledge": null,
            "script": "{\"views\": \"\\nclass Z6201_CreateView(CreateView):\\n    success_url = 'forms/'\\n    template_name = 'Z6201_create.html'\\n    form_class = Z6201_ModelForm  # the first form ModelForm class\\n    model = Z6201\\n    context = {}\\n\\n    def get_context_data(self, **kwargs):\\n        context = super(Z6201_CreateView, self).get_context_data(**kwargs)\\n        if self.request.method == 'POST':\\n            base_form = A6203_ModelForm(self.request.POST, prefix=\\\"base_form\\\")\\n            z6201_form = Z6201_ModelForm(self.request.POST, prefix=\\\"z6201_form\\\")\\n        else:\\n            base_form = A6203_ModelForm(prefix=\\\"base_form\\\")\\n            z6201_form = Z6201_ModelForm(prefix=\\\"z6201_form\\\")\\n        # context\\n        context['base_form'] = base_form\\n        context['z6201_form'] = z6201_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['z6201_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(Z6201_CreateView, self).form_valid(form)\\n\\n\\n\\nclass Z6201_UpdateView(SendSignalsMixin, UpdateView):\\n    success_url = 'forms/'\\n    template_name = 'Z6201_update.html'\\n    form_class = Z6201_ModelForm # the first form ModelForm class\\n    model = Z6201\\n\\n    # if operation_proc.group is None:  # 如果进程角色已经被置为空，说明已有其他人处理，退出本修改作业进程\\n    #     return redirect(reverse('index'))\\n    # operation_proc.group.set([])  # 设置作业进程所属角色组为空\\n\\n    context = {}\\n        \\n    def get_context_data(self, **kwargs):\\n        context = super(Z6201_UpdateView, self).get_context_data(**kwargs)\\n        operation_proc = get_object_or_404(OperationProc, id=kwargs['id'])\\n        customer = operation_proc.customer\\n        base_form = A6203_ModelForm(instance=A6203.objects.get(customer=1), prefix=\\\"base_form\\\")\\n        if self.request.method == 'POST':\\n            z6201_form = Z6201_ModelForm(self.request.POST, prefix=\\\"z6201_form\\\")\\n            # 构造作业完成消息参数\\n            self.send_operand_finished(kwargs)\\n            return redirect(reverse('index'))\\n        else:\\n            z6201_form = Z6201_ModelForm(instance=Z6201.objects.get(pid=kwargs['id']), prefix=\\\"z6201_form\\\")\\n            # 构造作业开始消息参数\\n            self.send_operand_started(kwargs['id'])\\n        # context\\n        context['base_form'] = base_form\\n        context['z6201_form'] = z6201_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['z6201_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(Z6201_CreateView, self).form_valid(form)\\n\", \"urls\": \"\\n    path('Z6201/create', Z6201_CreateView.as_view(), name='Z6201_create_url'),\\n    path('Z6201/<int:id>/update', Z6201_UpdateView.as_view(), name='Z6201_update_url'),\", \"templates\": [{\"Z6201_create.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'Z6201_create_url' %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>用户注册</h5>\\n            {{ z6201_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('z6201_form')\\\" />\\n    {% endblock %}\\n    \"}, {\"Z6201_update.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'Z6201_update_url' id %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>用户注册</h5>\\n            {{ z6201_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('z6201_form')\\\" />\\n    {% endblock %}\\n    \"}], \"models\": \"class Z6201(HsscFormModel):\\n    characterfield_name = models.CharField(max_length=255, null=True, blank=True, verbose_name='姓名')\\n    characterfield_gender = models.CharField(max_length=255, null=True, blank=True, verbose_name='性别')\\n    characterfield_age = models.CharField(max_length=255, null=True, blank=True, verbose_name='年龄')\\n    characterfield_contact_address = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系地址')\\n    characterfield_contact_number = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系电话')\\n    characterfield_name = models.CharField(max_length=255, null=True, blank=True, verbose_name='姓名')\\n    characterfield_gender = models.CharField(max_length=255, null=True, blank=True, verbose_name='性别')\\n    characterfield_age = models.CharField(max_length=255, null=True, blank=True, verbose_name='年龄')\\n    characterhssc_identification_number = models.CharField(max_length=255, null=True, blank=True, verbose_name='身份证号码')\\n    characterfield_contact_address = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系地址')\\n    characterfield_password_setting = models.CharField(max_length=255, null=True, blank=True, verbose_name='密码设置')\\n    characterfield_confirm_password = models.CharField(max_length=255, null=True, blank=True, verbose_name='确认密码')\\n    datetimefield_date_of_birth = models.DateTimeField(null=True, blank=True, verbose_name='出生日期')\\n\\n    class Meta:\\n        verbose_name = '用户注册'\\n        verbose_name_plural = verbose_name\\n\\n    def __str__(self):\\n        return self.customer.name\\n\\n        \\n\\n\", \"admin\": \"\\nclass Z6201Admin(HsscFormAdmin):\\n    fieldsets = ((\\\"基本信息\\\", {\\\"fields\\\": ((\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ),)}), \\n        (\\\"用户注册\\\", {\\\"fields\\\": (\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterhssc_identification_number\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_password_setting\\\", \\\"characterfield_confirm_password\\\", \\\"datetimefield_date_of_birth\\\", )}), )\\n    \\n    readonly_fields = [\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ]\\nadmin.site.register(Z6201, Z6201Admin)\\nclinic_site.register(Z6201, Z6201Admin)\\n\"}",
            "buessiness_forms": [
                "0c314e38-9e23-11ec-aa2c-fe35a7065cdd"
            ],
            "role": [
                "de1c5a4e-9aa1-11ec-bde1-8a6e55faf877"
            ]
        },
        {
            "label": "用户登录",
            "name": "user_login",
            "hssc_id": "e03291f4-9aa1-11ec-bde1-8a6e55faf877",
            "pym": "yhdl",
            "name_icpc": null,
            "managed_entity": "de87e7d2-9aa1-11ec-bde1-8a6e55faf877",
            "priority": 3,
            "is_system_service": true,
            "history_services_display": 0,
            "enable_queue_counter": true,
            "suppliers": null,
            "not_suitable": null,
            "execution_time_frame": null,
            "awaiting_time_frame": null,
            "working_hours": null,
            "frequency": null,
            "cost": null,
            "load_feedback": false,
            "resource_materials": null,
            "resource_devices": null,
            "resource_knowledge": null,
            "script": "{\"views\": \"\\nclass User_login_CreateView(CreateView):\\n    success_url = 'forms/'\\n    template_name = 'user_login_create.html'\\n    form_class = Z6230_ModelForm  # the first form ModelForm class\\n    model = Z6230\\n    context = {}\\n\\n    def get_context_data(self, **kwargs):\\n        context = super(User_login_CreateView, self).get_context_data(**kwargs)\\n        if self.request.method == 'POST':\\n            base_form = A6203_ModelForm(self.request.POST, prefix=\\\"base_form\\\")\\n            z6230_form = Z6230_ModelForm(self.request.POST, prefix=\\\"z6230_form\\\")\\n        else:\\n            base_form = A6203_ModelForm(prefix=\\\"base_form\\\")\\n            z6230_form = Z6230_ModelForm(prefix=\\\"z6230_form\\\")\\n        # context\\n        context['base_form'] = base_form\\n        context['z6230_form'] = z6230_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['z6230_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(User_login_CreateView, self).form_valid(form)\\n\\n\\n\\nclass User_login_UpdateView(SendSignalsMixin, UpdateView):\\n    success_url = 'forms/'\\n    template_name = 'user_login_update.html'\\n    form_class = Z6230_ModelForm # the first form ModelForm class\\n    model = Z6230\\n\\n    # if operation_proc.group is None:  # 如果进程角色已经被置为空，说明已有其他人处理，退出本修改作业进程\\n    #     return redirect(reverse('index'))\\n    # operation_proc.group.set([])  # 设置作业进程所属角色组为空\\n\\n    context = {}\\n        \\n    def get_context_data(self, **kwargs):\\n        context = super(User_login_UpdateView, self).get_context_data(**kwargs)\\n        operation_proc = get_object_or_404(OperationProc, id=kwargs['id'])\\n        customer = operation_proc.customer\\n        base_form = A6203_ModelForm(instance=A6203.objects.get(customer=1), prefix=\\\"base_form\\\")\\n        if self.request.method == 'POST':\\n            z6230_form = Z6230_ModelForm(self.request.POST, prefix=\\\"z6230_form\\\")\\n            # 构造作业完成消息参数\\n            self.send_operand_finished(kwargs)\\n            return redirect(reverse('index'))\\n        else:\\n            z6230_form = Z6230_ModelForm(instance=Z6230.objects.get(pid=kwargs['id']), prefix=\\\"z6230_form\\\")\\n            # 构造作业开始消息参数\\n            self.send_operand_started(kwargs['id'])\\n        # context\\n        context['base_form'] = base_form\\n        context['z6230_form'] = z6230_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['z6230_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(User_login_CreateView, self).form_valid(form)\\n\", \"urls\": \"\\n    path('user_login/create', User_login_CreateView.as_view(), name='user_login_create_url'),\\n    path('user_login/<int:id>/update', User_login_UpdateView.as_view(), name='user_login_update_url'),\", \"templates\": [{\"user_login_create.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'user_login_create_url' %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>用户登录</h5>\\n            {{ z6230_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('z6230_form')\\\" />\\n    {% endblock %}\\n    \"}, {\"user_login_update.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'user_login_update_url' id %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>用户登录</h5>\\n            {{ z6230_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('z6230_form')\\\" />\\n    {% endblock %}\\n    \"}], \"models\": \"class User_login(HsscFormModel):\\n    characterfield_name = models.CharField(max_length=255, null=True, blank=True, verbose_name='姓名')\\n    characterfield_gender = models.CharField(max_length=255, null=True, blank=True, verbose_name='性别')\\n    characterfield_age = models.CharField(max_length=255, null=True, blank=True, verbose_name='年龄')\\n    characterfield_contact_address = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系地址')\\n    characterfield_contact_number = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系电话')\\n    characterfield_username = models.CharField(max_length=255, null=True, blank=True, verbose_name='用户名')\\n    characterfield_password = models.CharField(max_length=255, null=True, blank=True, verbose_name='密码')\\n\\n    class Meta:\\n        verbose_name = '用户登录'\\n        verbose_name_plural = verbose_name\\n\\n    def __str__(self):\\n        return self.customer.name\\n\\n        \\n\\n\", \"admin\": \"\\nclass User_loginAdmin(HsscFormAdmin):\\n    fieldsets = ((\\\"基本信息\\\", {\\\"fields\\\": ((\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ),)}), \\n        (\\\"用户登录\\\", {\\\"fields\\\": (\\\"characterfield_username\\\", \\\"characterfield_password\\\", )}), )\\n    \\n    readonly_fields = [\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ]\\nadmin.site.register(User_login, User_loginAdmin)\\nclinic_site.register(User_login, User_loginAdmin)\\n\"}",
            "buessiness_forms": [
                "0bcb1fc8-9e23-11ec-aa2c-fe35a7065cdd"
            ],
            "role": [
                "de1c5a4e-9aa1-11ec-bde1-8a6e55faf877"
            ]
        },
        {
            "label": "员工登录",
            "name": "doctor_login",
            "hssc_id": "e032db46-9aa1-11ec-bde1-8a6e55faf877",
            "pym": "ygdl",
            "name_icpc": null,
            "managed_entity": "de87e7d2-9aa1-11ec-bde1-8a6e55faf877",
            "priority": 3,
            "is_system_service": true,
            "history_services_display": 0,
            "enable_queue_counter": true,
            "suppliers": null,
            "not_suitable": null,
            "execution_time_frame": null,
            "awaiting_time_frame": null,
            "working_hours": null,
            "frequency": null,
            "cost": null,
            "load_feedback": false,
            "resource_materials": null,
            "resource_devices": null,
            "resource_knowledge": null,
            "script": "{\"views\": \"\\nclass Doctor_login_CreateView(CreateView):\\n    success_url = 'forms/'\\n    template_name = 'doctor_login_create.html'\\n    form_class = Z6230_ModelForm  # the first form ModelForm class\\n    model = Z6230\\n    context = {}\\n\\n    def get_context_data(self, **kwargs):\\n        context = super(Doctor_login_CreateView, self).get_context_data(**kwargs)\\n        if self.request.method == 'POST':\\n            base_form = A6203_ModelForm(self.request.POST, prefix=\\\"base_form\\\")\\n            z6230_form = Z6230_ModelForm(self.request.POST, prefix=\\\"z6230_form\\\")\\n        else:\\n            base_form = A6203_ModelForm(prefix=\\\"base_form\\\")\\n            z6230_form = Z6230_ModelForm(prefix=\\\"z6230_form\\\")\\n        # context\\n        context['base_form'] = base_form\\n        context['z6230_form'] = z6230_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['z6230_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(Doctor_login_CreateView, self).form_valid(form)\\n\\n\\n\\nclass Doctor_login_UpdateView(SendSignalsMixin, UpdateView):\\n    success_url = 'forms/'\\n    template_name = 'doctor_login_update.html'\\n    form_class = Z6230_ModelForm # the first form ModelForm class\\n    model = Z6230\\n\\n    # if operation_proc.group is None:  # 如果进程角色已经被置为空，说明已有其他人处理，退出本修改作业进程\\n    #     return redirect(reverse('index'))\\n    # operation_proc.group.set([])  # 设置作业进程所属角色组为空\\n\\n    context = {}\\n        \\n    def get_context_data(self, **kwargs):\\n        context = super(Doctor_login_UpdateView, self).get_context_data(**kwargs)\\n        operation_proc = get_object_or_404(OperationProc, id=kwargs['id'])\\n        customer = operation_proc.customer\\n        base_form = A6203_ModelForm(instance=A6203.objects.get(customer=1), prefix=\\\"base_form\\\")\\n        if self.request.method == 'POST':\\n            z6230_form = Z6230_ModelForm(self.request.POST, prefix=\\\"z6230_form\\\")\\n            # 构造作业完成消息参数\\n            self.send_operand_finished(kwargs)\\n            return redirect(reverse('index'))\\n        else:\\n            z6230_form = Z6230_ModelForm(instance=Z6230.objects.get(pid=kwargs['id']), prefix=\\\"z6230_form\\\")\\n            # 构造作业开始消息参数\\n            self.send_operand_started(kwargs['id'])\\n        # context\\n        context['base_form'] = base_form\\n        context['z6230_form'] = z6230_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['z6230_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(Doctor_login_CreateView, self).form_valid(form)\\n\", \"urls\": \"\\n    path('doctor_login/create', Doctor_login_CreateView.as_view(), name='doctor_login_create_url'),\\n    path('doctor_login/<int:id>/update', Doctor_login_UpdateView.as_view(), name='doctor_login_update_url'),\", \"templates\": [{\"doctor_login_create.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'doctor_login_create_url' %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>用户登录</h5>\\n            {{ z6230_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('z6230_form')\\\" />\\n    {% endblock %}\\n    \"}, {\"doctor_login_update.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'doctor_login_update_url' id %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>用户登录</h5>\\n            {{ z6230_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('z6230_form')\\\" />\\n    {% endblock %}\\n    \"}], \"models\": \"class Doctor_login(HsscFormModel):\\n    characterfield_name = models.CharField(max_length=255, null=True, blank=True, verbose_name='姓名')\\n    characterfield_gender = models.CharField(max_length=255, null=True, blank=True, verbose_name='性别')\\n    characterfield_age = models.CharField(max_length=255, null=True, blank=True, verbose_name='年龄')\\n    characterfield_contact_address = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系地址')\\n    characterfield_contact_number = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系电话')\\n    characterfield_username = models.CharField(max_length=255, null=True, blank=True, verbose_name='用户名')\\n    characterfield_password = models.CharField(max_length=255, null=True, blank=True, verbose_name='密码')\\n\\n    class Meta:\\n        verbose_name = '员工登录'\\n        verbose_name_plural = verbose_name\\n\\n    def __str__(self):\\n        return self.customer.name\\n\\n        \\n\\n\", \"admin\": \"\\nclass Doctor_loginAdmin(HsscFormAdmin):\\n    fieldsets = ((\\\"基本信息\\\", {\\\"fields\\\": ((\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ),)}), \\n        (\\\"用户登录\\\", {\\\"fields\\\": (\\\"characterfield_username\\\", \\\"characterfield_password\\\", )}), )\\n    \\n    readonly_fields = [\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ]\\nadmin.site.register(Doctor_login, Doctor_loginAdmin)\\nclinic_site.register(Doctor_login, Doctor_loginAdmin)\\n\"}",
            "buessiness_forms": [
                "0bcb1fc8-9e23-11ec-aa2c-fe35a7065cdd"
            ],
            "role": []
        },
        {
            "label": "代人预约挂号",
            "name": "A6501",
            "hssc_id": "e035d648-9aa1-11ec-bde1-8a6e55faf877",
            "pym": "dryygh",
            "name_icpc": "A6501",
            "managed_entity": "de87e7d2-9aa1-11ec-bde1-8a6e55faf877",
            "priority": 3,
            "is_system_service": false,
            "history_services_display": 0,
            "enable_queue_counter": true,
            "suppliers": null,
            "not_suitable": null,
            "execution_time_frame": null,
            "awaiting_time_frame": null,
            "working_hours": null,
            "frequency": null,
            "cost": null,
            "load_feedback": false,
            "resource_materials": null,
            "resource_devices": null,
            "resource_knowledge": null,
            "script": "{\"views\": \"\\nclass A6501_CreateView(CreateView):\\n    success_url = 'forms/'\\n    template_name = 'A6501_create.html'\\n    form_class = A6501_ModelForm  # the first form ModelForm class\\n    model = A6501\\n    context = {}\\n\\n    def get_context_data(self, **kwargs):\\n        context = super(A6501_CreateView, self).get_context_data(**kwargs)\\n        if self.request.method == 'POST':\\n            base_form = A6203_ModelForm(self.request.POST, prefix=\\\"base_form\\\")\\n            a6501_form = A6501_ModelForm(self.request.POST, prefix=\\\"a6501_form\\\")\\n        else:\\n            base_form = A6203_ModelForm(prefix=\\\"base_form\\\")\\n            a6501_form = A6501_ModelForm(prefix=\\\"a6501_form\\\")\\n        # context\\n        context['base_form'] = base_form\\n        context['a6501_form'] = a6501_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['a6501_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(A6501_CreateView, self).form_valid(form)\\n\\n\\n\\nclass A6501_UpdateView(SendSignalsMixin, UpdateView):\\n    success_url = 'forms/'\\n    template_name = 'A6501_update.html'\\n    form_class = A6501_ModelForm # the first form ModelForm class\\n    model = A6501\\n\\n    # if operation_proc.group is None:  # 如果进程角色已经被置为空，说明已有其他人处理，退出本修改作业进程\\n    #     return redirect(reverse('index'))\\n    # operation_proc.group.set([])  # 设置作业进程所属角色组为空\\n\\n    context = {}\\n        \\n    def get_context_data(self, **kwargs):\\n        context = super(A6501_UpdateView, self).get_context_data(**kwargs)\\n        operation_proc = get_object_or_404(OperationProc, id=kwargs['id'])\\n        customer = operation_proc.customer\\n        base_form = A6203_ModelForm(instance=A6203.objects.get(customer=1), prefix=\\\"base_form\\\")\\n        if self.request.method == 'POST':\\n            a6501_form = A6501_ModelForm(self.request.POST, prefix=\\\"a6501_form\\\")\\n            # 构造作业完成消息参数\\n            self.send_operand_finished(kwargs)\\n            return redirect(reverse('index'))\\n        else:\\n            a6501_form = A6501_ModelForm(instance=A6501.objects.get(pid=kwargs['id']), prefix=\\\"a6501_form\\\")\\n            # 构造作业开始消息参数\\n            self.send_operand_started(kwargs['id'])\\n        # context\\n        context['base_form'] = base_form\\n        context['a6501_form'] = a6501_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['a6501_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(A6501_CreateView, self).form_valid(form)\\n\", \"urls\": \"\\n    path('A6501/create', A6501_CreateView.as_view(), name='A6501_create_url'),\\n    path('A6501/<int:id>/update', A6501_UpdateView.as_view(), name='A6501_update_url'),\", \"templates\": [{\"A6501_create.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'A6501_create_url' %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>代人预约挂号</h5>\\n            {{ a6501_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('a6501_form')\\\" />\\n    {% endblock %}\\n    \"}, {\"A6501_update.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'A6501_update_url' id %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>代人预约挂号</h5>\\n            {{ a6501_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('a6501_form')\\\" />\\n    {% endblock %}\\n    \"}], \"models\": \"class A6501(HsscFormModel):\\n    characterfield_name = models.CharField(max_length=255, null=True, blank=True, verbose_name='姓名')\\n    characterfield_gender = models.CharField(max_length=255, null=True, blank=True, verbose_name='性别')\\n    characterfield_age = models.CharField(max_length=255, null=True, blank=True, verbose_name='年龄')\\n    characterfield_contact_address = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系地址')\\n    characterfield_contact_number = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系电话')\\n    datetimefield_ri_qi_shi_jian = models.DateTimeField(null=True, blank=True, verbose_name='预约时间')\\n    boolfield_ze_ren_ren = models.ForeignKey(Staff, related_name='staff_for_boolfield_ze_ren_ren_A6501', on_delete=models.CASCADE, null=True, blank=True, verbose_name='责任人')\\n\\n    class Meta:\\n        verbose_name = '代人预约挂号'\\n        verbose_name_plural = verbose_name\\n\\n    def __str__(self):\\n        return self.customer.name\\n\\n        \\n\\n\", \"admin\": \"\\nclass A6501Admin(HsscFormAdmin):\\n    fieldsets = ((\\\"基本信息\\\", {\\\"fields\\\": ((\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ),)}), \\n        (\\\"代人预约挂号\\\", {\\\"fields\\\": (\\\"datetimefield_ri_qi_shi_jian\\\", \\\"boolfield_ze_ren_ren\\\", )}), )\\n    autocomplete_fields = [\\\"boolfield_ze_ren_ren\\\", ]\\n    readonly_fields = [\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ]\\nadmin.site.register(A6501, A6501Admin)\\nclinic_site.register(A6501, A6501Admin)\\n\"}",
            "buessiness_forms": [
                "0d137dbc-9e23-11ec-aa2c-fe35a7065cdd"
            ],
            "role": [
                "de18f0fc-9aa1-11ec-bde1-8a6e55faf877",
                "de1c5a4e-9aa1-11ec-bde1-8a6e55faf877"
            ]
        },
        {
            "label": "门诊分诊",
            "name": "A6502",
            "hssc_id": "e0371aa8-9aa1-11ec-bde1-8a6e55faf877",
            "pym": "mzfz",
            "name_icpc": "A6502",
            "managed_entity": "de87e7d2-9aa1-11ec-bde1-8a6e55faf877",
            "priority": 3,
            "is_system_service": false,
            "history_services_display": 0,
            "enable_queue_counter": true,
            "suppliers": null,
            "not_suitable": null,
            "execution_time_frame": null,
            "awaiting_time_frame": null,
            "working_hours": null,
            "frequency": null,
            "cost": null,
            "load_feedback": false,
            "resource_materials": null,
            "resource_devices": null,
            "resource_knowledge": null,
            "script": "{\"views\": \"\\nclass A6502_CreateView(CreateView):\\n    success_url = 'forms/'\\n    template_name = 'A6502_create.html'\\n    form_class = A6502_ModelForm  # the first form ModelForm class\\n    model = A6502\\n    context = {}\\n\\n    def get_context_data(self, **kwargs):\\n        context = super(A6502_CreateView, self).get_context_data(**kwargs)\\n        if self.request.method == 'POST':\\n            base_form = A6203_ModelForm(self.request.POST, prefix=\\\"base_form\\\")\\n            a6502_form = A6502_ModelForm(self.request.POST, prefix=\\\"a6502_form\\\")\\n        else:\\n            base_form = A6203_ModelForm(prefix=\\\"base_form\\\")\\n            a6502_form = A6502_ModelForm(prefix=\\\"a6502_form\\\")\\n        # context\\n        context['base_form'] = base_form\\n        context['a6502_form'] = a6502_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['a6502_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(A6502_CreateView, self).form_valid(form)\\n\\n\\n\\nclass A6502_UpdateView(SendSignalsMixin, UpdateView):\\n    success_url = 'forms/'\\n    template_name = 'A6502_update.html'\\n    form_class = A6502_ModelForm # the first form ModelForm class\\n    model = A6502\\n\\n    # if operation_proc.group is None:  # 如果进程角色已经被置为空，说明已有其他人处理，退出本修改作业进程\\n    #     return redirect(reverse('index'))\\n    # operation_proc.group.set([])  # 设置作业进程所属角色组为空\\n\\n    context = {}\\n        \\n    def get_context_data(self, **kwargs):\\n        context = super(A6502_UpdateView, self).get_context_data(**kwargs)\\n        operation_proc = get_object_or_404(OperationProc, id=kwargs['id'])\\n        customer = operation_proc.customer\\n        base_form = A6203_ModelForm(instance=A6203.objects.get(customer=1), prefix=\\\"base_form\\\")\\n        if self.request.method == 'POST':\\n            a6502_form = A6502_ModelForm(self.request.POST, prefix=\\\"a6502_form\\\")\\n            # 构造作业完成消息参数\\n            self.send_operand_finished(kwargs)\\n            return redirect(reverse('index'))\\n        else:\\n            a6502_form = A6502_ModelForm(instance=A6502.objects.get(pid=kwargs['id']), prefix=\\\"a6502_form\\\")\\n            # 构造作业开始消息参数\\n            self.send_operand_started(kwargs['id'])\\n        # context\\n        context['base_form'] = base_form\\n        context['a6502_form'] = a6502_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['a6502_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(A6502_CreateView, self).form_valid(form)\\n\", \"urls\": \"\\n    path('A6502/create', A6502_CreateView.as_view(), name='A6502_create_url'),\\n    path('A6502/<int:id>/update', A6502_UpdateView.as_view(), name='A6502_update_url'),\", \"templates\": [{\"A6502_create.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'A6502_create_url' %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>门诊分诊</h5>\\n            {{ a6502_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('a6502_form')\\\" />\\n    {% endblock %}\\n    \"}, {\"A6502_update.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'A6502_update_url' id %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>门诊分诊</h5>\\n            {{ a6502_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('a6502_form')\\\" />\\n    {% endblock %}\\n    \"}], \"models\": \"class A6502(HsscFormModel):\\n    characterfield_name = models.CharField(max_length=255, null=True, blank=True, verbose_name='姓名')\\n    characterfield_gender = models.CharField(max_length=255, null=True, blank=True, verbose_name='性别')\\n    characterfield_age = models.CharField(max_length=255, null=True, blank=True, verbose_name='年龄')\\n    characterfield_contact_address = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系地址')\\n    characterfield_contact_number = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系电话')\\n    boolfield_qian_dao_que_ren = models.ForeignKey(Qian_dao_que_ren, related_name='qian_dao_que_ren_for_boolfield_qian_dao_que_ren_A6502', on_delete=models.CASCADE, null=True, blank=True, verbose_name='签到确认')\\n\\n    class Meta:\\n        verbose_name = '门诊分诊'\\n        verbose_name_plural = verbose_name\\n\\n    def __str__(self):\\n        return self.customer.name\\n\\n        \\n\\n\", \"admin\": \"\\nclass A6502Admin(HsscFormAdmin):\\n    fieldsets = ((\\\"基本信息\\\", {\\\"fields\\\": ((\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ),)}), \\n        (\\\"门诊分诊\\\", {\\\"fields\\\": (\\\"boolfield_qian_dao_que_ren\\\", )}), )\\n    autocomplete_fields = [\\\"boolfield_qian_dao_que_ren\\\", ]\\n    readonly_fields = [\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ]\\nadmin.site.register(A6502, A6502Admin)\\nclinic_site.register(A6502, A6502Admin)\\n\"}",
            "buessiness_forms": [
                "0d1b5014-9e23-11ec-aa2c-fe35a7065cdd"
            ],
            "role": [
                "de194c50-9aa1-11ec-bde1-8a6e55faf877"
            ]
        },
        {
            "label": "体格检查/部分健康评估",
            "name": "A3101",
            "hssc_id": "e0385d3c-9aa1-11ec-bde1-8a6e55faf877",
            "pym": "tgjc/bfjkpg",
            "name_icpc": "A3101",
            "managed_entity": "de87e7d2-9aa1-11ec-bde1-8a6e55faf877",
            "priority": 3,
            "is_system_service": false,
            "history_services_display": 0,
            "enable_queue_counter": true,
            "suppliers": null,
            "not_suitable": null,
            "execution_time_frame": null,
            "awaiting_time_frame": null,
            "working_hours": null,
            "frequency": null,
            "cost": null,
            "load_feedback": false,
            "resource_materials": null,
            "resource_devices": null,
            "resource_knowledge": null,
            "script": "{\"views\": \"\\nclass A3101_CreateView(CreateView):\\n    success_url = 'forms/'\\n    template_name = 'A3101_create.html'\\n    form_class = A3001_ModelForm  # the first form ModelForm class\\n    model = A3001\\n    context = {}\\n\\n    def get_context_data(self, **kwargs):\\n        context = super(A3101_CreateView, self).get_context_data(**kwargs)\\n        if self.request.method == 'POST':\\n            base_form = A6203_ModelForm(self.request.POST, prefix=\\\"base_form\\\")\\n            a3001_form = A3001_ModelForm(self.request.POST, prefix=\\\"a3001_form\\\")\\n        else:\\n            base_form = A6203_ModelForm(prefix=\\\"base_form\\\")\\n            a3001_form = A3001_ModelForm(prefix=\\\"a3001_form\\\")\\n        # context\\n        context['base_form'] = base_form\\n        context['a3001_form'] = a3001_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['a3001_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(A3101_CreateView, self).form_valid(form)\\n\\n\\n\\nclass A3101_UpdateView(SendSignalsMixin, UpdateView):\\n    success_url = 'forms/'\\n    template_name = 'A3101_update.html'\\n    form_class = A3001_ModelForm # the first form ModelForm class\\n    model = A3001\\n\\n    # if operation_proc.group is None:  # 如果进程角色已经被置为空，说明已有其他人处理，退出本修改作业进程\\n    #     return redirect(reverse('index'))\\n    # operation_proc.group.set([])  # 设置作业进程所属角色组为空\\n\\n    context = {}\\n        \\n    def get_context_data(self, **kwargs):\\n        context = super(A3101_UpdateView, self).get_context_data(**kwargs)\\n        operation_proc = get_object_or_404(OperationProc, id=kwargs['id'])\\n        customer = operation_proc.customer\\n        base_form = A6203_ModelForm(instance=A6203.objects.get(customer=1), prefix=\\\"base_form\\\")\\n        if self.request.method == 'POST':\\n            a3001_form = A3001_ModelForm(self.request.POST, prefix=\\\"a3001_form\\\")\\n            # 构造作业完成消息参数\\n            self.send_operand_finished(kwargs)\\n            return redirect(reverse('index'))\\n        else:\\n            a3001_form = A3001_ModelForm(instance=A3001.objects.get(pid=kwargs['id']), prefix=\\\"a3001_form\\\")\\n            # 构造作业开始消息参数\\n            self.send_operand_started(kwargs['id'])\\n        # context\\n        context['base_form'] = base_form\\n        context['a3001_form'] = a3001_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['a3001_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(A3101_CreateView, self).form_valid(form)\\n\", \"urls\": \"\\n    path('A3101/create', A3101_CreateView.as_view(), name='A3101_create_url'),\\n    path('A3101/<int:id>/update', A3101_UpdateView.as_view(), name='A3101_update_url'),\", \"templates\": [{\"A3101_create.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'A3101_create_url' %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>体格检查表</h5>\\n            {{ a3001_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('a3001_form')\\\" />\\n    {% endblock %}\\n    \"}, {\"A3101_update.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'A3101_update_url' id %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>体格检查表</h5>\\n            {{ a3001_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('a3001_form')\\\" />\\n    {% endblock %}\\n    \"}], \"models\": \"class A3101(HsscFormModel):\\n    characterfield_name = models.CharField(max_length=255, null=True, blank=True, verbose_name='姓名')\\n    characterfield_gender = models.CharField(max_length=255, null=True, blank=True, verbose_name='性别')\\n    characterfield_age = models.CharField(max_length=255, null=True, blank=True, verbose_name='年龄')\\n    characterfield_contact_address = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系地址')\\n    characterfield_contact_number = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系电话')\\n    characterfield_right_eye_vision = models.CharField(max_length=255, null=True, blank=True, verbose_name='右眼视力')\\n    characterfield_left_eye_vision = models.CharField(max_length=255, null=True, blank=True, verbose_name='左眼视力')\\n    numberfield_body_temperature = models.IntegerField(null=True, blank=True, verbose_name='体温')\\n    numberfield_body_temperature_standard_value = models.IntegerField(null=True, blank=True, verbose_name='体温标准值')\\n    numberfield_body_temperature_up_limit = models.IntegerField(default=37.4, null=True, blank=True, verbose_name='体温上限')\\n    numberfield_body_temperature_down_limit = models.IntegerField(default=36.0, null=True, blank=True, verbose_name='体温下限')\\n    numberfield_pulse = models.IntegerField(null=True, blank=True, verbose_name='脉搏')\\n    numberfield_pulse_standard_value = models.IntegerField(null=True, blank=True, verbose_name='脉搏标准值')\\n    numberfield_pulse_up_limit = models.IntegerField(default=100.0, null=True, blank=True, verbose_name='脉搏上限')\\n    numberfield_pulse_down_limit = models.IntegerField(default=60.0, null=True, blank=True, verbose_name='脉搏下限')\\n    numberfield_respiratory_rate = models.IntegerField(null=True, blank=True, verbose_name='呼吸频率')\\n    numberfield_respiratory_rate_standard_value = models.IntegerField(null=True, blank=True, verbose_name='呼吸频率标准值')\\n    numberfield_respiratory_rate_up_limit = models.IntegerField(default=20.0, null=True, blank=True, verbose_name='呼吸频率上限')\\n    numberfield_respiratory_rate_down_limit = models.IntegerField(default=10.0, null=True, blank=True, verbose_name='呼吸频率下限')\\n    numberfield_hight = models.IntegerField(null=True, blank=True, verbose_name='身高')\\n    numberfield_hight_standard_value = models.IntegerField(null=True, blank=True, verbose_name='身高标准值')\\n    numberfield_hight_up_limit = models.IntegerField(null=True, blank=True, verbose_name='身高上限')\\n    numberfield_hight_down_limit = models.IntegerField(null=True, blank=True, verbose_name='身高下限')\\n    numberfield_weight = models.IntegerField(null=True, blank=True, verbose_name='体重')\\n    numberfield_weight_standard_value = models.IntegerField(null=True, blank=True, verbose_name='体重标准值')\\n    numberfield_weight_up_limit = models.IntegerField(null=True, blank=True, verbose_name='体重上限')\\n    numberfield_weight_down_limit = models.IntegerField(null=True, blank=True, verbose_name='体重下限')\\n    numberfield_body_mass_index = models.IntegerField(null=True, blank=True, verbose_name='体质指数')\\n    numberfield_body_mass_index_standard_value = models.IntegerField(null=True, blank=True, verbose_name='体质指数标准值')\\n    numberfield_body_mass_index_up_limit = models.IntegerField(default=23.9, null=True, blank=True, verbose_name='体质指数上限')\\n    numberfield_body_mass_index_down_limit = models.IntegerField(default=18.5, null=True, blank=True, verbose_name='体质指数下限')\\n    numberfield_systolic_blood_pressure = models.IntegerField(null=True, blank=True, verbose_name='收缩压')\\n    numberfield_systolic_blood_pressure_standard_value = models.IntegerField(null=True, blank=True, verbose_name='收缩压标准值')\\n    numberfield_systolic_blood_pressure_up_limit = models.IntegerField(default=139.0, null=True, blank=True, verbose_name='收缩压上限')\\n    numberfield_systolic_blood_pressure_down_limit = models.IntegerField(default=90.0, null=True, blank=True, verbose_name='收缩压下限')\\n    numberfield_diastolic_blood_pressure = models.IntegerField(null=True, blank=True, verbose_name='舒张压')\\n    numberfield_diastolic_blood_pressure_standard_value = models.IntegerField(null=True, blank=True, verbose_name='舒张压标准值')\\n    numberfield_diastolic_blood_pressure_up_limit = models.IntegerField(default=89.0, null=True, blank=True, verbose_name='舒张压上限')\\n    numberfield_diastolic_blood_pressure_down_limit = models.IntegerField(default=60.0, null=True, blank=True, verbose_name='舒张压下限')\\n    boolfield_yao_wei = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True, verbose_name='腰围')\\n    boolfield_yao_wei_standard_value = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True, verbose_name='腰围标准值')\\n    boolfield_yao_wei_up_limit = models.DecimalField(max_digits=10, decimal_places=2, default=85.0, null=True, blank=True, verbose_name='腰围上限')\\n    boolfield_yao_wei_down_limit = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True, verbose_name='腰围下限')\\n    relatedfield_athletic_ability = models.ForeignKey(Exercise_time, related_name='exercise_time_for_relatedfield_athletic_ability_A3101', on_delete=models.CASCADE, null=True, blank=True, verbose_name='运动能力')\\n    relatedfield_left_ear_hearing = models.ForeignKey(Hearing, related_name='hearing_for_relatedfield_left_ear_hearing_A3101', on_delete=models.CASCADE, null=True, blank=True, verbose_name='左耳听力')\\n    relatedfield_right_ear_hearing = models.ForeignKey(Hearing, related_name='hearing_for_relatedfield_right_ear_hearing_A3101', on_delete=models.CASCADE, null=True, blank=True, verbose_name='右耳听力')\\n    relatedfield_lips = models.ForeignKey(Lips, related_name='lips_for_relatedfield_lips_A3101', on_delete=models.CASCADE, null=True, blank=True, verbose_name='口唇')\\n    relatedfield_dentition = models.ForeignKey(Dentition, related_name='dentition_for_relatedfield_dentition_A3101', on_delete=models.CASCADE, null=True, blank=True, verbose_name='齿列')\\n    relatedfield_pharynx = models.ForeignKey(Pharynx, related_name='pharynx_for_relatedfield_pharynx_A3101', on_delete=models.CASCADE, null=True, blank=True, verbose_name='咽部')\\n    relatedfield_lower_extremity_edema = models.ForeignKey(Edema, related_name='edema_for_relatedfield_lower_extremity_edema_A3101', on_delete=models.CASCADE, null=True, blank=True, verbose_name='下肢水肿')\\n\\n    class Meta:\\n        verbose_name = '体格检查/部分健康评估'\\n        verbose_name_plural = verbose_name\\n\\n    def __str__(self):\\n        return self.customer.name\\n\\n        \\n\\n\", \"admin\": \"\\nclass A3101Admin(HsscFormAdmin):\\n    fieldsets = ((\\\"基本信息\\\", {\\\"fields\\\": ((\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ),)}), \\n        (\\\"体格检查表\\\", {\\\"fields\\\": (\\\"characterfield_right_eye_vision\\\", \\\"characterfield_left_eye_vision\\\", \\\"numberfield_body_temperature\\\", \\\"numberfield_pulse\\\", \\\"numberfield_respiratory_rate\\\", \\\"numberfield_hight\\\", \\\"numberfield_weight\\\", \\\"numberfield_body_mass_index\\\", \\\"numberfield_systolic_blood_pressure\\\", \\\"numberfield_diastolic_blood_pressure\\\", \\\"boolfield_yao_wei\\\", \\\"relatedfield_athletic_ability\\\", \\\"relatedfield_left_ear_hearing\\\", \\\"relatedfield_right_ear_hearing\\\", \\\"relatedfield_lips\\\", \\\"relatedfield_dentition\\\", \\\"relatedfield_pharynx\\\", \\\"relatedfield_lower_extremity_edema\\\", )}), )\\n    autocomplete_fields = [\\\"relatedfield_athletic_ability\\\", \\\"relatedfield_left_ear_hearing\\\", \\\"relatedfield_right_ear_hearing\\\", \\\"relatedfield_lips\\\", \\\"relatedfield_dentition\\\", \\\"relatedfield_pharynx\\\", \\\"relatedfield_lower_extremity_edema\\\", ]\\n    readonly_fields = [\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ]\\nadmin.site.register(A3101, A3101Admin)\\nclinic_site.register(A3101, A3101Admin)\\n\"}",
            "buessiness_forms": [
                "0cd1dcea-9e23-11ec-aa2c-fe35a7065cdd"
            ],
            "role": [
                "de194c50-9aa1-11ec-bde1-8a6e55faf877"
            ]
        },
        {
            "label": "糖尿病专用问诊",
            "name": "tang_niao_bing_zhuan_yong_wen_zhen",
            "hssc_id": "e0398a04-9aa1-11ec-bde1-8a6e55faf877",
            "pym": "tnbzywz",
            "name_icpc": null,
            "managed_entity": "de87e7d2-9aa1-11ec-bde1-8a6e55faf877",
            "priority": 3,
            "is_system_service": false,
            "history_services_display": 0,
            "enable_queue_counter": true,
            "suppliers": null,
            "not_suitable": null,
            "execution_time_frame": null,
            "awaiting_time_frame": null,
            "working_hours": null,
            "frequency": null,
            "cost": null,
            "load_feedback": false,
            "resource_materials": null,
            "resource_devices": null,
            "resource_knowledge": null,
            "script": "{\"views\": \"\\nclass Tang_niao_bing_zhuan_yong_wen_zhen_CreateView(CreateView):\\n    success_url = 'forms/'\\n    template_name = 'tang_niao_bing_zhuan_yong_wen_zhen_create.html'\\n    form_class = A6219_ModelForm  # the first form ModelForm class\\n    model = A6219\\n    context = {}\\n\\n    def get_context_data(self, **kwargs):\\n        context = super(Tang_niao_bing_zhuan_yong_wen_zhen_CreateView, self).get_context_data(**kwargs)\\n        if self.request.method == 'POST':\\n            base_form = A6203_ModelForm(self.request.POST, prefix=\\\"base_form\\\")\\n            a6219_form = A6219_ModelForm(self.request.POST, prefix=\\\"a6219_form\\\")\\n        else:\\n            base_form = A6203_ModelForm(prefix=\\\"base_form\\\")\\n            a6219_form = A6219_ModelForm(prefix=\\\"a6219_form\\\")\\n        # context\\n        context['base_form'] = base_form\\n        context['a6219_form'] = a6219_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['a6219_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(Tang_niao_bing_zhuan_yong_wen_zhen_CreateView, self).form_valid(form)\\n\\n\\n\\nclass Tang_niao_bing_zhuan_yong_wen_zhen_UpdateView(SendSignalsMixin, UpdateView):\\n    success_url = 'forms/'\\n    template_name = 'tang_niao_bing_zhuan_yong_wen_zhen_update.html'\\n    form_class = A6219_ModelForm # the first form ModelForm class\\n    model = A6219\\n\\n    # if operation_proc.group is None:  # 如果进程角色已经被置为空，说明已有其他人处理，退出本修改作业进程\\n    #     return redirect(reverse('index'))\\n    # operation_proc.group.set([])  # 设置作业进程所属角色组为空\\n\\n    context = {}\\n        \\n    def get_context_data(self, **kwargs):\\n        context = super(Tang_niao_bing_zhuan_yong_wen_zhen_UpdateView, self).get_context_data(**kwargs)\\n        operation_proc = get_object_or_404(OperationProc, id=kwargs['id'])\\n        customer = operation_proc.customer\\n        base_form = A6203_ModelForm(instance=A6203.objects.get(customer=1), prefix=\\\"base_form\\\")\\n        if self.request.method == 'POST':\\n            a6219_form = A6219_ModelForm(self.request.POST, prefix=\\\"a6219_form\\\")\\n            # 构造作业完成消息参数\\n            self.send_operand_finished(kwargs)\\n            return redirect(reverse('index'))\\n        else:\\n            a6219_form = A6219_ModelForm(instance=A6219.objects.get(pid=kwargs['id']), prefix=\\\"a6219_form\\\")\\n            # 构造作业开始消息参数\\n            self.send_operand_started(kwargs['id'])\\n        # context\\n        context['base_form'] = base_form\\n        context['a6219_form'] = a6219_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['a6219_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(Tang_niao_bing_zhuan_yong_wen_zhen_CreateView, self).form_valid(form)\\n\", \"urls\": \"\\n    path('tang_niao_bing_zhuan_yong_wen_zhen/create', Tang_niao_bing_zhuan_yong_wen_zhen_CreateView.as_view(), name='tang_niao_bing_zhuan_yong_wen_zhen_create_url'),\\n    path('tang_niao_bing_zhuan_yong_wen_zhen/<int:id>/update', Tang_niao_bing_zhuan_yong_wen_zhen_UpdateView.as_view(), name='tang_niao_bing_zhuan_yong_wen_zhen_update_url'),\", \"templates\": [{\"tang_niao_bing_zhuan_yong_wen_zhen_create.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'tang_niao_bing_zhuan_yong_wen_zhen_create_url' %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>糖尿病专用问诊</h5>\\n            {{ a6219_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('a6219_form')\\\" />\\n    {% endblock %}\\n    \"}, {\"tang_niao_bing_zhuan_yong_wen_zhen_update.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'tang_niao_bing_zhuan_yong_wen_zhen_update_url' id %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>糖尿病专用问诊</h5>\\n            {{ a6219_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('a6219_form')\\\" />\\n    {% endblock %}\\n    \"}], \"models\": \"class Tang_niao_bing_zhuan_yong_wen_zhen(HsscFormModel):\\n    characterfield_name = models.CharField(max_length=255, null=True, blank=True, verbose_name='姓名')\\n    characterfield_gender = models.CharField(max_length=255, null=True, blank=True, verbose_name='性别')\\n    characterfield_age = models.CharField(max_length=255, null=True, blank=True, verbose_name='年龄')\\n    characterfield_contact_address = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系地址')\\n    characterfield_contact_number = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系电话')\\n    characterfield_supplementary_description_of_the_condition = models.CharField(max_length=255, null=True, blank=True, verbose_name='病情补充描述')\\n    relatedfield_symptom_list = models.ManyToManyField(Icpc3_symptoms_and_problems, related_name='icpc3_symptoms_and_problems_for_relatedfield_symptom_list_tang_niao_bing_zhuan_yong_wen_zhen', verbose_name='症状')\\n    boolfield_tang_niao_bing_zheng_zhuang = models.ManyToManyField(Tang_niao_bing_zheng_zhuang, related_name='tang_niao_bing_zheng_zhuang_for_boolfield_tang_niao_bing_zheng_zhuang_tang_niao_bing_zhuan_yong_wen_zhen', verbose_name='糖尿病症状')\\n\\n    class Meta:\\n        verbose_name = '糖尿病专用问诊'\\n        verbose_name_plural = verbose_name\\n\\n    def __str__(self):\\n        return self.customer.name\\n\\n        \\n\\n\", \"admin\": \"\\nclass Tang_niao_bing_zhuan_yong_wen_zhenAdmin(HsscFormAdmin):\\n    fieldsets = ((\\\"基本信息\\\", {\\\"fields\\\": ((\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ),)}), \\n        (\\\"糖尿病专用问诊\\\", {\\\"fields\\\": (\\\"characterfield_supplementary_description_of_the_condition\\\", \\\"relatedfield_symptom_list\\\", \\\"boolfield_tang_niao_bing_zheng_zhuang\\\", )}), )\\n    autocomplete_fields = [\\\"relatedfield_symptom_list\\\", \\\"boolfield_tang_niao_bing_zheng_zhuang\\\", ]\\n    readonly_fields = [\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ]\\nadmin.site.register(Tang_niao_bing_zhuan_yong_wen_zhen, Tang_niao_bing_zhuan_yong_wen_zhenAdmin)\\nclinic_site.register(Tang_niao_bing_zhuan_yong_wen_zhen, Tang_niao_bing_zhuan_yong_wen_zhenAdmin)\\n\"}",
            "buessiness_forms": [
                "0c620622-9e23-11ec-aa2c-fe35a7065cdd"
            ],
            "role": [
                "de19d6a2-9aa1-11ec-bde1-8a6e55faf877"
            ]
        },
        {
            "label": "用药提醒服务",
            "name": "yao_shi_fu_wu",
            "hssc_id": "e03abda2-9aa1-11ec-bde1-8a6e55faf877",
            "pym": "yytxfw",
            "name_icpc": null,
            "managed_entity": "de87e7d2-9aa1-11ec-bde1-8a6e55faf877",
            "priority": 3,
            "is_system_service": false,
            "history_services_display": 0,
            "enable_queue_counter": true,
            "suppliers": null,
            "not_suitable": null,
            "execution_time_frame": null,
            "awaiting_time_frame": null,
            "working_hours": null,
            "frequency": null,
            "cost": null,
            "load_feedback": false,
            "resource_materials": null,
            "resource_devices": null,
            "resource_knowledge": null,
            "script": "{\"views\": \"\\nclass Yao_shi_fu_wu_CreateView(CreateView):\\n    success_url = 'forms/'\\n    template_name = 'yao_shi_fu_wu_create.html'\\n    form_class = A5002_ModelForm  # the first form ModelForm class\\n    model = A5002\\n    context = {}\\n\\n    def get_context_data(self, **kwargs):\\n        context = super(Yao_shi_fu_wu_CreateView, self).get_context_data(**kwargs)\\n        if self.request.method == 'POST':\\n            base_form = A6203_ModelForm(self.request.POST, prefix=\\\"base_form\\\")\\n            a5002_form = A5002_ModelForm(self.request.POST, prefix=\\\"a5002_form\\\")\\n        else:\\n            base_form = A6203_ModelForm(prefix=\\\"base_form\\\")\\n            a5002_form = A5002_ModelForm(prefix=\\\"a5002_form\\\")\\n        # context\\n        context['base_form'] = base_form\\n        context['a5002_form'] = a5002_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['a5002_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(Yao_shi_fu_wu_CreateView, self).form_valid(form)\\n\\n\\n\\nclass Yao_shi_fu_wu_UpdateView(SendSignalsMixin, UpdateView):\\n    success_url = 'forms/'\\n    template_name = 'yao_shi_fu_wu_update.html'\\n    form_class = A5002_ModelForm # the first form ModelForm class\\n    model = A5002\\n\\n    # if operation_proc.group is None:  # 如果进程角色已经被置为空，说明已有其他人处理，退出本修改作业进程\\n    #     return redirect(reverse('index'))\\n    # operation_proc.group.set([])  # 设置作业进程所属角色组为空\\n\\n    context = {}\\n        \\n    def get_context_data(self, **kwargs):\\n        context = super(Yao_shi_fu_wu_UpdateView, self).get_context_data(**kwargs)\\n        operation_proc = get_object_or_404(OperationProc, id=kwargs['id'])\\n        customer = operation_proc.customer\\n        base_form = A6203_ModelForm(instance=A6203.objects.get(customer=1), prefix=\\\"base_form\\\")\\n        if self.request.method == 'POST':\\n            a5002_form = A5002_ModelForm(self.request.POST, prefix=\\\"a5002_form\\\")\\n            # 构造作业完成消息参数\\n            self.send_operand_finished(kwargs)\\n            return redirect(reverse('index'))\\n        else:\\n            a5002_form = A5002_ModelForm(instance=A5002.objects.get(pid=kwargs['id']), prefix=\\\"a5002_form\\\")\\n            # 构造作业开始消息参数\\n            self.send_operand_started(kwargs['id'])\\n        # context\\n        context['base_form'] = base_form\\n        context['a5002_form'] = a5002_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['a5002_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(Yao_shi_fu_wu_CreateView, self).form_valid(form)\\n\", \"urls\": \"\\n    path('yao_shi_fu_wu/create', Yao_shi_fu_wu_CreateView.as_view(), name='yao_shi_fu_wu_create_url'),\\n    path('yao_shi_fu_wu/<int:id>/update', Yao_shi_fu_wu_UpdateView.as_view(), name='yao_shi_fu_wu_update_url'),\", \"templates\": [{\"yao_shi_fu_wu_create.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'yao_shi_fu_wu_create_url' %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>药事服务</h5>\\n            {{ a5002_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('a5002_form')\\\" />\\n    {% endblock %}\\n    \"}, {\"yao_shi_fu_wu_update.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'yao_shi_fu_wu_update_url' id %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>药事服务</h5>\\n            {{ a5002_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('a5002_form')\\\" />\\n    {% endblock %}\\n    \"}], \"models\": \"class Yao_shi_fu_wu(HsscFormModel):\\n    characterfield_name = models.CharField(max_length=255, null=True, blank=True, verbose_name='姓名')\\n    characterfield_gender = models.CharField(max_length=255, null=True, blank=True, verbose_name='性别')\\n    characterfield_age = models.CharField(max_length=255, null=True, blank=True, verbose_name='年龄')\\n    characterfield_contact_address = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系地址')\\n    characterfield_contact_number = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系电话')\\n    relatedfield_drug_name = models.ManyToManyField(Medicine, related_name='medicine_for_relatedfield_drug_name_yao_shi_fu_wu', verbose_name='药品名称')\\n    relatedfield_disease_name = models.ForeignKey(Icpc5_evaluation_and_diagnoses, related_name='icpc5_evaluation_and_diagnoses_for_relatedfield_disease_name_yao_shi_fu_wu', on_delete=models.CASCADE, null=True, blank=True, verbose_name='疾病名称')\\n    boolfield_shi_fou_ji_xu_shi_yong = models.ForeignKey(Ji_xu_shi_yong_qing_kuang, related_name='ji_xu_shi_yong_qing_kuang_for_boolfield_shi_fou_ji_xu_shi_yong_yao_shi_fu_wu', on_delete=models.CASCADE, null=True, blank=True, verbose_name='是否继续使用')\\n\\n    class Meta:\\n        verbose_name = '用药提醒服务'\\n        verbose_name_plural = verbose_name\\n\\n    def __str__(self):\\n        return self.customer.name\\n\\n        \\n\\n\", \"admin\": \"\\nclass Yao_shi_fu_wuAdmin(HsscFormAdmin):\\n    fieldsets = ((\\\"基本信息\\\", {\\\"fields\\\": ((\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ),)}), \\n        (\\\"药事服务\\\", {\\\"fields\\\": (\\\"relatedfield_drug_name\\\", \\\"relatedfield_disease_name\\\", \\\"boolfield_shi_fou_ji_xu_shi_yong\\\", )}), )\\n    autocomplete_fields = [\\\"relatedfield_drug_name\\\", \\\"relatedfield_disease_name\\\", \\\"boolfield_shi_fou_ji_xu_shi_yong\\\", ]\\n    readonly_fields = [\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ]\\nadmin.site.register(Yao_shi_fu_wu, Yao_shi_fu_wuAdmin)\\nclinic_site.register(Yao_shi_fu_wu, Yao_shi_fu_wuAdmin)\\n\"}",
            "buessiness_forms": [
                "0d22201a-9e23-11ec-aa2c-fe35a7065cdd"
            ],
            "role": [
                "de19d6a2-9aa1-11ec-bde1-8a6e55faf877"
            ]
        },
        {
            "label": "糖尿病自我监测",
            "name": "tang_niao_bing_zi_wo_jian_ce",
            "hssc_id": "e03bfa96-9aa1-11ec-bde1-8a6e55faf877",
            "pym": "tnbzwjc",
            "name_icpc": null,
            "managed_entity": "de87e7d2-9aa1-11ec-bde1-8a6e55faf877",
            "priority": 3,
            "is_system_service": false,
            "history_services_display": 0,
            "enable_queue_counter": true,
            "suppliers": null,
            "not_suitable": null,
            "execution_time_frame": null,
            "awaiting_time_frame": null,
            "working_hours": null,
            "frequency": null,
            "cost": null,
            "load_feedback": false,
            "resource_materials": null,
            "resource_devices": null,
            "resource_knowledge": null,
            "script": "{\"views\": \"\\nclass Tang_niao_bing_zi_wo_jian_ce_CreateView(CreateView):\\n    success_url = 'forms/'\\n    template_name = 'tang_niao_bing_zi_wo_jian_ce_create.html'\\n    form_class = T4505_ModelForm  # the first form ModelForm class\\n    model = T4505\\n    context = {}\\n\\n    def get_context_data(self, **kwargs):\\n        context = super(Tang_niao_bing_zi_wo_jian_ce_CreateView, self).get_context_data(**kwargs)\\n        if self.request.method == 'POST':\\n            base_form = A6203_ModelForm(self.request.POST, prefix=\\\"base_form\\\")\\n            t4505_form = T4505_ModelForm(self.request.POST, prefix=\\\"t4505_form\\\")\\n        else:\\n            base_form = A6203_ModelForm(prefix=\\\"base_form\\\")\\n            t4505_form = T4505_ModelForm(prefix=\\\"t4505_form\\\")\\n        # context\\n        context['base_form'] = base_form\\n        context['t4505_form'] = t4505_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['t4505_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(Tang_niao_bing_zi_wo_jian_ce_CreateView, self).form_valid(form)\\n\\n\\n\\nclass Tang_niao_bing_zi_wo_jian_ce_UpdateView(SendSignalsMixin, UpdateView):\\n    success_url = 'forms/'\\n    template_name = 'tang_niao_bing_zi_wo_jian_ce_update.html'\\n    form_class = T4505_ModelForm # the first form ModelForm class\\n    model = T4505\\n\\n    # if operation_proc.group is None:  # 如果进程角色已经被置为空，说明已有其他人处理，退出本修改作业进程\\n    #     return redirect(reverse('index'))\\n    # operation_proc.group.set([])  # 设置作业进程所属角色组为空\\n\\n    context = {}\\n        \\n    def get_context_data(self, **kwargs):\\n        context = super(Tang_niao_bing_zi_wo_jian_ce_UpdateView, self).get_context_data(**kwargs)\\n        operation_proc = get_object_or_404(OperationProc, id=kwargs['id'])\\n        customer = operation_proc.customer\\n        base_form = A6203_ModelForm(instance=A6203.objects.get(customer=1), prefix=\\\"base_form\\\")\\n        if self.request.method == 'POST':\\n            t4505_form = T4505_ModelForm(self.request.POST, prefix=\\\"t4505_form\\\")\\n            # 构造作业完成消息参数\\n            self.send_operand_finished(kwargs)\\n            return redirect(reverse('index'))\\n        else:\\n            t4505_form = T4505_ModelForm(instance=T4505.objects.get(pid=kwargs['id']), prefix=\\\"t4505_form\\\")\\n            # 构造作业开始消息参数\\n            self.send_operand_started(kwargs['id'])\\n        # context\\n        context['base_form'] = base_form\\n        context['t4505_form'] = t4505_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['t4505_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(Tang_niao_bing_zi_wo_jian_ce_CreateView, self).form_valid(form)\\n\", \"urls\": \"\\n    path('tang_niao_bing_zi_wo_jian_ce/create', Tang_niao_bing_zi_wo_jian_ce_CreateView.as_view(), name='tang_niao_bing_zi_wo_jian_ce_create_url'),\\n    path('tang_niao_bing_zi_wo_jian_ce/<int:id>/update', Tang_niao_bing_zi_wo_jian_ce_UpdateView.as_view(), name='tang_niao_bing_zi_wo_jian_ce_update_url'),\", \"templates\": [{\"tang_niao_bing_zi_wo_jian_ce_create.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'tang_niao_bing_zi_wo_jian_ce_create_url' %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>糖尿病自我监测</h5>\\n            {{ t4505_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('t4505_form')\\\" />\\n    {% endblock %}\\n    \"}, {\"tang_niao_bing_zi_wo_jian_ce_update.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'tang_niao_bing_zi_wo_jian_ce_update_url' id %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>糖尿病自我监测</h5>\\n            {{ t4505_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('t4505_form')\\\" />\\n    {% endblock %}\\n    \"}], \"models\": \"class Tang_niao_bing_zi_wo_jian_ce(HsscFormModel):\\n    characterfield_name = models.CharField(max_length=255, null=True, blank=True, verbose_name='姓名')\\n    characterfield_gender = models.CharField(max_length=255, null=True, blank=True, verbose_name='性别')\\n    characterfield_age = models.CharField(max_length=255, null=True, blank=True, verbose_name='年龄')\\n    characterfield_contact_address = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系地址')\\n    characterfield_contact_number = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系电话')\\n    numberfield_kong_fu_xue_tang = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True, verbose_name='空腹血糖')\\n    numberfield_kong_fu_xue_tang_standard_value = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True, verbose_name='空腹血糖标准值')\\n    numberfield_kong_fu_xue_tang_up_limit = models.DecimalField(max_digits=10, decimal_places=2, default=7.0, null=True, blank=True, verbose_name='空腹血糖上限')\\n    numberfield_kong_fu_xue_tang_down_limit = models.DecimalField(max_digits=10, decimal_places=2, default=3.9, null=True, blank=True, verbose_name='空腹血糖下限')\\n\\n    class Meta:\\n        verbose_name = '糖尿病自我监测'\\n        verbose_name_plural = verbose_name\\n\\n    def __str__(self):\\n        return self.customer.name\\n\\n        \\n\\n\", \"admin\": \"\\nclass Tang_niao_bing_zi_wo_jian_ceAdmin(HsscFormAdmin):\\n    fieldsets = ((\\\"基本信息\\\", {\\\"fields\\\": ((\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ),)}), \\n        (\\\"糖尿病自我监测\\\", {\\\"fields\\\": (\\\"numberfield_kong_fu_xue_tang\\\", )}), )\\n    \\n    readonly_fields = [\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ]\\nadmin.site.register(Tang_niao_bing_zi_wo_jian_ce, Tang_niao_bing_zi_wo_jian_ceAdmin)\\nclinic_site.register(Tang_niao_bing_zi_wo_jian_ce, Tang_niao_bing_zi_wo_jian_ceAdmin)\\n\"}",
            "buessiness_forms": [
                "0d3821bc-9e23-11ec-aa2c-fe35a7065cdd"
            ],
            "role": [
                "de1c5a4e-9aa1-11ec-bde1-8a6e55faf877"
            ]
        },
        {
            "label": "院内辅助问诊",
            "name": "A6217",
            "hssc_id": "e03d308c-9aa1-11ec-bde1-8a6e55faf877",
            "pym": "ynfzwz",
            "name_icpc": "A6217",
            "managed_entity": "de87e7d2-9aa1-11ec-bde1-8a6e55faf877",
            "priority": 3,
            "is_system_service": false,
            "history_services_display": 0,
            "enable_queue_counter": true,
            "suppliers": null,
            "not_suitable": null,
            "execution_time_frame": null,
            "awaiting_time_frame": null,
            "working_hours": null,
            "frequency": null,
            "cost": null,
            "load_feedback": false,
            "resource_materials": null,
            "resource_devices": null,
            "resource_knowledge": null,
            "script": "{\"views\": \"\\nclass A6217_CreateView(CreateView):\\n    success_url = 'forms/'\\n    template_name = 'A6217_create.html'\\n    form_class = A6217_ModelForm  # the first form ModelForm class\\n    model = A6217\\n    context = {}\\n\\n    def get_context_data(self, **kwargs):\\n        context = super(A6217_CreateView, self).get_context_data(**kwargs)\\n        if self.request.method == 'POST':\\n            base_form = A6203_ModelForm(self.request.POST, prefix=\\\"base_form\\\")\\n            a6217_form = A6217_ModelForm(self.request.POST, prefix=\\\"a6217_form\\\")\\n        else:\\n            base_form = A6203_ModelForm(prefix=\\\"base_form\\\")\\n            a6217_form = A6217_ModelForm(prefix=\\\"a6217_form\\\")\\n        # context\\n        context['base_form'] = base_form\\n        context['a6217_form'] = a6217_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['a6217_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(A6217_CreateView, self).form_valid(form)\\n\\n\\n\\nclass A6217_UpdateView(SendSignalsMixin, UpdateView):\\n    success_url = 'forms/'\\n    template_name = 'A6217_update.html'\\n    form_class = A6217_ModelForm # the first form ModelForm class\\n    model = A6217\\n\\n    # if operation_proc.group is None:  # 如果进程角色已经被置为空，说明已有其他人处理，退出本修改作业进程\\n    #     return redirect(reverse('index'))\\n    # operation_proc.group.set([])  # 设置作业进程所属角色组为空\\n\\n    context = {}\\n        \\n    def get_context_data(self, **kwargs):\\n        context = super(A6217_UpdateView, self).get_context_data(**kwargs)\\n        operation_proc = get_object_or_404(OperationProc, id=kwargs['id'])\\n        customer = operation_proc.customer\\n        base_form = A6203_ModelForm(instance=A6203.objects.get(customer=1), prefix=\\\"base_form\\\")\\n        if self.request.method == 'POST':\\n            a6217_form = A6217_ModelForm(self.request.POST, prefix=\\\"a6217_form\\\")\\n            # 构造作业完成消息参数\\n            self.send_operand_finished(kwargs)\\n            return redirect(reverse('index'))\\n        else:\\n            a6217_form = A6217_ModelForm(instance=A6217.objects.get(pid=kwargs['id']), prefix=\\\"a6217_form\\\")\\n            # 构造作业开始消息参数\\n            self.send_operand_started(kwargs['id'])\\n        # context\\n        context['base_form'] = base_form\\n        context['a6217_form'] = a6217_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['a6217_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(A6217_CreateView, self).form_valid(form)\\n\", \"urls\": \"\\n    path('A6217/create', A6217_CreateView.as_view(), name='A6217_create_url'),\\n    path('A6217/<int:id>/update', A6217_UpdateView.as_view(), name='A6217_update_url'),\", \"templates\": [{\"A6217_create.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'A6217_create_url' %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>院内辅助问诊</h5>\\n            {{ a6217_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('a6217_form')\\\" />\\n    {% endblock %}\\n    \"}, {\"A6217_update.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'A6217_update_url' id %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>院内辅助问诊</h5>\\n            {{ a6217_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('a6217_form')\\\" />\\n    {% endblock %}\\n    \"}], \"models\": \"class A6217(HsscFormModel):\\n    characterfield_name = models.CharField(max_length=255, null=True, blank=True, verbose_name='姓名')\\n    characterfield_gender = models.CharField(max_length=255, null=True, blank=True, verbose_name='性别')\\n    characterfield_age = models.CharField(max_length=255, null=True, blank=True, verbose_name='年龄')\\n    characterfield_contact_address = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系地址')\\n    characterfield_contact_number = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系电话')\\n    characterfield_supplementary_description_of_the_condition = models.CharField(max_length=255, null=True, blank=True, verbose_name='病情补充描述')\\n    relatedfield_symptom_list = models.ManyToManyField(Icpc3_symptoms_and_problems, related_name='icpc3_symptoms_and_problems_for_relatedfield_symptom_list_A6217', verbose_name='症状')\\n\\n    class Meta:\\n        verbose_name = '院内辅助问诊'\\n        verbose_name_plural = verbose_name\\n\\n    def __str__(self):\\n        return self.customer.name\\n\\n        \\n\\n\", \"admin\": \"\\nclass A6217Admin(HsscFormAdmin):\\n    fieldsets = ((\\\"基本信息\\\", {\\\"fields\\\": ((\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ),)}), \\n        (\\\"院内辅助问诊\\\", {\\\"fields\\\": (\\\"characterfield_supplementary_description_of_the_condition\\\", \\\"relatedfield_symptom_list\\\", )}), )\\n    autocomplete_fields = [\\\"relatedfield_symptom_list\\\", ]\\n    readonly_fields = [\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ]\\nadmin.site.register(A6217, A6217Admin)\\nclinic_site.register(A6217, A6217Admin)\\n\"}",
            "buessiness_forms": [
                "0c82d69a-9e23-11ec-aa2c-fe35a7065cdd"
            ],
            "role": [
                "de194c50-9aa1-11ec-bde1-8a6e55faf877"
            ]
        },
        {
            "label": "院外咨询",
            "name": "A6201",
            "hssc_id": "e03e65ba-9aa1-11ec-bde1-8a6e55faf877",
            "pym": "ywzx",
            "name_icpc": "A6201",
            "managed_entity": "de87e7d2-9aa1-11ec-bde1-8a6e55faf877",
            "priority": 3,
            "is_system_service": false,
            "history_services_display": 0,
            "enable_queue_counter": true,
            "suppliers": null,
            "not_suitable": null,
            "execution_time_frame": null,
            "awaiting_time_frame": null,
            "working_hours": null,
            "frequency": null,
            "cost": null,
            "load_feedback": false,
            "resource_materials": null,
            "resource_devices": null,
            "resource_knowledge": null,
            "script": "{\"views\": \"\\nclass A6201_CreateView(CreateView):\\n    success_url = 'forms/'\\n    template_name = 'A6201_create.html'\\n    form_class = A6201_ModelForm  # the first form ModelForm class\\n    model = A6201\\n    context = {}\\n\\n    def get_context_data(self, **kwargs):\\n        context = super(A6201_CreateView, self).get_context_data(**kwargs)\\n        if self.request.method == 'POST':\\n            base_form = A6203_ModelForm(self.request.POST, prefix=\\\"base_form\\\")\\n            a6201_form = A6201_ModelForm(self.request.POST, prefix=\\\"a6201_form\\\")\\n        else:\\n            base_form = A6203_ModelForm(prefix=\\\"base_form\\\")\\n            a6201_form = A6201_ModelForm(prefix=\\\"a6201_form\\\")\\n        # context\\n        context['base_form'] = base_form\\n        context['a6201_form'] = a6201_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['a6201_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(A6201_CreateView, self).form_valid(form)\\n\\n\\n\\nclass A6201_UpdateView(SendSignalsMixin, UpdateView):\\n    success_url = 'forms/'\\n    template_name = 'A6201_update.html'\\n    form_class = A6201_ModelForm # the first form ModelForm class\\n    model = A6201\\n\\n    # if operation_proc.group is None:  # 如果进程角色已经被置为空，说明已有其他人处理，退出本修改作业进程\\n    #     return redirect(reverse('index'))\\n    # operation_proc.group.set([])  # 设置作业进程所属角色组为空\\n\\n    context = {}\\n        \\n    def get_context_data(self, **kwargs):\\n        context = super(A6201_UpdateView, self).get_context_data(**kwargs)\\n        operation_proc = get_object_or_404(OperationProc, id=kwargs['id'])\\n        customer = operation_proc.customer\\n        base_form = A6203_ModelForm(instance=A6203.objects.get(customer=1), prefix=\\\"base_form\\\")\\n        if self.request.method == 'POST':\\n            a6201_form = A6201_ModelForm(self.request.POST, prefix=\\\"a6201_form\\\")\\n            # 构造作业完成消息参数\\n            self.send_operand_finished(kwargs)\\n            return redirect(reverse('index'))\\n        else:\\n            a6201_form = A6201_ModelForm(instance=A6201.objects.get(pid=kwargs['id']), prefix=\\\"a6201_form\\\")\\n            # 构造作业开始消息参数\\n            self.send_operand_started(kwargs['id'])\\n        # context\\n        context['base_form'] = base_form\\n        context['a6201_form'] = a6201_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['a6201_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(A6201_CreateView, self).form_valid(form)\\n\", \"urls\": \"\\n    path('A6201/create', A6201_CreateView.as_view(), name='A6201_create_url'),\\n    path('A6201/<int:id>/update', A6201_UpdateView.as_view(), name='A6201_update_url'),\", \"templates\": [{\"A6201_create.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'A6201_create_url' %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>院外咨询</h5>\\n            {{ a6201_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('a6201_form')\\\" />\\n    {% endblock %}\\n    \"}, {\"A6201_update.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'A6201_update_url' id %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>院外咨询</h5>\\n            {{ a6201_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('a6201_form')\\\" />\\n    {% endblock %}\\n    \"}], \"models\": \"class A6201(HsscFormModel):\\n    characterfield_name = models.CharField(max_length=255, null=True, blank=True, verbose_name='姓名')\\n    characterfield_gender = models.CharField(max_length=255, null=True, blank=True, verbose_name='性别')\\n    characterfield_age = models.CharField(max_length=255, null=True, blank=True, verbose_name='年龄')\\n    characterfield_contact_address = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系地址')\\n    characterfield_contact_number = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系电话')\\n    characterfield_supplementary_description_of_the_condition = models.CharField(max_length=255, null=True, blank=True, verbose_name='病情补充描述')\\n    relatedfield_symptom_list = models.ManyToManyField(Icpc3_symptoms_and_problems, related_name='icpc3_symptoms_and_problems_for_relatedfield_symptom_list_A6201', verbose_name='症状')\\n    boolfield_chang_yong_zheng_zhuang = models.ManyToManyField(Chang_yong_zheng_zhuang, related_name='chang_yong_zheng_zhuang_for_boolfield_chang_yong_zheng_zhuang_A6201', verbose_name='常用症状')\\n\\n    class Meta:\\n        verbose_name = '院外咨询'\\n        verbose_name_plural = verbose_name\\n\\n    def __str__(self):\\n        return self.customer.name\\n\\n        \\n\\n\", \"admin\": \"\\nclass A6201Admin(HsscFormAdmin):\\n    fieldsets = ((\\\"基本信息\\\", {\\\"fields\\\": ((\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ),)}), \\n        (\\\"院外咨询\\\", {\\\"fields\\\": (\\\"characterfield_supplementary_description_of_the_condition\\\", \\\"relatedfield_symptom_list\\\", \\\"boolfield_chang_yong_zheng_zhuang\\\", )}), )\\n    autocomplete_fields = [\\\"relatedfield_symptom_list\\\", \\\"boolfield_chang_yong_zheng_zhuang\\\", ]\\n    readonly_fields = [\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ]\\nadmin.site.register(A6201, A6201Admin)\\nclinic_site.register(A6201, A6201Admin)\\n\"}",
            "buessiness_forms": [
                "0c89031c-9e23-11ec-aa2c-fe35a7065cdd"
            ],
            "role": [
                "de1c5a4e-9aa1-11ec-bde1-8a6e55faf877"
            ]
        },
        {
            "label": "门诊医生问诊",
            "name": "A6218",
            "hssc_id": "e03f9d54-9aa1-11ec-bde1-8a6e55faf877",
            "pym": "mzyswz",
            "name_icpc": "A6218",
            "managed_entity": "de87e7d2-9aa1-11ec-bde1-8a6e55faf877",
            "priority": 3,
            "is_system_service": false,
            "history_services_display": 0,
            "enable_queue_counter": true,
            "suppliers": null,
            "not_suitable": null,
            "execution_time_frame": null,
            "awaiting_time_frame": null,
            "working_hours": null,
            "frequency": null,
            "cost": null,
            "load_feedback": false,
            "resource_materials": null,
            "resource_devices": null,
            "resource_knowledge": null,
            "script": "{\"views\": \"\\nclass A6218_CreateView(CreateView):\\n    success_url = 'forms/'\\n    template_name = 'A6218_create.html'\\n    form_class = A6218_ModelForm  # the first form ModelForm class\\n    model = A6218\\n    context = {}\\n\\n    def get_context_data(self, **kwargs):\\n        context = super(A6218_CreateView, self).get_context_data(**kwargs)\\n        if self.request.method == 'POST':\\n            base_form = A6203_ModelForm(self.request.POST, prefix=\\\"base_form\\\")\\n            a6218_form = A6218_ModelForm(self.request.POST, prefix=\\\"a6218_form\\\")\\n        else:\\n            base_form = A6203_ModelForm(prefix=\\\"base_form\\\")\\n            a6218_form = A6218_ModelForm(prefix=\\\"a6218_form\\\")\\n        # context\\n        context['base_form'] = base_form\\n        context['a6218_form'] = a6218_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['a6218_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(A6218_CreateView, self).form_valid(form)\\n\\n\\n\\nclass A6218_UpdateView(SendSignalsMixin, UpdateView):\\n    success_url = 'forms/'\\n    template_name = 'A6218_update.html'\\n    form_class = A6218_ModelForm # the first form ModelForm class\\n    model = A6218\\n\\n    # if operation_proc.group is None:  # 如果进程角色已经被置为空，说明已有其他人处理，退出本修改作业进程\\n    #     return redirect(reverse('index'))\\n    # operation_proc.group.set([])  # 设置作业进程所属角色组为空\\n\\n    context = {}\\n        \\n    def get_context_data(self, **kwargs):\\n        context = super(A6218_UpdateView, self).get_context_data(**kwargs)\\n        operation_proc = get_object_or_404(OperationProc, id=kwargs['id'])\\n        customer = operation_proc.customer\\n        base_form = A6203_ModelForm(instance=A6203.objects.get(customer=1), prefix=\\\"base_form\\\")\\n        if self.request.method == 'POST':\\n            a6218_form = A6218_ModelForm(self.request.POST, prefix=\\\"a6218_form\\\")\\n            # 构造作业完成消息参数\\n            self.send_operand_finished(kwargs)\\n            return redirect(reverse('index'))\\n        else:\\n            a6218_form = A6218_ModelForm(instance=A6218.objects.get(pid=kwargs['id']), prefix=\\\"a6218_form\\\")\\n            # 构造作业开始消息参数\\n            self.send_operand_started(kwargs['id'])\\n        # context\\n        context['base_form'] = base_form\\n        context['a6218_form'] = a6218_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['a6218_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(A6218_CreateView, self).form_valid(form)\\n\", \"urls\": \"\\n    path('A6218/create', A6218_CreateView.as_view(), name='A6218_create_url'),\\n    path('A6218/<int:id>/update', A6218_UpdateView.as_view(), name='A6218_update_url'),\", \"templates\": [{\"A6218_create.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'A6218_create_url' %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>门诊医生问诊</h5>\\n            {{ a6218_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('a6218_form')\\\" />\\n    {% endblock %}\\n    \"}, {\"A6218_update.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'A6218_update_url' id %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>门诊医生问诊</h5>\\n            {{ a6218_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('a6218_form')\\\" />\\n    {% endblock %}\\n    \"}], \"models\": \"class A6218(HsscFormModel):\\n    characterfield_name = models.CharField(max_length=255, null=True, blank=True, verbose_name='姓名')\\n    characterfield_gender = models.CharField(max_length=255, null=True, blank=True, verbose_name='性别')\\n    characterfield_age = models.CharField(max_length=255, null=True, blank=True, verbose_name='年龄')\\n    characterfield_contact_address = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系地址')\\n    characterfield_contact_number = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系电话')\\n    characterfield_supplementary_description_of_the_condition = models.CharField(max_length=255, null=True, blank=True, verbose_name='病情补充描述')\\n    relatedfield_symptom_list = models.ManyToManyField(Icpc3_symptoms_and_problems, related_name='icpc3_symptoms_and_problems_for_relatedfield_symptom_list_A6218', verbose_name='症状')\\n\\n    class Meta:\\n        verbose_name = '门诊医生问诊'\\n        verbose_name_plural = verbose_name\\n\\n    def __str__(self):\\n        return self.customer.name\\n\\n        \\n\\n\", \"admin\": \"\\nclass A6218Admin(HsscFormAdmin):\\n    fieldsets = ((\\\"基本信息\\\", {\\\"fields\\\": ((\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ),)}), \\n        (\\\"门诊医生问诊\\\", {\\\"fields\\\": (\\\"characterfield_supplementary_description_of_the_condition\\\", \\\"relatedfield_symptom_list\\\", )}), )\\n    autocomplete_fields = [\\\"relatedfield_symptom_list\\\", ]\\n    readonly_fields = [\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ]\\nadmin.site.register(A6218, A6218Admin)\\nclinic_site.register(A6218, A6218Admin)\\n\"}",
            "buessiness_forms": [
                "0c75d8a0-9e23-11ec-aa2c-fe35a7065cdd"
            ],
            "role": [
                "de19d6a2-9aa1-11ec-bde1-8a6e55faf877"
            ]
        },
        {
            "label": "胰岛素依赖性糖尿病",
            "name": "T8901",
            "hssc_id": "e040d160-9aa1-11ec-bde1-8a6e55faf877",
            "pym": "ydsylxtnb",
            "name_icpc": "T8901",
            "managed_entity": "de87e7d2-9aa1-11ec-bde1-8a6e55faf877",
            "priority": 3,
            "is_system_service": false,
            "history_services_display": 0,
            "enable_queue_counter": true,
            "suppliers": null,
            "not_suitable": null,
            "execution_time_frame": null,
            "awaiting_time_frame": null,
            "working_hours": null,
            "frequency": null,
            "cost": null,
            "load_feedback": false,
            "resource_materials": null,
            "resource_devices": null,
            "resource_knowledge": null,
            "script": "{\"views\": \"\\nclass T8901_CreateView(CreateView):\\n    success_url = 'forms/'\\n    template_name = 'T8901_create.html'\\n    form_class = T9001_ModelForm  # the first form ModelForm class\\n    model = T9001\\n    context = {}\\n\\n    def get_context_data(self, **kwargs):\\n        context = super(T8901_CreateView, self).get_context_data(**kwargs)\\n        if self.request.method == 'POST':\\n            base_form = A6203_ModelForm(self.request.POST, prefix=\\\"base_form\\\")\\n            t9001_form = T9001_ModelForm(self.request.POST, prefix=\\\"t9001_form\\\")\\n        else:\\n            base_form = A6203_ModelForm(prefix=\\\"base_form\\\")\\n            t9001_form = T9001_ModelForm(prefix=\\\"t9001_form\\\")\\n        # context\\n        context['base_form'] = base_form\\n        context['t9001_form'] = t9001_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['t9001_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(T8901_CreateView, self).form_valid(form)\\n\\n\\n\\nclass T8901_UpdateView(SendSignalsMixin, UpdateView):\\n    success_url = 'forms/'\\n    template_name = 'T8901_update.html'\\n    form_class = T9001_ModelForm # the first form ModelForm class\\n    model = T9001\\n\\n    # if operation_proc.group is None:  # 如果进程角色已经被置为空，说明已有其他人处理，退出本修改作业进程\\n    #     return redirect(reverse('index'))\\n    # operation_proc.group.set([])  # 设置作业进程所属角色组为空\\n\\n    context = {}\\n        \\n    def get_context_data(self, **kwargs):\\n        context = super(T8901_UpdateView, self).get_context_data(**kwargs)\\n        operation_proc = get_object_or_404(OperationProc, id=kwargs['id'])\\n        customer = operation_proc.customer\\n        base_form = A6203_ModelForm(instance=A6203.objects.get(customer=1), prefix=\\\"base_form\\\")\\n        if self.request.method == 'POST':\\n            t9001_form = T9001_ModelForm(self.request.POST, prefix=\\\"t9001_form\\\")\\n            # 构造作业完成消息参数\\n            self.send_operand_finished(kwargs)\\n            return redirect(reverse('index'))\\n        else:\\n            t9001_form = T9001_ModelForm(instance=T9001.objects.get(pid=kwargs['id']), prefix=\\\"t9001_form\\\")\\n            # 构造作业开始消息参数\\n            self.send_operand_started(kwargs['id'])\\n        # context\\n        context['base_form'] = base_form\\n        context['t9001_form'] = t9001_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['t9001_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(T8901_CreateView, self).form_valid(form)\\n\", \"urls\": \"\\n    path('T8901/create', T8901_CreateView.as_view(), name='T8901_create_url'),\\n    path('T8901/<int:id>/update', T8901_UpdateView.as_view(), name='T8901_update_url'),\", \"templates\": [{\"T8901_create.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'T8901_create_url' %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>非胰岛素依赖性糖尿病</h5>\\n            {{ t9001_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('t9001_form')\\\" />\\n    {% endblock %}\\n    \"}, {\"T8901_update.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'T8901_update_url' id %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>非胰岛素依赖性糖尿病</h5>\\n            {{ t9001_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('t9001_form')\\\" />\\n    {% endblock %}\\n    \"}], \"models\": \"class T8901(HsscFormModel):\\n    characterfield_name = models.CharField(max_length=255, null=True, blank=True, verbose_name='姓名')\\n    characterfield_gender = models.CharField(max_length=255, null=True, blank=True, verbose_name='性别')\\n    characterfield_age = models.CharField(max_length=255, null=True, blank=True, verbose_name='年龄')\\n    characterfield_contact_address = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系地址')\\n    characterfield_contact_number = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系电话')\\n    relatedfield_disease_name = models.ForeignKey(Icpc5_evaluation_and_diagnoses, related_name='icpc5_evaluation_and_diagnoses_for_relatedfield_disease_name_T8901', on_delete=models.CASCADE, null=True, blank=True, verbose_name='疾病名称')\\n    relatedfield_yi_lou_zhen_duan = models.ManyToManyField(Icpc5_evaluation_and_diagnoses, related_name='icpc5_evaluation_and_diagnoses_for_relatedfield_yi_lou_zhen_duan_T8901', verbose_name='可能诊断')\\n    relatedfield_pai_chu_zhen_duan = models.ManyToManyField(Icpc5_evaluation_and_diagnoses, related_name='icpc5_evaluation_and_diagnoses_for_relatedfield_pai_chu_zhen_duan_T8901', verbose_name='排除诊断')\\n\\n    class Meta:\\n        verbose_name = '胰岛素依赖性糖尿病'\\n        verbose_name_plural = verbose_name\\n\\n    def __str__(self):\\n        return self.customer.name\\n\\n        \\n\\n\", \"admin\": \"\\nclass T8901Admin(HsscFormAdmin):\\n    fieldsets = ((\\\"基本信息\\\", {\\\"fields\\\": ((\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ),)}), \\n        (\\\"非胰岛素依赖性糖尿病\\\", {\\\"fields\\\": (\\\"relatedfield_disease_name\\\", \\\"relatedfield_yi_lou_zhen_duan\\\", \\\"relatedfield_pai_chu_zhen_duan\\\", )}), )\\n    autocomplete_fields = [\\\"relatedfield_disease_name\\\", \\\"relatedfield_yi_lou_zhen_duan\\\", \\\"relatedfield_pai_chu_zhen_duan\\\", ]\\n    readonly_fields = [\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ]\\nadmin.site.register(T8901, T8901Admin)\\nclinic_site.register(T8901, T8901Admin)\\n\"}",
            "buessiness_forms": [
                "0c7bdb06-9e23-11ec-aa2c-fe35a7065cdd"
            ],
            "role": [
                "de19d6a2-9aa1-11ec-bde1-8a6e55faf877"
            ]
        },
        {
            "label": "糖尿病一般随访",
            "name": "T6301",
            "hssc_id": "e0420c06-9aa1-11ec-bde1-8a6e55faf877",
            "pym": "tnbybsf",
            "name_icpc": "T6301",
            "managed_entity": "de87e7d2-9aa1-11ec-bde1-8a6e55faf877",
            "priority": 3,
            "is_system_service": false,
            "history_services_display": 0,
            "enable_queue_counter": true,
            "suppliers": null,
            "not_suitable": null,
            "execution_time_frame": null,
            "awaiting_time_frame": null,
            "working_hours": null,
            "frequency": null,
            "cost": null,
            "load_feedback": false,
            "resource_materials": null,
            "resource_devices": null,
            "resource_knowledge": null,
            "script": "{\"views\": \"\\nclass T6301_CreateView(CreateView):\\n    success_url = 'forms/'\\n    template_name = 'T6301_create.html'\\n    form_class = T6301_ModelForm  # the first form ModelForm class\\n    model = T6301\\n    context = {}\\n\\n    def get_context_data(self, **kwargs):\\n        context = super(T6301_CreateView, self).get_context_data(**kwargs)\\n        if self.request.method == 'POST':\\n            base_form = A6203_ModelForm(self.request.POST, prefix=\\\"base_form\\\")\\n            t6301_form = T6301_ModelForm(self.request.POST, prefix=\\\"t6301_form\\\")\\n        else:\\n            base_form = A6203_ModelForm(prefix=\\\"base_form\\\")\\n            t6301_form = T6301_ModelForm(prefix=\\\"t6301_form\\\")\\n        # context\\n        context['base_form'] = base_form\\n        context['t6301_form'] = t6301_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['t6301_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(T6301_CreateView, self).form_valid(form)\\n\\n\\n\\nclass T6301_UpdateView(SendSignalsMixin, UpdateView):\\n    success_url = 'forms/'\\n    template_name = 'T6301_update.html'\\n    form_class = T6301_ModelForm # the first form ModelForm class\\n    model = T6301\\n\\n    # if operation_proc.group is None:  # 如果进程角色已经被置为空，说明已有其他人处理，退出本修改作业进程\\n    #     return redirect(reverse('index'))\\n    # operation_proc.group.set([])  # 设置作业进程所属角色组为空\\n\\n    context = {}\\n        \\n    def get_context_data(self, **kwargs):\\n        context = super(T6301_UpdateView, self).get_context_data(**kwargs)\\n        operation_proc = get_object_or_404(OperationProc, id=kwargs['id'])\\n        customer = operation_proc.customer\\n        base_form = A6203_ModelForm(instance=A6203.objects.get(customer=1), prefix=\\\"base_form\\\")\\n        if self.request.method == 'POST':\\n            t6301_form = T6301_ModelForm(self.request.POST, prefix=\\\"t6301_form\\\")\\n            # 构造作业完成消息参数\\n            self.send_operand_finished(kwargs)\\n            return redirect(reverse('index'))\\n        else:\\n            t6301_form = T6301_ModelForm(instance=T6301.objects.get(pid=kwargs['id']), prefix=\\\"t6301_form\\\")\\n            # 构造作业开始消息参数\\n            self.send_operand_started(kwargs['id'])\\n        # context\\n        context['base_form'] = base_form\\n        context['t6301_form'] = t6301_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['t6301_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(T6301_CreateView, self).form_valid(form)\\n\", \"urls\": \"\\n    path('T6301/create', T6301_CreateView.as_view(), name='T6301_create_url'),\\n    path('T6301/<int:id>/update', T6301_UpdateView.as_view(), name='T6301_update_url'),\", \"templates\": [{\"T6301_create.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'T6301_create_url' %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>糖尿病一般随访</h5>\\n            {{ t6301_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('t6301_form')\\\" />\\n    {% endblock %}\\n    \"}, {\"T6301_update.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'T6301_update_url' id %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>糖尿病一般随访</h5>\\n            {{ t6301_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('t6301_form')\\\" />\\n    {% endblock %}\\n    \"}], \"models\": \"class T6301(HsscFormModel):\\n    characterfield_name = models.CharField(max_length=255, null=True, blank=True, verbose_name='姓名')\\n    characterfield_gender = models.CharField(max_length=255, null=True, blank=True, verbose_name='性别')\\n    characterfield_age = models.CharField(max_length=255, null=True, blank=True, verbose_name='年龄')\\n    characterfield_contact_address = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系地址')\\n    characterfield_contact_number = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系电话')\\n    characterfield_average_sleep_duration = models.CharField(max_length=255, null=True, blank=True, verbose_name='平均睡眠时长')\\n    characterfield_duration_of_insomnia = models.CharField(max_length=255, null=True, blank=True, verbose_name='持续失眠时间')\\n    characterfield_name = models.CharField(max_length=255, null=True, blank=True, verbose_name='姓名')\\n    characterhssc_identification_number = models.CharField(max_length=255, null=True, blank=True, verbose_name='身份证号码')\\n    characterfield_resident_file_number = models.CharField(max_length=255, null=True, blank=True, verbose_name='居民档案号')\\n    characterfield_family_address = models.CharField(max_length=255, null=True, blank=True, verbose_name='家庭地址')\\n    characterfield_contact_number = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系电话')\\n    characterfield_medical_ic_card_number = models.CharField(max_length=255, null=True, blank=True, verbose_name='医疗ic卡号')\\n    numberfield_systolic_blood_pressure = models.IntegerField(null=True, blank=True, verbose_name='收缩压')\\n    numberfield_systolic_blood_pressure_standard_value = models.IntegerField(null=True, blank=True, verbose_name='收缩压标准值')\\n    numberfield_systolic_blood_pressure_up_limit = models.IntegerField(default=139.0, null=True, blank=True, verbose_name='收缩压上限')\\n    numberfield_systolic_blood_pressure_down_limit = models.IntegerField(default=90.0, null=True, blank=True, verbose_name='收缩压下限')\\n    numberfield_diastolic_blood_pressure = models.IntegerField(null=True, blank=True, verbose_name='舒张压')\\n    numberfield_diastolic_blood_pressure_standard_value = models.IntegerField(null=True, blank=True, verbose_name='舒张压标准值')\\n    numberfield_diastolic_blood_pressure_up_limit = models.IntegerField(default=89.0, null=True, blank=True, verbose_name='舒张压上限')\\n    numberfield_diastolic_blood_pressure_down_limit = models.IntegerField(default=60.0, null=True, blank=True, verbose_name='舒张压下限')\\n    datetimefield_date_of_birth = models.DateTimeField(null=True, blank=True, verbose_name='出生日期')\\n    relatedfield_drug_name = models.ManyToManyField(Medicine, related_name='medicine_for_relatedfield_drug_name_T6301', verbose_name='药品名称')\\n    relatedfield_gender = models.ForeignKey(Gender, related_name='gender_for_relatedfield_gender_T6301', on_delete=models.CASCADE, null=True, blank=True, verbose_name='性别')\\n    relatedfield_nationality = models.ForeignKey(Nationality, related_name='nationality_for_relatedfield_nationality_T6301', on_delete=models.CASCADE, null=True, blank=True, verbose_name='民族')\\n    relatedfield_marital_status = models.ForeignKey(Marital_status, related_name='marital_status_for_relatedfield_marital_status_T6301', on_delete=models.CASCADE, null=True, blank=True, verbose_name='婚姻状况')\\n    relatedfield_education = models.ForeignKey(Education, related_name='education_for_relatedfield_education_T6301', on_delete=models.CASCADE, null=True, blank=True, verbose_name='文化程度')\\n    relatedfield_occupational_status = models.ForeignKey(Occupational_status, related_name='occupational_status_for_relatedfield_occupational_status_T6301', on_delete=models.CASCADE, null=True, blank=True, verbose_name='职业状况')\\n    relatedfield_medical_expenses_burden = models.ManyToManyField(Medical_expenses_burden, related_name='medical_expenses_burden_for_relatedfield_medical_expenses_burden_T6301', verbose_name='医疗费用负担')\\n    relatedfield_type_of_residence = models.ForeignKey(Type_of_residence, related_name='type_of_residence_for_relatedfield_type_of_residence_T6301', on_delete=models.CASCADE, null=True, blank=True, verbose_name='居住类型')\\n    relatedfield_blood_type = models.ForeignKey(Blood_type, related_name='blood_type_for_relatedfield_blood_type_T6301', on_delete=models.CASCADE, null=True, blank=True, verbose_name='血型')\\n    relatedfield_signed_family_doctor = models.ForeignKey(Staff, related_name='staff_for_relatedfield_signed_family_doctor_T6301', on_delete=models.CASCADE, null=True, blank=True, verbose_name='签约家庭医生')\\n    relatedfield_drinking_frequency = models.ForeignKey(Frequency, related_name='frequency_for_relatedfield_drinking_frequency_T6301', on_delete=models.CASCADE, null=True, blank=True, verbose_name='饮酒频次')\\n    relatedfield_smoking_frequency = models.ForeignKey(Frequency, related_name='frequency_for_relatedfield_smoking_frequency_T6301', on_delete=models.CASCADE, null=True, blank=True, verbose_name='吸烟频次')\\n    relatedfield_family_relationship = models.ForeignKey(Family_relationship, related_name='family_relationship_for_relatedfield_family_relationship_T6301', on_delete=models.CASCADE, null=True, blank=True, verbose_name='家庭成员关系')\\n    relatedfield_fundus = models.ForeignKey(Normality, related_name='normality_for_relatedfield_fundus_T6301', on_delete=models.CASCADE, null=True, blank=True, verbose_name='眼底')\\n    relatedfield_left_foot = models.ForeignKey(Dorsal_artery_pulsation, related_name='dorsal_artery_pulsation_for_relatedfield_left_foot_T6301', on_delete=models.CASCADE, null=True, blank=True, verbose_name='左脚')\\n    relatedfield_right_foot = models.ForeignKey(Dorsal_artery_pulsation, related_name='dorsal_artery_pulsation_for_relatedfield_right_foot_T6301', on_delete=models.CASCADE, null=True, blank=True, verbose_name='右脚')\\n\\n    class Meta:\\n        verbose_name = '糖尿病一般随访'\\n        verbose_name_plural = verbose_name\\n\\n    def __str__(self):\\n        return self.customer.name\\n\\n        \\n\\n\", \"admin\": \"\\nclass T6301Admin(HsscFormAdmin):\\n    fieldsets = ((\\\"基本信息\\\", {\\\"fields\\\": ((\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ),)}), \\n        (\\\"糖尿病一般随访\\\", {\\\"fields\\\": (\\\"characterfield_average_sleep_duration\\\", \\\"characterfield_duration_of_insomnia\\\", \\\"characterfield_name\\\", \\\"characterhssc_identification_number\\\", \\\"characterfield_resident_file_number\\\", \\\"characterfield_family_address\\\", \\\"characterfield_contact_number\\\", \\\"characterfield_medical_ic_card_number\\\", \\\"numberfield_systolic_blood_pressure\\\", \\\"numberfield_diastolic_blood_pressure\\\", \\\"datetimefield_date_of_birth\\\", \\\"relatedfield_drug_name\\\", \\\"relatedfield_gender\\\", \\\"relatedfield_nationality\\\", \\\"relatedfield_marital_status\\\", \\\"relatedfield_education\\\", \\\"relatedfield_occupational_status\\\", \\\"relatedfield_medical_expenses_burden\\\", \\\"relatedfield_type_of_residence\\\", \\\"relatedfield_blood_type\\\", \\\"relatedfield_signed_family_doctor\\\", \\\"relatedfield_drinking_frequency\\\", \\\"relatedfield_smoking_frequency\\\", \\\"relatedfield_family_relationship\\\", \\\"relatedfield_fundus\\\", \\\"relatedfield_left_foot\\\", \\\"relatedfield_right_foot\\\", )}), )\\n    autocomplete_fields = [\\\"relatedfield_drug_name\\\", \\\"relatedfield_gender\\\", \\\"relatedfield_nationality\\\", \\\"relatedfield_marital_status\\\", \\\"relatedfield_education\\\", \\\"relatedfield_occupational_status\\\", \\\"relatedfield_medical_expenses_burden\\\", \\\"relatedfield_type_of_residence\\\", \\\"relatedfield_blood_type\\\", \\\"relatedfield_signed_family_doctor\\\", \\\"relatedfield_drinking_frequency\\\", \\\"relatedfield_smoking_frequency\\\", \\\"relatedfield_family_relationship\\\", \\\"relatedfield_fundus\\\", \\\"relatedfield_left_foot\\\", \\\"relatedfield_right_foot\\\", ]\\n    readonly_fields = [\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ]\\nadmin.site.register(T6301, T6301Admin)\\nclinic_site.register(T6301, T6301Admin)\\n\"}",
            "buessiness_forms": [
                "0ce866ae-9e23-11ec-aa2c-fe35a7065cdd",
                "0bd6215c-9e23-11ec-aa2c-fe35a7065cdd",
                "0bb0c86c-9e23-11ec-aa2c-fe35a7065cdd",
                "0c3bd51a-9e23-11ec-aa2c-fe35a7065cdd",
                "0c940c94-9e23-11ec-aa2c-fe35a7065cdd"
            ],
            "role": [
                "de18f0fc-9aa1-11ec-bde1-8a6e55faf877",
                "de194c50-9aa1-11ec-bde1-8a6e55faf877",
                "de19d6a2-9aa1-11ec-bde1-8a6e55faf877",
                "de1b05cc-9aa1-11ec-bde1-8a6e55faf877"
            ]
        },
        {
            "label": "院外辅助问诊",
            "name": "A6202",
            "hssc_id": "1a3b2382-9b67-11ec-94eb-022c611b2490",
            "pym": "ywfzwz",
            "name_icpc": "A6202",
            "managed_entity": "de87e7d2-9aa1-11ec-bde1-8a6e55faf877",
            "priority": 3,
            "is_system_service": false,
            "history_services_display": 0,
            "enable_queue_counter": true,
            "suppliers": null,
            "not_suitable": null,
            "execution_time_frame": null,
            "awaiting_time_frame": null,
            "working_hours": null,
            "frequency": null,
            "cost": null,
            "load_feedback": false,
            "resource_materials": null,
            "resource_devices": null,
            "resource_knowledge": null,
            "script": "{\"views\": \"\\nclass A6202_CreateView(CreateView):\\n    success_url = 'forms/'\\n    template_name = 'A6202_create.html'\\n    form_class = A6202_ModelForm  # the first form ModelForm class\\n    model = A6202\\n    context = {}\\n\\n    def get_context_data(self, **kwargs):\\n        context = super(A6202_CreateView, self).get_context_data(**kwargs)\\n        if self.request.method == 'POST':\\n            base_form = A6203_ModelForm(self.request.POST, prefix=\\\"base_form\\\")\\n            a6202_form = A6202_ModelForm(self.request.POST, prefix=\\\"a6202_form\\\")\\n        else:\\n            base_form = A6203_ModelForm(prefix=\\\"base_form\\\")\\n            a6202_form = A6202_ModelForm(prefix=\\\"a6202_form\\\")\\n        # context\\n        context['base_form'] = base_form\\n        context['a6202_form'] = a6202_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['a6202_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(A6202_CreateView, self).form_valid(form)\\n\\n\\n\\nclass A6202_UpdateView(SendSignalsMixin, UpdateView):\\n    success_url = 'forms/'\\n    template_name = 'A6202_update.html'\\n    form_class = A6202_ModelForm # the first form ModelForm class\\n    model = A6202\\n\\n    # if operation_proc.group is None:  # 如果进程角色已经被置为空，说明已有其他人处理，退出本修改作业进程\\n    #     return redirect(reverse('index'))\\n    # operation_proc.group.set([])  # 设置作业进程所属角色组为空\\n\\n    context = {}\\n        \\n    def get_context_data(self, **kwargs):\\n        context = super(A6202_UpdateView, self).get_context_data(**kwargs)\\n        operation_proc = get_object_or_404(OperationProc, id=kwargs['id'])\\n        customer = operation_proc.customer\\n        base_form = A6203_ModelForm(instance=A6203.objects.get(customer=1), prefix=\\\"base_form\\\")\\n        if self.request.method == 'POST':\\n            a6202_form = A6202_ModelForm(self.request.POST, prefix=\\\"a6202_form\\\")\\n            # 构造作业完成消息参数\\n            self.send_operand_finished(kwargs)\\n            return redirect(reverse('index'))\\n        else:\\n            a6202_form = A6202_ModelForm(instance=A6202.objects.get(pid=kwargs['id']), prefix=\\\"a6202_form\\\")\\n            # 构造作业开始消息参数\\n            self.send_operand_started(kwargs['id'])\\n        # context\\n        context['base_form'] = base_form\\n        context['a6202_form'] = a6202_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['a6202_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(A6202_CreateView, self).form_valid(form)\\n\", \"urls\": \"\\n    path('A6202/create', A6202_CreateView.as_view(), name='A6202_create_url'),\\n    path('A6202/<int:id>/update', A6202_UpdateView.as_view(), name='A6202_update_url'),\", \"templates\": [{\"A6202_create.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'A6202_create_url' %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>院外辅助问诊</h5>\\n            {{ a6202_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('a6202_form')\\\" />\\n    {% endblock %}\\n    \"}, {\"A6202_update.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'A6202_update_url' id %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>院外辅助问诊</h5>\\n            {{ a6202_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('a6202_form')\\\" />\\n    {% endblock %}\\n    \"}], \"models\": \"class A6202(HsscFormModel):\\n    characterfield_name = models.CharField(max_length=255, null=True, blank=True, verbose_name='姓名')\\n    characterfield_gender = models.CharField(max_length=255, null=True, blank=True, verbose_name='性别')\\n    characterfield_age = models.CharField(max_length=255, null=True, blank=True, verbose_name='年龄')\\n    characterfield_contact_address = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系地址')\\n    characterfield_contact_number = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系电话')\\n    characterfield_supplementary_description_of_the_condition = models.CharField(max_length=255, null=True, blank=True, verbose_name='病情补充描述')\\n    relatedfield_symptom_list = models.ManyToManyField(Icpc3_symptoms_and_problems, related_name='icpc3_symptoms_and_problems_for_relatedfield_symptom_list_A6202', verbose_name='症状')\\n\\n    class Meta:\\n        verbose_name = '院外辅助问诊'\\n        verbose_name_plural = verbose_name\\n\\n    def __str__(self):\\n        return self.customer.name\\n\\n        \\n\\n\", \"admin\": \"\\nclass A6202Admin(HsscFormAdmin):\\n    fieldsets = ((\\\"基本信息\\\", {\\\"fields\\\": ((\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ),)}), \\n        (\\\"院外辅助问诊\\\", {\\\"fields\\\": (\\\"characterfield_supplementary_description_of_the_condition\\\", \\\"relatedfield_symptom_list\\\", )}), )\\n    autocomplete_fields = [\\\"relatedfield_symptom_list\\\", ]\\n    readonly_fields = [\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ]\\nadmin.site.register(A6202, A6202Admin)\\nclinic_site.register(A6202, A6202Admin)\\n\"}",
            "buessiness_forms": [
                "0c704264-9e23-11ec-aa2c-fe35a7065cdd"
            ],
            "role": [
                "de18f0fc-9aa1-11ec-bde1-8a6e55faf877"
            ]
        },
        {
            "label": "监测评估",
            "name": "A6220",
            "hssc_id": "66859d9c-aa55-11ec-9f15-ee7ade4bced6",
            "pym": "jcpg",
            "name_icpc": "A6220",
            "managed_entity": "de87e7d2-9aa1-11ec-bde1-8a6e55faf877",
            "priority": 3,
            "is_system_service": false,
            "history_services_display": 0,
            "enable_queue_counter": true,
            "suppliers": null,
            "not_suitable": null,
            "execution_time_frame": null,
            "awaiting_time_frame": null,
            "working_hours": null,
            "frequency": null,
            "cost": null,
            "load_feedback": false,
            "resource_materials": null,
            "resource_devices": null,
            "resource_knowledge": null,
            "script": "{\"views\": \"\\nclass A6220_CreateView(CreateView):\\n    success_url = 'forms/'\\n    template_name = 'A6220_create.html'\\n    form_class = A6220_ModelForm  # the first form ModelForm class\\n    model = A6220\\n    context = {}\\n\\n    def get_context_data(self, **kwargs):\\n        context = super(A6220_CreateView, self).get_context_data(**kwargs)\\n        if self.request.method == 'POST':\\n            base_form = A6203_ModelForm(self.request.POST, prefix=\\\"base_form\\\")\\n            a6220_form = A6220_ModelForm(self.request.POST, prefix=\\\"a6220_form\\\")\\n        else:\\n            base_form = A6203_ModelForm(prefix=\\\"base_form\\\")\\n            a6220_form = A6220_ModelForm(prefix=\\\"a6220_form\\\")\\n        # context\\n        context['base_form'] = base_form\\n        context['a6220_form'] = a6220_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['a6220_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(A6220_CreateView, self).form_valid(form)\\n\\n\\n\\nclass A6220_UpdateView(SendSignalsMixin, UpdateView):\\n    success_url = 'forms/'\\n    template_name = 'A6220_update.html'\\n    form_class = A6220_ModelForm # the first form ModelForm class\\n    model = A6220\\n\\n    # if operation_proc.group is None:  # 如果进程角色已经被置为空，说明已有其他人处理，退出本修改作业进程\\n    #     return redirect(reverse('index'))\\n    # operation_proc.group.set([])  # 设置作业进程所属角色组为空\\n\\n    context = {}\\n        \\n    def get_context_data(self, **kwargs):\\n        context = super(A6220_UpdateView, self).get_context_data(**kwargs)\\n        operation_proc = get_object_or_404(OperationProc, id=kwargs['id'])\\n        customer = operation_proc.customer\\n        base_form = A6203_ModelForm(instance=A6203.objects.get(customer=1), prefix=\\\"base_form\\\")\\n        if self.request.method == 'POST':\\n            a6220_form = A6220_ModelForm(self.request.POST, prefix=\\\"a6220_form\\\")\\n            # 构造作业完成消息参数\\n            self.send_operand_finished(kwargs)\\n            return redirect(reverse('index'))\\n        else:\\n            a6220_form = A6220_ModelForm(instance=A6220.objects.get(pid=kwargs['id']), prefix=\\\"a6220_form\\\")\\n            # 构造作业开始消息参数\\n            self.send_operand_started(kwargs['id'])\\n        # context\\n        context['base_form'] = base_form\\n        context['a6220_form'] = a6220_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['a6220_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(A6220_CreateView, self).form_valid(form)\\n\", \"urls\": \"\\n    path('A6220/create', A6220_CreateView.as_view(), name='A6220_create_url'),\\n    path('A6220/<int:id>/update', A6220_UpdateView.as_view(), name='A6220_update_url'),\", \"templates\": [{\"A6220_create.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'A6220_create_url' %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>监测评估</h5>\\n            {{ a6220_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('a6220_form')\\\" />\\n    {% endblock %}\\n    \"}, {\"A6220_update.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'A6220_update_url' id %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>监测评估</h5>\\n            {{ a6220_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('a6220_form')\\\" />\\n    {% endblock %}\\n    \"}], \"models\": \"class A6220(HsscFormModel):\\n    characterfield_name = models.CharField(max_length=255, null=True, blank=True, verbose_name='姓名')\\n    characterfield_gender = models.CharField(max_length=255, null=True, blank=True, verbose_name='性别')\\n    characterfield_age = models.CharField(max_length=255, null=True, blank=True, verbose_name='年龄')\\n    characterfield_contact_address = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系地址')\\n    characterfield_contact_number = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系电话')\\n    boolfield_yuan_wai_jian_kang_ping_gu = models.ForeignKey(Sui_fang_ping_gu, related_name='sui_fang_ping_gu_for_boolfield_yuan_wai_jian_kang_ping_gu_A6220', on_delete=models.CASCADE, null=True, blank=True, verbose_name='监测评估')\\n\\n    class Meta:\\n        verbose_name = '监测评估'\\n        verbose_name_plural = verbose_name\\n\\n    def __str__(self):\\n        return self.customer.name\\n\\n        \\n\\n\", \"admin\": \"\\nclass A6220Admin(HsscFormAdmin):\\n    fieldsets = ((\\\"基本信息\\\", {\\\"fields\\\": ((\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ),)}), \\n        (\\\"监测评估\\\", {\\\"fields\\\": (\\\"boolfield_yuan_wai_jian_kang_ping_gu\\\", )}), )\\n    autocomplete_fields = [\\\"boolfield_yuan_wai_jian_kang_ping_gu\\\", ]\\n    readonly_fields = [\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ]\\nadmin.site.register(A6220, A6220Admin)\\nclinic_site.register(A6220, A6220Admin)\\n\"}",
            "buessiness_forms": [
                "bbf2ba74-aa48-11ec-8f0c-ee7ade4bced6"
            ],
            "role": []
        },
        {
            "label": "居民健康信息调查",
            "name": "A6299",
            "hssc_id": "9582b822-ab23-11ec-bf5e-1ac10aeebbc4",
            "pym": "jmjkxxdc",
            "name_icpc": null,
            "managed_entity": "de87e7d2-9aa1-11ec-bde1-8a6e55faf877",
            "priority": 3,
            "is_system_service": false,
            "history_services_display": 0,
            "enable_queue_counter": true,
            "suppliers": null,
            "not_suitable": null,
            "execution_time_frame": null,
            "awaiting_time_frame": null,
            "working_hours": null,
            "frequency": null,
            "cost": null,
            "load_feedback": false,
            "resource_materials": null,
            "resource_devices": null,
            "resource_knowledge": null,
            "script": "{\"views\": \"\\nclass A6299_CreateView(CreateView):\\n    success_url = 'forms/'\\n    template_name = 'A6299_create.html'\\n    form_class = A6209_ModelForm  # the first form ModelForm class\\n    model = A6209\\n    context = {}\\n\\n    def get_context_data(self, **kwargs):\\n        context = super(A6299_CreateView, self).get_context_data(**kwargs)\\n        if self.request.method == 'POST':\\n            base_form = A6203_ModelForm(self.request.POST, prefix=\\\"base_form\\\")\\n            a6209_form = A6209_ModelForm(self.request.POST, prefix=\\\"a6209_form\\\")\\n            a6204_form = A6204_ModelForm(self.request.POST, prefix=\\\"a6204_form\\\")\\n            a6216_form = A6216_ModelForm(self.request.POST, prefix=\\\"a6216_form\\\")\\n            a6206_form = A6206_ModelForm(self.request.POST, prefix=\\\"a6206_form\\\")\\n            a6205_form = A6205_ModelForm(self.request.POST, prefix=\\\"a6205_form\\\")\\n            a6208_form = A6208_ModelForm(self.request.POST, prefix=\\\"a6208_form\\\")\\n            a6214_form = A6214_ModelForm(self.request.POST, prefix=\\\"a6214_form\\\")\\n            a6210_form = A6210_ModelForm(self.request.POST, prefix=\\\"a6210_form\\\")\\n            a6212_form = A6212_ModelForm(self.request.POST, prefix=\\\"a6212_form\\\")\\n            a6203_form = A6203_ModelForm(self.request.POST, prefix=\\\"a6203_form\\\")\\n            a6213_form = A6213_ModelForm(self.request.POST, prefix=\\\"a6213_form\\\")\\n            a6207_form = A6207_ModelForm(self.request.POST, prefix=\\\"a6207_form\\\")\\n            a6215_form = A6215_ModelForm(self.request.POST, prefix=\\\"a6215_form\\\")\\n        else:\\n            base_form = A6203_ModelForm(prefix=\\\"base_form\\\")\\n            a6209_form = A6209_ModelForm(prefix=\\\"a6209_form\\\")\\n            a6204_form = A6204_ModelForm(prefix=\\\"a6204_form\\\")\\n            a6216_form = A6216_ModelForm(prefix=\\\"a6216_form\\\")\\n            a6206_form = A6206_ModelForm(prefix=\\\"a6206_form\\\")\\n            a6205_form = A6205_ModelForm(prefix=\\\"a6205_form\\\")\\n            a6208_form = A6208_ModelForm(prefix=\\\"a6208_form\\\")\\n            a6214_form = A6214_ModelForm(prefix=\\\"a6214_form\\\")\\n            a6210_form = A6210_ModelForm(prefix=\\\"a6210_form\\\")\\n            a6212_form = A6212_ModelForm(prefix=\\\"a6212_form\\\")\\n            a6203_form = A6203_ModelForm(prefix=\\\"a6203_form\\\")\\n            a6213_form = A6213_ModelForm(prefix=\\\"a6213_form\\\")\\n            a6207_form = A6207_ModelForm(prefix=\\\"a6207_form\\\")\\n            a6215_form = A6215_ModelForm(prefix=\\\"a6215_form\\\")\\n        # context\\n        context['base_form'] = base_form\\n        context['a6209_form'] = a6209_form\\n        context['a6204_form'] = a6204_form\\n        context['a6216_form'] = a6216_form\\n        context['a6206_form'] = a6206_form\\n        context['a6205_form'] = a6205_form\\n        context['a6208_form'] = a6208_form\\n        context['a6214_form'] = a6214_form\\n        context['a6210_form'] = a6210_form\\n        context['a6212_form'] = a6212_form\\n        context['a6203_form'] = a6203_form\\n        context['a6213_form'] = a6213_form\\n        context['a6207_form'] = a6207_form\\n        context['a6215_form'] = a6215_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['a6209_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        f = context['a6204_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        f = context['a6216_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        f = context['a6206_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        f = context['a6205_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        f = context['a6208_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        f = context['a6214_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        f = context['a6210_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        f = context['a6212_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        f = context['a6203_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        f = context['a6213_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        f = context['a6207_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        f = context['a6215_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(A6299_CreateView, self).form_valid(form)\\n\\n\\n\\nclass A6299_UpdateView(SendSignalsMixin, UpdateView):\\n    success_url = 'forms/'\\n    template_name = 'A6299_update.html'\\n    form_class = A6209_ModelForm # the first form ModelForm class\\n    model = A6209\\n\\n    # if operation_proc.group is None:  # 如果进程角色已经被置为空，说明已有其他人处理，退出本修改作业进程\\n    #     return redirect(reverse('index'))\\n    # operation_proc.group.set([])  # 设置作业进程所属角色组为空\\n\\n    context = {}\\n        \\n    def get_context_data(self, **kwargs):\\n        context = super(A6299_UpdateView, self).get_context_data(**kwargs)\\n        operation_proc = get_object_or_404(OperationProc, id=kwargs['id'])\\n        customer = operation_proc.customer\\n        base_form = A6203_ModelForm(instance=A6203.objects.get(customer=1), prefix=\\\"base_form\\\")\\n        if self.request.method == 'POST':\\n            a6209_form = A6209_ModelForm(self.request.POST, prefix=\\\"a6209_form\\\")\\n            a6204_form = A6204_ModelForm(self.request.POST, prefix=\\\"a6204_form\\\")\\n            a6216_form = A6216_ModelForm(self.request.POST, prefix=\\\"a6216_form\\\")\\n            a6206_form = A6206_ModelForm(self.request.POST, prefix=\\\"a6206_form\\\")\\n            a6205_form = A6205_ModelForm(self.request.POST, prefix=\\\"a6205_form\\\")\\n            a6208_form = A6208_ModelForm(self.request.POST, prefix=\\\"a6208_form\\\")\\n            a6214_form = A6214_ModelForm(self.request.POST, prefix=\\\"a6214_form\\\")\\n            a6210_form = A6210_ModelForm(self.request.POST, prefix=\\\"a6210_form\\\")\\n            a6212_form = A6212_ModelForm(self.request.POST, prefix=\\\"a6212_form\\\")\\n            a6203_form = A6203_ModelForm(self.request.POST, prefix=\\\"a6203_form\\\")\\n            a6213_form = A6213_ModelForm(self.request.POST, prefix=\\\"a6213_form\\\")\\n            a6207_form = A6207_ModelForm(self.request.POST, prefix=\\\"a6207_form\\\")\\n            a6215_form = A6215_ModelForm(self.request.POST, prefix=\\\"a6215_form\\\")\\n            # 构造作业完成消息参数\\n            self.send_operand_finished(kwargs)\\n            return redirect(reverse('index'))\\n        else:\\n            a6209_form = A6209_ModelForm(instance=A6209.objects.get(pid=kwargs['id']), prefix=\\\"a6209_form\\\")\\n            a6204_form = A6204_ModelForm(instance=A6204.objects.get(pid=kwargs['id']), prefix=\\\"a6204_form\\\")\\n            a6216_form = A6216_ModelForm(instance=A6216.objects.get(pid=kwargs['id']), prefix=\\\"a6216_form\\\")\\n            a6206_form = A6206_ModelForm(instance=A6206.objects.get(pid=kwargs['id']), prefix=\\\"a6206_form\\\")\\n            a6205_form = A6205_ModelForm(instance=A6205.objects.get(pid=kwargs['id']), prefix=\\\"a6205_form\\\")\\n            a6208_form = A6208_ModelForm(instance=A6208.objects.get(pid=kwargs['id']), prefix=\\\"a6208_form\\\")\\n            a6214_form = A6214_ModelForm(instance=A6214.objects.get(pid=kwargs['id']), prefix=\\\"a6214_form\\\")\\n            a6210_form = A6210_ModelForm(instance=A6210.objects.get(pid=kwargs['id']), prefix=\\\"a6210_form\\\")\\n            a6212_form = A6212_ModelForm(instance=A6212.objects.get(pid=kwargs['id']), prefix=\\\"a6212_form\\\")\\n            a6203_form = A6203_ModelForm(instance=A6203.objects.get(pid=kwargs['id']), prefix=\\\"a6203_form\\\")\\n            a6213_form = A6213_ModelForm(instance=A6213.objects.get(pid=kwargs['id']), prefix=\\\"a6213_form\\\")\\n            a6207_form = A6207_ModelForm(instance=A6207.objects.get(pid=kwargs['id']), prefix=\\\"a6207_form\\\")\\n            a6215_form = A6215_ModelForm(instance=A6215.objects.get(pid=kwargs['id']), prefix=\\\"a6215_form\\\")\\n            # 构造作业开始消息参数\\n            self.send_operand_started(kwargs['id'])\\n        # context\\n        context['base_form'] = base_form\\n        context['a6209_form'] = a6209_form\\n        context['a6204_form'] = a6204_form\\n        context['a6216_form'] = a6216_form\\n        context['a6206_form'] = a6206_form\\n        context['a6205_form'] = a6205_form\\n        context['a6208_form'] = a6208_form\\n        context['a6214_form'] = a6214_form\\n        context['a6210_form'] = a6210_form\\n        context['a6212_form'] = a6212_form\\n        context['a6203_form'] = a6203_form\\n        context['a6213_form'] = a6213_form\\n        context['a6207_form'] = a6207_form\\n        context['a6215_form'] = a6215_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['a6209_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        f = context['a6204_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        f = context['a6216_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        f = context['a6206_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        f = context['a6205_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        f = context['a6208_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        f = context['a6214_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        f = context['a6210_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        f = context['a6212_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        f = context['a6203_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        f = context['a6213_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        f = context['a6207_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        f = context['a6215_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(A6299_CreateView, self).form_valid(form)\\n\", \"urls\": \"\\n    path('A6299/create', A6299_CreateView.as_view(), name='A6299_create_url'),\\n    path('A6299/<int:id>/update', A6299_UpdateView.as_view(), name='A6299_update_url'),\", \"templates\": [{\"A6299_create.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'A6299_create_url' %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>家族病史</h5>\\n            {{ a6209_form.as_p }}\\n        <hr>\\n            {% csrf_token %}                \\n            <h5>疾病史</h5>\\n            {{ a6204_form.as_p }}\\n        <hr>\\n            {% csrf_token %}                \\n            <h5>社会环境评估</h5>\\n            {{ a6216_form.as_p }}\\n        <hr>\\n            {% csrf_token %}                \\n            <h5>外伤史</h5>\\n            {{ a6206_form.as_p }}\\n        <hr>\\n            {% csrf_token %}                \\n            <h5>手术史</h5>\\n            {{ a6205_form.as_p }}\\n        <hr>\\n            {% csrf_token %}                \\n            <h5>输血史</h5>\\n            {{ a6208_form.as_p }}\\n        <hr>\\n            {% csrf_token %}                \\n            <h5>个人身体健康评估</h5>\\n            {{ a6214_form.as_p }}\\n        <hr>\\n            {% csrf_token %}                \\n            <h5>遗传病史</h5>\\n            {{ a6210_form.as_p }}\\n        <hr>\\n            {% csrf_token %}                \\n            <h5>个人健康行为调查</h5>\\n            {{ a6212_form.as_p }}\\n        <hr>\\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ a6203_form.as_p }}\\n        <hr>\\n            {% csrf_token %}                \\n            <h5>个人心理综合素质调查</h5>\\n            {{ a6213_form.as_p }}\\n        <hr>\\n            {% csrf_token %}                \\n            <h5>过敏史</h5>\\n            {{ a6207_form.as_p }}\\n        <hr>\\n            {% csrf_token %}                \\n            <h5>个人适应能力评估</h5>\\n            {{ a6215_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('a6215_form')\\\" />\\n    {% endblock %}\\n    \"}, {\"A6299_update.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'A6299_update_url' id %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>家族病史</h5>\\n            {{ a6209_form.as_p }}\\n        <hr>\\n            {% csrf_token %}                \\n            <h5>疾病史</h5>\\n            {{ a6204_form.as_p }}\\n        <hr>\\n            {% csrf_token %}                \\n            <h5>社会环境评估</h5>\\n            {{ a6216_form.as_p }}\\n        <hr>\\n            {% csrf_token %}                \\n            <h5>外伤史</h5>\\n            {{ a6206_form.as_p }}\\n        <hr>\\n            {% csrf_token %}                \\n            <h5>手术史</h5>\\n            {{ a6205_form.as_p }}\\n        <hr>\\n            {% csrf_token %}                \\n            <h5>输血史</h5>\\n            {{ a6208_form.as_p }}\\n        <hr>\\n            {% csrf_token %}                \\n            <h5>个人身体健康评估</h5>\\n            {{ a6214_form.as_p }}\\n        <hr>\\n            {% csrf_token %}                \\n            <h5>遗传病史</h5>\\n            {{ a6210_form.as_p }}\\n        <hr>\\n            {% csrf_token %}                \\n            <h5>个人健康行为调查</h5>\\n            {{ a6212_form.as_p }}\\n        <hr>\\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ a6203_form.as_p }}\\n        <hr>\\n            {% csrf_token %}                \\n            <h5>个人心理综合素质调查</h5>\\n            {{ a6213_form.as_p }}\\n        <hr>\\n            {% csrf_token %}                \\n            <h5>过敏史</h5>\\n            {{ a6207_form.as_p }}\\n        <hr>\\n            {% csrf_token %}                \\n            <h5>个人适应能力评估</h5>\\n            {{ a6215_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('a6215_form')\\\" />\\n    {% endblock %}\\n    \"}], \"models\": \"class A6299(HsscFormModel):\\n    characterfield_name = models.CharField(max_length=255, null=True, blank=True, verbose_name='姓名')\\n    characterfield_gender = models.CharField(max_length=255, null=True, blank=True, verbose_name='性别')\\n    characterfield_age = models.CharField(max_length=255, null=True, blank=True, verbose_name='年龄')\\n    characterfield_contact_address = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系地址')\\n    characterfield_contact_number = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系电话')\\n    relatedfield_family_relationship = models.ForeignKey(Family_relationship, related_name='family_relationship_for_relatedfield_family_relationship_A6299', on_delete=models.CASCADE, null=True, blank=True, verbose_name='家庭成员关系')\\n    relatedfield_disease_name = models.ForeignKey(Icpc5_evaluation_and_diagnoses, related_name='icpc5_evaluation_and_diagnoses_for_relatedfield_disease_name_A6299', on_delete=models.CASCADE, null=True, blank=True, verbose_name='疾病名称')\\n    datetimefield_time_of_diagnosis = models.DateTimeField(null=True, blank=True, verbose_name='确诊时间')\\n    relatedfield_disease_name = models.ForeignKey(Icpc5_evaluation_and_diagnoses, related_name='icpc5_evaluation_and_diagnoses_for_relatedfield_disease_name_A6299', on_delete=models.CASCADE, null=True, blank=True, verbose_name='疾病名称')\\n    relatedfield_is_the_living_environment_satisfactory = models.ForeignKey(Satisfaction, related_name='satisfaction_for_relatedfield_is_the_living_environment_satisfactory_A6299', on_delete=models.CASCADE, null=True, blank=True, verbose_name='您对居住环境满意吗')\\n    relatedfield_is_the_transportation_convenient = models.ForeignKey(Convenience, related_name='convenience_for_relatedfield_is_the_transportation_convenient_A6299', on_delete=models.CASCADE, null=True, blank=True, verbose_name='您所在的社区交通方便吗')\\n    boolfield_wai_shang_ri_qi = models.DateField(null=True, blank=True, verbose_name='外伤日期')\\n    relatedfield_disease_name = models.ForeignKey(Icpc5_evaluation_and_diagnoses, related_name='icpc5_evaluation_and_diagnoses_for_relatedfield_disease_name_A6299', on_delete=models.CASCADE, null=True, blank=True, verbose_name='疾病名称')\\n    datetimefield_date = models.DateField(null=True, blank=True, verbose_name='手术日期')\\n    relatedfield_name_of_operation = models.ForeignKey(Icpc7_treatments, related_name='icpc7_treatments_for_relatedfield_name_of_operation_A6299', on_delete=models.CASCADE, null=True, blank=True, verbose_name='手术名称')\\n    numberfield_blood_transfusion = models.IntegerField(null=True, blank=True, verbose_name='输血量')\\n    numberfield_blood_transfusion_standard_value = models.IntegerField(null=True, blank=True, verbose_name='输血量标准值')\\n    numberfield_blood_transfusion_up_limit = models.IntegerField(default=400.0, null=True, blank=True, verbose_name='输血量上限')\\n    numberfield_blood_transfusion_down_limit = models.IntegerField(null=True, blank=True, verbose_name='输血量下限')\\n    boolfield_shu_xue_ri_qi = models.DateField(null=True, blank=True, verbose_name='输血日期')\\n    relatedfield_own_health = models.ForeignKey(State_degree, related_name='state_degree_for_relatedfield_own_health_A6299', on_delete=models.CASCADE, null=True, blank=True, verbose_name='觉得自身健康状况如何')\\n    relatedfield_compared_to_last_year = models.ForeignKey(Comparative_expression, related_name='comparative_expression_for_relatedfield_compared_to_last_year_A6299', on_delete=models.CASCADE, null=True, blank=True, verbose_name='较之过去一年状态如何')\\n    relatedfield_sports_preference = models.ForeignKey(Sports_preference, related_name='sports_preference_for_relatedfield_sports_preference_A6299', on_delete=models.CASCADE, null=True, blank=True, verbose_name='运动偏好')\\n    relatedfield_exercise_time = models.ForeignKey(Exercise_time, related_name='exercise_time_for_relatedfield_exercise_time_A6299', on_delete=models.CASCADE, null=True, blank=True, verbose_name='运动时长')\\n    relatedfield_have_any_recent_symptoms_of_physical_discomfort = models.ManyToManyField(Icpc3_symptoms_and_problems, related_name='icpc3_symptoms_and_problems_for_relatedfield_have_any_recent_symptoms_of_physical_discomfort_A6299', verbose_name='近来有无身体不适症状')\\n    relatedfield_family_relationship = models.ForeignKey(Family_relationship, related_name='family_relationship_for_relatedfield_family_relationship_A6299', on_delete=models.CASCADE, null=True, blank=True, verbose_name='家庭成员关系')\\n    relatedfield_disease_name = models.ForeignKey(Icpc5_evaluation_and_diagnoses, related_name='icpc5_evaluation_and_diagnoses_for_relatedfield_disease_name_A6299', on_delete=models.CASCADE, null=True, blank=True, verbose_name='疾病名称')\\n    characterfield_average_sleep_duration = models.CharField(max_length=255, null=True, blank=True, verbose_name='平均睡眠时长')\\n    characterfield_duration_of_insomnia = models.CharField(max_length=255, null=True, blank=True, verbose_name='持续失眠时间')\\n    relatedfield_drinking_frequency = models.ForeignKey(Frequency, related_name='frequency_for_relatedfield_drinking_frequency_A6299', on_delete=models.CASCADE, null=True, blank=True, verbose_name='饮酒频次')\\n    relatedfield_smoking_frequency = models.ForeignKey(Frequency, related_name='frequency_for_relatedfield_smoking_frequency_A6299', on_delete=models.CASCADE, null=True, blank=True, verbose_name='吸烟频次')\\n    characterfield_name = models.CharField(max_length=255, null=True, blank=True, verbose_name='姓名')\\n    characterhssc_identification_number = models.CharField(max_length=255, null=True, blank=True, verbose_name='身份证号码')\\n    characterfield_resident_file_number = models.CharField(max_length=255, null=True, blank=True, verbose_name='居民档案号')\\n    characterfield_family_address = models.CharField(max_length=255, null=True, blank=True, verbose_name='家庭地址')\\n    characterfield_contact_number = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系电话')\\n    characterfield_medical_ic_card_number = models.CharField(max_length=255, null=True, blank=True, verbose_name='医疗ic卡号')\\n    datetimefield_date_of_birth = models.DateTimeField(null=True, blank=True, verbose_name='出生日期')\\n    relatedfield_gender = models.ForeignKey(Gender, related_name='gender_for_relatedfield_gender_A6299', on_delete=models.CASCADE, null=True, blank=True, verbose_name='性别')\\n    relatedfield_nationality = models.ForeignKey(Nationality, related_name='nationality_for_relatedfield_nationality_A6299', on_delete=models.CASCADE, null=True, blank=True, verbose_name='民族')\\n    relatedfield_marital_status = models.ForeignKey(Marital_status, related_name='marital_status_for_relatedfield_marital_status_A6299', on_delete=models.CASCADE, null=True, blank=True, verbose_name='婚姻状况')\\n    relatedfield_education = models.ForeignKey(Education, related_name='education_for_relatedfield_education_A6299', on_delete=models.CASCADE, null=True, blank=True, verbose_name='文化程度')\\n    relatedfield_occupational_status = models.ForeignKey(Occupational_status, related_name='occupational_status_for_relatedfield_occupational_status_A6299', on_delete=models.CASCADE, null=True, blank=True, verbose_name='职业状况')\\n    relatedfield_medical_expenses_burden = models.ManyToManyField(Medical_expenses_burden, related_name='medical_expenses_burden_for_relatedfield_medical_expenses_burden_A6299', verbose_name='医疗费用负担')\\n    relatedfield_type_of_residence = models.ForeignKey(Type_of_residence, related_name='type_of_residence_for_relatedfield_type_of_residence_A6299', on_delete=models.CASCADE, null=True, blank=True, verbose_name='居住类型')\\n    relatedfield_blood_type = models.ForeignKey(Blood_type, related_name='blood_type_for_relatedfield_blood_type_A6299', on_delete=models.CASCADE, null=True, blank=True, verbose_name='血型')\\n    relatedfield_signed_family_doctor = models.ForeignKey(Staff, related_name='staff_for_relatedfield_signed_family_doctor_A6299', on_delete=models.CASCADE, null=True, blank=True, verbose_name='签约家庭医生')\\n    relatedfield_family_relationship = models.ForeignKey(Family_relationship, related_name='family_relationship_for_relatedfield_family_relationship_A6299', on_delete=models.CASCADE, null=True, blank=True, verbose_name='家庭成员关系')\\n    relatedfield_personality_tendency = models.ForeignKey(Character, related_name='character_for_relatedfield_personality_tendency_A6299', on_delete=models.CASCADE, null=True, blank=True, verbose_name='性格倾向')\\n    boolfield_shi_mian_qing_kuang = models.ForeignKey(Shi_mian_qing_kuang, related_name='shi_mian_qing_kuang_for_boolfield_shi_mian_qing_kuang_A6299', on_delete=models.CASCADE, null=True, blank=True, verbose_name='失眠情况')\\n    boolfield_sheng_huo_gong_zuo_ya_li_qing_kuang = models.ForeignKey(Ya_li_qing_kuang, related_name='ya_li_qing_kuang_for_boolfield_sheng_huo_gong_zuo_ya_li_qing_kuang_A6299', on_delete=models.CASCADE, null=True, blank=True, verbose_name='生活工作压力情况')\\n    relatedfield_drug_name = models.ManyToManyField(Medicine, related_name='medicine_for_relatedfield_drug_name_A6299', verbose_name='药品名称')\\n    characterfield_working_hours_per_day = models.TextField(max_length=255, null=True, blank=True, verbose_name='每天工作及工作往返总时长')\\n    relatedfield_are_you_satisfied_with_the_job_and_life = models.ForeignKey(Satisfaction, related_name='satisfaction_for_relatedfield_are_you_satisfied_with_the_job_and_life_A6299', on_delete=models.CASCADE, null=True, blank=True, verbose_name='对目前生活和工作满意吗')\\n    relatedfield_are_you_satisfied_with_your_adaptability = models.ForeignKey(Satisfaction, related_name='satisfaction_for_relatedfield_are_you_satisfied_with_your_adaptability_A6299', on_delete=models.CASCADE, null=True, blank=True, verbose_name='对自己的适应能力满意吗')\\n\\n    class Meta:\\n        verbose_name = '建立居民健康档案'\\n        verbose_name_plural = verbose_name\\n\\n    def __str__(self):\\n        return self.customer.name\\n\\n        \\n\\n\", \"admin\": \"\\nclass A6299Admin(HsscFormAdmin):\\n    fieldsets = ((\\\"基本信息\\\", {\\\"fields\\\": ((\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ),)}), \\n        (\\\"家族病史\\\", {\\\"fields\\\": (\\\"relatedfield_family_relationship\\\", \\\"relatedfield_disease_name\\\", )}), \\n        (\\\"疾病史\\\", {\\\"fields\\\": (\\\"datetimefield_time_of_diagnosis\\\", \\\"relatedfield_disease_name\\\", )}), \\n        (\\\"社会环境评估\\\", {\\\"fields\\\": (\\\"relatedfield_is_the_living_environment_satisfactory\\\", \\\"relatedfield_is_the_transportation_convenient\\\", )}), \\n        (\\\"外伤史\\\", {\\\"fields\\\": (\\\"boolfield_wai_shang_ri_qi\\\", \\\"relatedfield_disease_name\\\", )}), \\n        (\\\"手术史\\\", {\\\"fields\\\": (\\\"datetimefield_date\\\", \\\"relatedfield_name_of_operation\\\", )}), \\n        (\\\"输血史\\\", {\\\"fields\\\": (\\\"numberfield_blood_transfusion\\\", \\\"boolfield_shu_xue_ri_qi\\\", )}), \\n        (\\\"个人身体健康评估\\\", {\\\"fields\\\": (\\\"relatedfield_own_health\\\", \\\"relatedfield_compared_to_last_year\\\", \\\"relatedfield_sports_preference\\\", \\\"relatedfield_exercise_time\\\", \\\"relatedfield_have_any_recent_symptoms_of_physical_discomfort\\\", )}), \\n        (\\\"遗传病史\\\", {\\\"fields\\\": (\\\"relatedfield_family_relationship\\\", \\\"relatedfield_disease_name\\\", )}), \\n        (\\\"个人健康行为调查\\\", {\\\"fields\\\": (\\\"characterfield_average_sleep_duration\\\", \\\"characterfield_duration_of_insomnia\\\", \\\"relatedfield_drinking_frequency\\\", \\\"relatedfield_smoking_frequency\\\", )}), \\n        (\\\"个人基本信息\\\", {\\\"fields\\\": (\\\"characterfield_name\\\", \\\"characterhssc_identification_number\\\", \\\"characterfield_resident_file_number\\\", \\\"characterfield_family_address\\\", \\\"characterfield_contact_number\\\", \\\"characterfield_medical_ic_card_number\\\", \\\"datetimefield_date_of_birth\\\", \\\"relatedfield_gender\\\", \\\"relatedfield_nationality\\\", \\\"relatedfield_marital_status\\\", \\\"relatedfield_education\\\", \\\"relatedfield_occupational_status\\\", \\\"relatedfield_medical_expenses_burden\\\", \\\"relatedfield_type_of_residence\\\", \\\"relatedfield_blood_type\\\", \\\"relatedfield_signed_family_doctor\\\", \\\"relatedfield_family_relationship\\\", )}), \\n        (\\\"个人心理综合素质调查\\\", {\\\"fields\\\": (\\\"relatedfield_personality_tendency\\\", \\\"boolfield_shi_mian_qing_kuang\\\", \\\"boolfield_sheng_huo_gong_zuo_ya_li_qing_kuang\\\", )}), \\n        (\\\"过敏史\\\", {\\\"fields\\\": (\\\"relatedfield_drug_name\\\", )}), \\n        (\\\"个人适应能力评估\\\", {\\\"fields\\\": (\\\"characterfield_working_hours_per_day\\\", \\\"relatedfield_are_you_satisfied_with_the_job_and_life\\\", \\\"relatedfield_are_you_satisfied_with_your_adaptability\\\", )}), )\\n    autocomplete_fields = [\\\"relatedfield_family_relationship\\\", \\\"relatedfield_disease_name\\\", \\\"relatedfield_disease_name\\\", \\\"relatedfield_is_the_living_environment_satisfactory\\\", \\\"relatedfield_is_the_transportation_convenient\\\", \\\"relatedfield_disease_name\\\", \\\"relatedfield_name_of_operation\\\", \\\"relatedfield_own_health\\\", \\\"relatedfield_compared_to_last_year\\\", \\\"relatedfield_sports_preference\\\", \\\"relatedfield_exercise_time\\\", \\\"relatedfield_have_any_recent_symptoms_of_physical_discomfort\\\", \\\"relatedfield_family_relationship\\\", \\\"relatedfield_disease_name\\\", \\\"relatedfield_drinking_frequency\\\", \\\"relatedfield_smoking_frequency\\\", \\\"relatedfield_gender\\\", \\\"relatedfield_nationality\\\", \\\"relatedfield_marital_status\\\", \\\"relatedfield_education\\\", \\\"relatedfield_occupational_status\\\", \\\"relatedfield_medical_expenses_burden\\\", \\\"relatedfield_type_of_residence\\\", \\\"relatedfield_blood_type\\\", \\\"relatedfield_signed_family_doctor\\\", \\\"relatedfield_family_relationship\\\", \\\"relatedfield_personality_tendency\\\", \\\"boolfield_shi_mian_qing_kuang\\\", \\\"boolfield_sheng_huo_gong_zuo_ya_li_qing_kuang\\\", \\\"relatedfield_drug_name\\\", \\\"relatedfield_are_you_satisfied_with_the_job_and_life\\\", \\\"relatedfield_are_you_satisfied_with_your_adaptability\\\", ]\\n    readonly_fields = [\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ]\\nadmin.site.register(A6299, A6299Admin)\\nclinic_site.register(A6299, A6299Admin)\\n\"}",
            "buessiness_forms": [
                "0ca96526-9e23-11ec-aa2c-fe35a7065cdd",
                "0ba2ba9c-9e23-11ec-aa2c-fe35a7065cdd",
                "0b54db10-9e23-11ec-aa2c-fe35a7065cdd",
                "0ba83c56-9e23-11ec-aa2c-fe35a7065cdd",
                "0b648650-9e23-11ec-aa2c-fe35a7065cdd",
                "0b86f50a-9e23-11ec-aa2c-fe35a7065cdd",
                "0beb43fc-9e23-11ec-aa2c-fe35a7065cdd",
                "0b787836-9e23-11ec-aa2c-fe35a7065cdd",
                "0b6e02b6-9e23-11ec-aa2c-fe35a7065cdd",
                "0b5c89be-9e23-11ec-aa2c-fe35a7065cdd",
                "0be59eac-9e23-11ec-aa2c-fe35a7065cdd",
                "0b96f9f0-9e23-11ec-aa2c-fe35a7065cdd"
            ],
            "role": [
                "de18f0fc-9aa1-11ec-bde1-8a6e55faf877",
                "de194c50-9aa1-11ec-bde1-8a6e55faf877",
                "de1992d2-9aa1-11ec-bde1-8a6e55faf877",
                "de19d6a2-9aa1-11ec-bde1-8a6e55faf877",
                "de1a253a-9aa1-11ec-bde1-8a6e55faf877",
                "de1a6f7c-9aa1-11ec-bde1-8a6e55faf877",
                "de1ab716-9aa1-11ec-bde1-8a6e55faf877",
                "de1b05cc-9aa1-11ec-bde1-8a6e55faf877",
                "de1b4cc6-9aa1-11ec-bde1-8a6e55faf877",
                "de1b9046-9aa1-11ec-bde1-8a6e55faf877",
                "de1bcda4-9aa1-11ec-bde1-8a6e55faf877",
                "de1c1052-9aa1-11ec-bde1-8a6e55faf877",
                "de1c5a4e-9aa1-11ec-bde1-8a6e55faf877",
                "de1ca0c6-9aa1-11ec-bde1-8a6e55faf877",
                "de1ce450-9aa1-11ec-bde1-8a6e55faf877",
                "de1d24ec-9aa1-11ec-bde1-8a6e55faf877"
            ]
        },
        {
            "label": "尿常规检查",
            "name": "A3502",
            "hssc_id": "43a1842e-b092-11ec-9cae-5ed0e34457d3",
            "pym": "ncgjc",
            "name_icpc": "A3502",
            "managed_entity": "de87e7d2-9aa1-11ec-bde1-8a6e55faf877",
            "priority": 3,
            "is_system_service": false,
            "history_services_display": 0,
            "enable_queue_counter": true,
            "suppliers": null,
            "not_suitable": null,
            "execution_time_frame": null,
            "awaiting_time_frame": null,
            "working_hours": null,
            "frequency": null,
            "cost": null,
            "load_feedback": false,
            "resource_materials": null,
            "resource_devices": null,
            "resource_knowledge": null,
            "script": "{\"views\": \"\\nclass A3502_CreateView(CreateView):\\n    success_url = 'forms/'\\n    template_name = 'A3502_create.html'\\n    form_class = A3502_ModelForm  # the first form ModelForm class\\n    model = A3502\\n    context = {}\\n\\n    def get_context_data(self, **kwargs):\\n        context = super(A3502_CreateView, self).get_context_data(**kwargs)\\n        if self.request.method == 'POST':\\n            base_form = A6203_ModelForm(self.request.POST, prefix=\\\"base_form\\\")\\n            a3502_form = A3502_ModelForm(self.request.POST, prefix=\\\"a3502_form\\\")\\n        else:\\n            base_form = A6203_ModelForm(prefix=\\\"base_form\\\")\\n            a3502_form = A3502_ModelForm(prefix=\\\"a3502_form\\\")\\n        # context\\n        context['base_form'] = base_form\\n        context['a3502_form'] = a3502_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['a3502_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(A3502_CreateView, self).form_valid(form)\\n\\n\\n\\nclass A3502_UpdateView(SendSignalsMixin, UpdateView):\\n    success_url = 'forms/'\\n    template_name = 'A3502_update.html'\\n    form_class = A3502_ModelForm # the first form ModelForm class\\n    model = A3502\\n\\n    # if operation_proc.group is None:  # 如果进程角色已经被置为空，说明已有其他人处理，退出本修改作业进程\\n    #     return redirect(reverse('index'))\\n    # operation_proc.group.set([])  # 设置作业进程所属角色组为空\\n\\n    context = {}\\n        \\n    def get_context_data(self, **kwargs):\\n        context = super(A3502_UpdateView, self).get_context_data(**kwargs)\\n        operation_proc = get_object_or_404(OperationProc, id=kwargs['id'])\\n        customer = operation_proc.customer\\n        base_form = A6203_ModelForm(instance=A6203.objects.get(customer=1), prefix=\\\"base_form\\\")\\n        if self.request.method == 'POST':\\n            a3502_form = A3502_ModelForm(self.request.POST, prefix=\\\"a3502_form\\\")\\n            # 构造作业完成消息参数\\n            self.send_operand_finished(kwargs)\\n            return redirect(reverse('index'))\\n        else:\\n            a3502_form = A3502_ModelForm(instance=A3502.objects.get(pid=kwargs['id']), prefix=\\\"a3502_form\\\")\\n            # 构造作业开始消息参数\\n            self.send_operand_started(kwargs['id'])\\n        # context\\n        context['base_form'] = base_form\\n        context['a3502_form'] = a3502_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['a3502_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(A3502_CreateView, self).form_valid(form)\\n\", \"urls\": \"\\n    path('A3502/create', A3502_CreateView.as_view(), name='A3502_create_url'),\\n    path('A3502/<int:id>/update', A3502_UpdateView.as_view(), name='A3502_update_url'),\", \"templates\": [{\"A3502_create.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'A3502_create_url' %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>尿常规检查</h5>\\n            {{ a3502_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('a3502_form')\\\" />\\n    {% endblock %}\\n    \"}, {\"A3502_update.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'A3502_update_url' id %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>尿常规检查</h5>\\n            {{ a3502_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('a3502_form')\\\" />\\n    {% endblock %}\\n    \"}], \"models\": \"class A3502(HsscFormModel):\\n    characterfield_name = models.CharField(max_length=255, null=True, blank=True, verbose_name='姓名')\\n    characterfield_gender = models.CharField(max_length=255, null=True, blank=True, verbose_name='性别')\\n    characterfield_age = models.CharField(max_length=255, null=True, blank=True, verbose_name='年龄')\\n    characterfield_contact_address = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系地址')\\n    characterfield_contact_number = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系电话')\\n    boolfield_niao_tang = models.ForeignKey(Niao_tang, related_name='niao_tang_for_boolfield_niao_tang_A3502', on_delete=models.CASCADE, null=True, blank=True, verbose_name='尿糖')\\n    boolfield_dan_bai_zhi = models.ForeignKey(Dan_bai_zhi, related_name='dan_bai_zhi_for_boolfield_dan_bai_zhi_A3502', on_delete=models.CASCADE, null=True, blank=True, verbose_name='蛋白质')\\n    boolfield_tong_ti = models.ForeignKey(Tong_ti, related_name='tong_ti_for_boolfield_tong_ti_A3502', on_delete=models.CASCADE, null=True, blank=True, verbose_name='尿酮体')\\n\\n    class Meta:\\n        verbose_name = '尿常规检查'\\n        verbose_name_plural = verbose_name\\n\\n    def __str__(self):\\n        return self.customer.name\\n\\n        \\n\\n\", \"admin\": \"\\nclass A3502Admin(HsscFormAdmin):\\n    fieldsets = ((\\\"基本信息\\\", {\\\"fields\\\": ((\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ),)}), \\n        (\\\"尿常规检查\\\", {\\\"fields\\\": (\\\"boolfield_niao_tang\\\", \\\"boolfield_dan_bai_zhi\\\", \\\"boolfield_tong_ti\\\", )}), )\\n    autocomplete_fields = [\\\"boolfield_niao_tang\\\", \\\"boolfield_dan_bai_zhi\\\", \\\"boolfield_tong_ti\\\", ]\\n    readonly_fields = [\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ]\\nadmin.site.register(A3502, A3502Admin)\\nclinic_site.register(A3502, A3502Admin)\\n\"}",
            "buessiness_forms": [
                "2abcc130-b092-11ec-9cae-5ed0e34457d3"
            ],
            "role": []
        },
        {
            "label": "糖尿病查体",
            "name": "tang_niao_bing_cha_ti",
            "hssc_id": "ba1582e8-b6d9-11ec-8425-0ebea05fc526",
            "pym": "tnbct",
            "name_icpc": null,
            "managed_entity": "de87e7d2-9aa1-11ec-bde1-8a6e55faf877",
            "priority": 3,
            "is_system_service": false,
            "history_services_display": 0,
            "enable_queue_counter": true,
            "suppliers": null,
            "not_suitable": null,
            "execution_time_frame": null,
            "awaiting_time_frame": null,
            "working_hours": null,
            "frequency": null,
            "cost": null,
            "load_feedback": false,
            "resource_materials": null,
            "resource_devices": null,
            "resource_knowledge": null,
            "script": "{\"views\": \"\\nclass Tang_niao_bing_cha_ti_CreateView(CreateView):\\n    success_url = 'forms/'\\n    template_name = 'tang_niao_bing_cha_ti_create.html'\\n    form_class = T3003_ModelForm  # the first form ModelForm class\\n    model = T3003\\n    context = {}\\n\\n    def get_context_data(self, **kwargs):\\n        context = super(Tang_niao_bing_cha_ti_CreateView, self).get_context_data(**kwargs)\\n        if self.request.method == 'POST':\\n            base_form = A6203_ModelForm(self.request.POST, prefix=\\\"base_form\\\")\\n            t3003_form = T3003_ModelForm(self.request.POST, prefix=\\\"t3003_form\\\")\\n            t3002_form = T3002_ModelForm(self.request.POST, prefix=\\\"t3002_form\\\")\\n        else:\\n            base_form = A6203_ModelForm(prefix=\\\"base_form\\\")\\n            t3003_form = T3003_ModelForm(prefix=\\\"t3003_form\\\")\\n            t3002_form = T3002_ModelForm(prefix=\\\"t3002_form\\\")\\n        # context\\n        context['base_form'] = base_form\\n        context['t3003_form'] = t3003_form\\n        context['t3002_form'] = t3002_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['t3003_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        f = context['t3002_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(Tang_niao_bing_cha_ti_CreateView, self).form_valid(form)\\n\\n\\n\\nclass Tang_niao_bing_cha_ti_UpdateView(SendSignalsMixin, UpdateView):\\n    success_url = 'forms/'\\n    template_name = 'tang_niao_bing_cha_ti_update.html'\\n    form_class = T3003_ModelForm # the first form ModelForm class\\n    model = T3003\\n\\n    # if operation_proc.group is None:  # 如果进程角色已经被置为空，说明已有其他人处理，退出本修改作业进程\\n    #     return redirect(reverse('index'))\\n    # operation_proc.group.set([])  # 设置作业进程所属角色组为空\\n\\n    context = {}\\n        \\n    def get_context_data(self, **kwargs):\\n        context = super(Tang_niao_bing_cha_ti_UpdateView, self).get_context_data(**kwargs)\\n        operation_proc = get_object_or_404(OperationProc, id=kwargs['id'])\\n        customer = operation_proc.customer\\n        base_form = A6203_ModelForm(instance=A6203.objects.get(customer=1), prefix=\\\"base_form\\\")\\n        if self.request.method == 'POST':\\n            t3003_form = T3003_ModelForm(self.request.POST, prefix=\\\"t3003_form\\\")\\n            t3002_form = T3002_ModelForm(self.request.POST, prefix=\\\"t3002_form\\\")\\n            # 构造作业完成消息参数\\n            self.send_operand_finished(kwargs)\\n            return redirect(reverse('index'))\\n        else:\\n            t3003_form = T3003_ModelForm(instance=T3003.objects.get(pid=kwargs['id']), prefix=\\\"t3003_form\\\")\\n            t3002_form = T3002_ModelForm(instance=T3002.objects.get(pid=kwargs['id']), prefix=\\\"t3002_form\\\")\\n            # 构造作业开始消息参数\\n            self.send_operand_started(kwargs['id'])\\n        # context\\n        context['base_form'] = base_form\\n        context['t3003_form'] = t3003_form\\n        context['t3002_form'] = t3002_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['t3003_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        f = context['t3002_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(Tang_niao_bing_cha_ti_CreateView, self).form_valid(form)\\n\", \"urls\": \"\\n    path('tang_niao_bing_cha_ti/create', Tang_niao_bing_cha_ti_CreateView.as_view(), name='tang_niao_bing_cha_ti_create_url'),\\n    path('tang_niao_bing_cha_ti/<int:id>/update', Tang_niao_bing_cha_ti_UpdateView.as_view(), name='tang_niao_bing_cha_ti_update_url'),\", \"templates\": [{\"tang_niao_bing_cha_ti_create.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'tang_niao_bing_cha_ti_create_url' %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>足背动脉检查</h5>\\n            {{ t3003_form.as_p }}\\n        <hr>\\n            {% csrf_token %}                \\n            <h5>眼底检查</h5>\\n            {{ t3002_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('t3002_form')\\\" />\\n    {% endblock %}\\n    \"}, {\"tang_niao_bing_cha_ti_update.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'tang_niao_bing_cha_ti_update_url' id %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>足背动脉检查</h5>\\n            {{ t3003_form.as_p }}\\n        <hr>\\n            {% csrf_token %}                \\n            <h5>眼底检查</h5>\\n            {{ t3002_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('t3002_form')\\\" />\\n    {% endblock %}\\n    \"}], \"models\": \"class Tang_niao_bing_cha_ti(HsscFormModel):\\n    characterfield_name = models.CharField(max_length=255, null=True, blank=True, verbose_name='姓名')\\n    characterfield_gender = models.CharField(max_length=255, null=True, blank=True, verbose_name='性别')\\n    characterfield_age = models.CharField(max_length=255, null=True, blank=True, verbose_name='年龄')\\n    characterfield_contact_address = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系地址')\\n    characterfield_contact_number = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系电话')\\n    relatedfield_left_foot = models.ForeignKey(Dorsal_artery_pulsation, related_name='dorsal_artery_pulsation_for_relatedfield_left_foot_tang_niao_bing_cha_ti', on_delete=models.CASCADE, null=True, blank=True, verbose_name='左脚')\\n    relatedfield_right_foot = models.ForeignKey(Dorsal_artery_pulsation, related_name='dorsal_artery_pulsation_for_relatedfield_right_foot_tang_niao_bing_cha_ti', on_delete=models.CASCADE, null=True, blank=True, verbose_name='右脚')\\n    relatedfield_fundus = models.ForeignKey(Normality, related_name='normality_for_relatedfield_fundus_tang_niao_bing_cha_ti', on_delete=models.CASCADE, null=True, blank=True, verbose_name='眼底')\\n\\n    class Meta:\\n        verbose_name = '糖尿病查体'\\n        verbose_name_plural = verbose_name\\n\\n    def __str__(self):\\n        return self.customer.name\\n\\n        \\n\\n\", \"admin\": \"\\nclass Tang_niao_bing_cha_tiAdmin(HsscFormAdmin):\\n    fieldsets = ((\\\"基本信息\\\", {\\\"fields\\\": ((\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ),)}), \\n        (\\\"足背动脉检查\\\", {\\\"fields\\\": (\\\"relatedfield_left_foot\\\", \\\"relatedfield_right_foot\\\", )}), \\n        (\\\"眼底检查\\\", {\\\"fields\\\": (\\\"relatedfield_fundus\\\", )}), )\\n    autocomplete_fields = [\\\"relatedfield_left_foot\\\", \\\"relatedfield_right_foot\\\", \\\"relatedfield_fundus\\\", ]\\n    readonly_fields = [\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ]\\nadmin.site.register(Tang_niao_bing_cha_ti, Tang_niao_bing_cha_tiAdmin)\\nclinic_site.register(Tang_niao_bing_cha_ti, Tang_niao_bing_cha_tiAdmin)\\n\"}",
            "buessiness_forms": [
                "0bd6215c-9e23-11ec-aa2c-fe35a7065cdd",
                "0bb0c86c-9e23-11ec-aa2c-fe35a7065cdd"
            ],
            "role": []
        },
        {
            "label": "血压监测",
            "name": "xue_ya_jian_ce",
            "hssc_id": "b6f4ecba-b6da-11ec-8121-0ebea05fc526",
            "pym": "xyjc",
            "name_icpc": null,
            "managed_entity": "de87e7d2-9aa1-11ec-bde1-8a6e55faf877",
            "priority": 3,
            "is_system_service": false,
            "history_services_display": 0,
            "enable_queue_counter": true,
            "suppliers": null,
            "not_suitable": null,
            "execution_time_frame": null,
            "awaiting_time_frame": null,
            "working_hours": null,
            "frequency": null,
            "cost": null,
            "load_feedback": false,
            "resource_materials": null,
            "resource_devices": null,
            "resource_knowledge": null,
            "script": "{\"views\": \"\\nclass Xue_ya_jian_ce_CreateView(CreateView):\\n    success_url = 'forms/'\\n    template_name = 'xue_ya_jian_ce_create.html'\\n    form_class = A3105_ModelForm  # the first form ModelForm class\\n    model = A3105\\n    context = {}\\n\\n    def get_context_data(self, **kwargs):\\n        context = super(Xue_ya_jian_ce_CreateView, self).get_context_data(**kwargs)\\n        if self.request.method == 'POST':\\n            base_form = A6203_ModelForm(self.request.POST, prefix=\\\"base_form\\\")\\n            a3105_form = A3105_ModelForm(self.request.POST, prefix=\\\"a3105_form\\\")\\n        else:\\n            base_form = A6203_ModelForm(prefix=\\\"base_form\\\")\\n            a3105_form = A3105_ModelForm(prefix=\\\"a3105_form\\\")\\n        # context\\n        context['base_form'] = base_form\\n        context['a3105_form'] = a3105_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['a3105_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(Xue_ya_jian_ce_CreateView, self).form_valid(form)\\n\\n\\n\\nclass Xue_ya_jian_ce_UpdateView(SendSignalsMixin, UpdateView):\\n    success_url = 'forms/'\\n    template_name = 'xue_ya_jian_ce_update.html'\\n    form_class = A3105_ModelForm # the first form ModelForm class\\n    model = A3105\\n\\n    # if operation_proc.group is None:  # 如果进程角色已经被置为空，说明已有其他人处理，退出本修改作业进程\\n    #     return redirect(reverse('index'))\\n    # operation_proc.group.set([])  # 设置作业进程所属角色组为空\\n\\n    context = {}\\n        \\n    def get_context_data(self, **kwargs):\\n        context = super(Xue_ya_jian_ce_UpdateView, self).get_context_data(**kwargs)\\n        operation_proc = get_object_or_404(OperationProc, id=kwargs['id'])\\n        customer = operation_proc.customer\\n        base_form = A6203_ModelForm(instance=A6203.objects.get(customer=1), prefix=\\\"base_form\\\")\\n        if self.request.method == 'POST':\\n            a3105_form = A3105_ModelForm(self.request.POST, prefix=\\\"a3105_form\\\")\\n            # 构造作业完成消息参数\\n            self.send_operand_finished(kwargs)\\n            return redirect(reverse('index'))\\n        else:\\n            a3105_form = A3105_ModelForm(instance=A3105.objects.get(pid=kwargs['id']), prefix=\\\"a3105_form\\\")\\n            # 构造作业开始消息参数\\n            self.send_operand_started(kwargs['id'])\\n        # context\\n        context['base_form'] = base_form\\n        context['a3105_form'] = a3105_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['a3105_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(Xue_ya_jian_ce_CreateView, self).form_valid(form)\\n\", \"urls\": \"\\n    path('xue_ya_jian_ce/create', Xue_ya_jian_ce_CreateView.as_view(), name='xue_ya_jian_ce_create_url'),\\n    path('xue_ya_jian_ce/<int:id>/update', Xue_ya_jian_ce_UpdateView.as_view(), name='xue_ya_jian_ce_update_url'),\", \"templates\": [{\"xue_ya_jian_ce_create.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'xue_ya_jian_ce_create_url' %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>血压监测</h5>\\n            {{ a3105_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('a3105_form')\\\" />\\n    {% endblock %}\\n    \"}, {\"xue_ya_jian_ce_update.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'xue_ya_jian_ce_update_url' id %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>血压监测</h5>\\n            {{ a3105_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('a3105_form')\\\" />\\n    {% endblock %}\\n    \"}], \"models\": \"class Xue_ya_jian_ce(HsscFormModel):\\n    characterfield_name = models.CharField(max_length=255, null=True, blank=True, verbose_name='姓名')\\n    characterfield_gender = models.CharField(max_length=255, null=True, blank=True, verbose_name='性别')\\n    characterfield_age = models.CharField(max_length=255, null=True, blank=True, verbose_name='年龄')\\n    characterfield_contact_address = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系地址')\\n    characterfield_contact_number = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系电话')\\n    numberfield_systolic_blood_pressure = models.IntegerField(null=True, blank=True, verbose_name='收缩压')\\n    numberfield_systolic_blood_pressure_standard_value = models.IntegerField(null=True, blank=True, verbose_name='收缩压标准值')\\n    numberfield_systolic_blood_pressure_up_limit = models.IntegerField(default=139.0, null=True, blank=True, verbose_name='收缩压上限')\\n    numberfield_systolic_blood_pressure_down_limit = models.IntegerField(default=90.0, null=True, blank=True, verbose_name='收缩压下限')\\n    numberfield_diastolic_blood_pressure = models.IntegerField(null=True, blank=True, verbose_name='舒张压')\\n    numberfield_diastolic_blood_pressure_standard_value = models.IntegerField(null=True, blank=True, verbose_name='舒张压标准值')\\n    numberfield_diastolic_blood_pressure_up_limit = models.IntegerField(default=89.0, null=True, blank=True, verbose_name='舒张压上限')\\n    numberfield_diastolic_blood_pressure_down_limit = models.IntegerField(default=60.0, null=True, blank=True, verbose_name='舒张压下限')\\n\\n    class Meta:\\n        verbose_name = '血压监测'\\n        verbose_name_plural = verbose_name\\n\\n    def __str__(self):\\n        return self.customer.name\\n\\n        \\n\\n\", \"admin\": \"\\nclass Xue_ya_jian_ceAdmin(HsscFormAdmin):\\n    fieldsets = ((\\\"基本信息\\\", {\\\"fields\\\": ((\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ),)}), \\n        (\\\"血压监测\\\", {\\\"fields\\\": (\\\"numberfield_systolic_blood_pressure\\\", \\\"numberfield_diastolic_blood_pressure\\\", )}), )\\n    \\n    readonly_fields = [\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ]\\nadmin.site.register(Xue_ya_jian_ce, Xue_ya_jian_ceAdmin)\\nclinic_site.register(Xue_ya_jian_ce, Xue_ya_jian_ceAdmin)\\n\"}",
            "buessiness_forms": [
                "0c940c94-9e23-11ec-aa2c-fe35a7065cdd"
            ],
            "role": []
        },
        {
            "label": "空腹血糖检查",
            "name": "kong_fu_xue_tang_jian_cha",
            "hssc_id": "cb6fe794-b6da-11ec-8425-0ebea05fc526",
            "pym": "kfxtjc",
            "name_icpc": null,
            "managed_entity": "de87e7d2-9aa1-11ec-bde1-8a6e55faf877",
            "priority": 3,
            "is_system_service": false,
            "history_services_display": 0,
            "enable_queue_counter": true,
            "suppliers": null,
            "not_suitable": null,
            "execution_time_frame": null,
            "awaiting_time_frame": null,
            "working_hours": null,
            "frequency": null,
            "cost": null,
            "load_feedback": false,
            "resource_materials": null,
            "resource_devices": null,
            "resource_knowledge": null,
            "script": "{\"views\": \"\\nclass Kong_fu_xue_tang_jian_cha_CreateView(CreateView):\\n    success_url = 'forms/'\\n    template_name = 'kong_fu_xue_tang_jian_cha_create.html'\\n    form_class = T3404_ModelForm  # the first form ModelForm class\\n    model = T3404\\n    context = {}\\n\\n    def get_context_data(self, **kwargs):\\n        context = super(Kong_fu_xue_tang_jian_cha_CreateView, self).get_context_data(**kwargs)\\n        if self.request.method == 'POST':\\n            base_form = A6203_ModelForm(self.request.POST, prefix=\\\"base_form\\\")\\n            t3404_form = T3404_ModelForm(self.request.POST, prefix=\\\"t3404_form\\\")\\n        else:\\n            base_form = A6203_ModelForm(prefix=\\\"base_form\\\")\\n            t3404_form = T3404_ModelForm(prefix=\\\"t3404_form\\\")\\n        # context\\n        context['base_form'] = base_form\\n        context['t3404_form'] = t3404_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['t3404_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(Kong_fu_xue_tang_jian_cha_CreateView, self).form_valid(form)\\n\\n\\n\\nclass Kong_fu_xue_tang_jian_cha_UpdateView(SendSignalsMixin, UpdateView):\\n    success_url = 'forms/'\\n    template_name = 'kong_fu_xue_tang_jian_cha_update.html'\\n    form_class = T3404_ModelForm # the first form ModelForm class\\n    model = T3404\\n\\n    # if operation_proc.group is None:  # 如果进程角色已经被置为空，说明已有其他人处理，退出本修改作业进程\\n    #     return redirect(reverse('index'))\\n    # operation_proc.group.set([])  # 设置作业进程所属角色组为空\\n\\n    context = {}\\n        \\n    def get_context_data(self, **kwargs):\\n        context = super(Kong_fu_xue_tang_jian_cha_UpdateView, self).get_context_data(**kwargs)\\n        operation_proc = get_object_or_404(OperationProc, id=kwargs['id'])\\n        customer = operation_proc.customer\\n        base_form = A6203_ModelForm(instance=A6203.objects.get(customer=1), prefix=\\\"base_form\\\")\\n        if self.request.method == 'POST':\\n            t3404_form = T3404_ModelForm(self.request.POST, prefix=\\\"t3404_form\\\")\\n            # 构造作业完成消息参数\\n            self.send_operand_finished(kwargs)\\n            return redirect(reverse('index'))\\n        else:\\n            t3404_form = T3404_ModelForm(instance=T3404.objects.get(pid=kwargs['id']), prefix=\\\"t3404_form\\\")\\n            # 构造作业开始消息参数\\n            self.send_operand_started(kwargs['id'])\\n        # context\\n        context['base_form'] = base_form\\n        context['t3404_form'] = t3404_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['t3404_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(Kong_fu_xue_tang_jian_cha_CreateView, self).form_valid(form)\\n\", \"urls\": \"\\n    path('kong_fu_xue_tang_jian_cha/create', Kong_fu_xue_tang_jian_cha_CreateView.as_view(), name='kong_fu_xue_tang_jian_cha_create_url'),\\n    path('kong_fu_xue_tang_jian_cha/<int:id>/update', Kong_fu_xue_tang_jian_cha_UpdateView.as_view(), name='kong_fu_xue_tang_jian_cha_update_url'),\", \"templates\": [{\"kong_fu_xue_tang_jian_cha_create.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'kong_fu_xue_tang_jian_cha_create_url' %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>空腹血糖检查</h5>\\n            {{ t3404_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('t3404_form')\\\" />\\n    {% endblock %}\\n    \"}, {\"kong_fu_xue_tang_jian_cha_update.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'kong_fu_xue_tang_jian_cha_update_url' id %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>空腹血糖检查</h5>\\n            {{ t3404_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('t3404_form')\\\" />\\n    {% endblock %}\\n    \"}], \"models\": \"class Kong_fu_xue_tang_jian_cha(HsscFormModel):\\n    characterfield_name = models.CharField(max_length=255, null=True, blank=True, verbose_name='姓名')\\n    characterfield_gender = models.CharField(max_length=255, null=True, blank=True, verbose_name='性别')\\n    characterfield_age = models.CharField(max_length=255, null=True, blank=True, verbose_name='年龄')\\n    characterfield_contact_address = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系地址')\\n    characterfield_contact_number = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系电话')\\n    numberfield_kong_fu_xue_tang = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True, verbose_name='空腹血糖')\\n    numberfield_kong_fu_xue_tang_standard_value = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True, verbose_name='空腹血糖标准值')\\n    numberfield_kong_fu_xue_tang_up_limit = models.DecimalField(max_digits=10, decimal_places=2, default=7.0, null=True, blank=True, verbose_name='空腹血糖上限')\\n    numberfield_kong_fu_xue_tang_down_limit = models.DecimalField(max_digits=10, decimal_places=2, default=3.9, null=True, blank=True, verbose_name='空腹血糖下限')\\n\\n    class Meta:\\n        verbose_name = '空腹血糖检查'\\n        verbose_name_plural = verbose_name\\n\\n    def __str__(self):\\n        return self.customer.name\\n\\n        \\n\\n\", \"admin\": \"\\nclass Kong_fu_xue_tang_jian_chaAdmin(HsscFormAdmin):\\n    fieldsets = ((\\\"基本信息\\\", {\\\"fields\\\": ((\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ),)}), \\n        (\\\"空腹血糖检查\\\", {\\\"fields\\\": (\\\"numberfield_kong_fu_xue_tang\\\", )}), )\\n    \\n    readonly_fields = [\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ]\\nadmin.site.register(Kong_fu_xue_tang_jian_cha, Kong_fu_xue_tang_jian_chaAdmin)\\nclinic_site.register(Kong_fu_xue_tang_jian_cha, Kong_fu_xue_tang_jian_chaAdmin)\\n\"}",
            "buessiness_forms": [
                "0c3bd51a-9e23-11ec-aa2c-fe35a7065cdd"
            ],
            "role": []
        },
        {
            "label": "糖化血红蛋白检查表",
            "name": "tang_hua_xue_hong_dan_bai_jian_cha_biao",
            "hssc_id": "dc931be0-b6da-11ec-8425-0ebea05fc526",
            "pym": "thxhdbjcb",
            "name_icpc": null,
            "managed_entity": "de87e7d2-9aa1-11ec-bde1-8a6e55faf877",
            "priority": 3,
            "is_system_service": false,
            "history_services_display": 0,
            "enable_queue_counter": true,
            "suppliers": null,
            "not_suitable": null,
            "execution_time_frame": null,
            "awaiting_time_frame": null,
            "working_hours": null,
            "frequency": null,
            "cost": null,
            "load_feedback": false,
            "resource_materials": null,
            "resource_devices": null,
            "resource_knowledge": null,
            "script": "{\"views\": \"\\nclass Tang_hua_xue_hong_dan_bai_jian_cha_biao_CreateView(CreateView):\\n    success_url = 'forms/'\\n    template_name = 'tang_hua_xue_hong_dan_bai_jian_cha_biao_create.html'\\n    form_class = T3405_ModelForm  # the first form ModelForm class\\n    model = T3405\\n    context = {}\\n\\n    def get_context_data(self, **kwargs):\\n        context = super(Tang_hua_xue_hong_dan_bai_jian_cha_biao_CreateView, self).get_context_data(**kwargs)\\n        if self.request.method == 'POST':\\n            base_form = A6203_ModelForm(self.request.POST, prefix=\\\"base_form\\\")\\n            t3405_form = T3405_ModelForm(self.request.POST, prefix=\\\"t3405_form\\\")\\n        else:\\n            base_form = A6203_ModelForm(prefix=\\\"base_form\\\")\\n            t3405_form = T3405_ModelForm(prefix=\\\"t3405_form\\\")\\n        # context\\n        context['base_form'] = base_form\\n        context['t3405_form'] = t3405_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['t3405_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(Tang_hua_xue_hong_dan_bai_jian_cha_biao_CreateView, self).form_valid(form)\\n\\n\\n\\nclass Tang_hua_xue_hong_dan_bai_jian_cha_biao_UpdateView(SendSignalsMixin, UpdateView):\\n    success_url = 'forms/'\\n    template_name = 'tang_hua_xue_hong_dan_bai_jian_cha_biao_update.html'\\n    form_class = T3405_ModelForm # the first form ModelForm class\\n    model = T3405\\n\\n    # if operation_proc.group is None:  # 如果进程角色已经被置为空，说明已有其他人处理，退出本修改作业进程\\n    #     return redirect(reverse('index'))\\n    # operation_proc.group.set([])  # 设置作业进程所属角色组为空\\n\\n    context = {}\\n        \\n    def get_context_data(self, **kwargs):\\n        context = super(Tang_hua_xue_hong_dan_bai_jian_cha_biao_UpdateView, self).get_context_data(**kwargs)\\n        operation_proc = get_object_or_404(OperationProc, id=kwargs['id'])\\n        customer = operation_proc.customer\\n        base_form = A6203_ModelForm(instance=A6203.objects.get(customer=1), prefix=\\\"base_form\\\")\\n        if self.request.method == 'POST':\\n            t3405_form = T3405_ModelForm(self.request.POST, prefix=\\\"t3405_form\\\")\\n            # 构造作业完成消息参数\\n            self.send_operand_finished(kwargs)\\n            return redirect(reverse('index'))\\n        else:\\n            t3405_form = T3405_ModelForm(instance=T3405.objects.get(pid=kwargs['id']), prefix=\\\"t3405_form\\\")\\n            # 构造作业开始消息参数\\n            self.send_operand_started(kwargs['id'])\\n        # context\\n        context['base_form'] = base_form\\n        context['t3405_form'] = t3405_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['t3405_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(Tang_hua_xue_hong_dan_bai_jian_cha_biao_CreateView, self).form_valid(form)\\n\", \"urls\": \"\\n    path('tang_hua_xue_hong_dan_bai_jian_cha_biao/create', Tang_hua_xue_hong_dan_bai_jian_cha_biao_CreateView.as_view(), name='tang_hua_xue_hong_dan_bai_jian_cha_biao_create_url'),\\n    path('tang_hua_xue_hong_dan_bai_jian_cha_biao/<int:id>/update', Tang_hua_xue_hong_dan_bai_jian_cha_biao_UpdateView.as_view(), name='tang_hua_xue_hong_dan_bai_jian_cha_biao_update_url'),\", \"templates\": [{\"tang_hua_xue_hong_dan_bai_jian_cha_biao_create.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'tang_hua_xue_hong_dan_bai_jian_cha_biao_create_url' %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>糖化血红蛋白检查</h5>\\n            {{ t3405_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('t3405_form')\\\" />\\n    {% endblock %}\\n    \"}, {\"tang_hua_xue_hong_dan_bai_jian_cha_biao_update.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'tang_hua_xue_hong_dan_bai_jian_cha_biao_update_url' id %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>糖化血红蛋白检查</h5>\\n            {{ t3405_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('t3405_form')\\\" />\\n    {% endblock %}\\n    \"}], \"models\": \"class Tang_hua_xue_hong_dan_bai_jian_cha_biao(HsscFormModel):\\n    characterfield_name = models.CharField(max_length=255, null=True, blank=True, verbose_name='姓名')\\n    characterfield_gender = models.CharField(max_length=255, null=True, blank=True, verbose_name='性别')\\n    characterfield_age = models.CharField(max_length=255, null=True, blank=True, verbose_name='年龄')\\n    characterfield_contact_address = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系地址')\\n    characterfield_contact_number = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系电话')\\n    numberfield_tang_hua_xue_hong_dan_bai = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True, verbose_name='糖化血红蛋白')\\n    numberfield_tang_hua_xue_hong_dan_bai_standard_value = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True, verbose_name='糖化血红蛋白标准值')\\n    numberfield_tang_hua_xue_hong_dan_bai_up_limit = models.DecimalField(max_digits=10, decimal_places=2, default=6.0, null=True, blank=True, verbose_name='糖化血红蛋白上限')\\n    numberfield_tang_hua_xue_hong_dan_bai_down_limit = models.DecimalField(max_digits=10, decimal_places=2, default=4.0, null=True, blank=True, verbose_name='糖化血红蛋白下限')\\n\\n    class Meta:\\n        verbose_name = '糖化血红蛋白检查表'\\n        verbose_name_plural = verbose_name\\n\\n    def __str__(self):\\n        return self.customer.name\\n\\n        \\n\\n\", \"admin\": \"\\nclass Tang_hua_xue_hong_dan_bai_jian_cha_biaoAdmin(HsscFormAdmin):\\n    fieldsets = ((\\\"基本信息\\\", {\\\"fields\\\": ((\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ),)}), \\n        (\\\"糖化血红蛋白检查\\\", {\\\"fields\\\": (\\\"numberfield_tang_hua_xue_hong_dan_bai\\\", )}), )\\n    \\n    readonly_fields = [\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ]\\nadmin.site.register(Tang_hua_xue_hong_dan_bai_jian_cha_biao, Tang_hua_xue_hong_dan_bai_jian_cha_biaoAdmin)\\nclinic_site.register(Tang_hua_xue_hong_dan_bai_jian_cha_biao, Tang_hua_xue_hong_dan_bai_jian_cha_biaoAdmin)\\n\"}",
            "buessiness_forms": [
                "0c440b9a-9e23-11ec-aa2c-fe35a7065cdd"
            ],
            "role": []
        },
        {
            "label": "非胰岛素依赖性糖尿病",
            "name": "T9001",
            "hssc_id": "9fb42996-b6dd-11ec-8425-0ebea05fc526",
            "pym": "fydsylxtnb",
            "name_icpc": "T9001",
            "managed_entity": "de87e7d2-9aa1-11ec-bde1-8a6e55faf877",
            "priority": 3,
            "is_system_service": false,
            "history_services_display": 0,
            "enable_queue_counter": true,
            "suppliers": null,
            "not_suitable": null,
            "execution_time_frame": null,
            "awaiting_time_frame": null,
            "working_hours": null,
            "frequency": null,
            "cost": null,
            "load_feedback": false,
            "resource_materials": null,
            "resource_devices": null,
            "resource_knowledge": null,
            "script": "{\"views\": \"\\nclass T9001_CreateView(CreateView):\\n    success_url = 'forms/'\\n    template_name = 'T9001_create.html'\\n    form_class = T9001_ModelForm  # the first form ModelForm class\\n    model = T9001\\n    context = {}\\n\\n    def get_context_data(self, **kwargs):\\n        context = super(T9001_CreateView, self).get_context_data(**kwargs)\\n        if self.request.method == 'POST':\\n            base_form = A6203_ModelForm(self.request.POST, prefix=\\\"base_form\\\")\\n            t9001_form = T9001_ModelForm(self.request.POST, prefix=\\\"t9001_form\\\")\\n        else:\\n            base_form = A6203_ModelForm(prefix=\\\"base_form\\\")\\n            t9001_form = T9001_ModelForm(prefix=\\\"t9001_form\\\")\\n        # context\\n        context['base_form'] = base_form\\n        context['t9001_form'] = t9001_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['t9001_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(T9001_CreateView, self).form_valid(form)\\n\\n\\n\\nclass T9001_UpdateView(SendSignalsMixin, UpdateView):\\n    success_url = 'forms/'\\n    template_name = 'T9001_update.html'\\n    form_class = T9001_ModelForm # the first form ModelForm class\\n    model = T9001\\n\\n    # if operation_proc.group is None:  # 如果进程角色已经被置为空，说明已有其他人处理，退出本修改作业进程\\n    #     return redirect(reverse('index'))\\n    # operation_proc.group.set([])  # 设置作业进程所属角色组为空\\n\\n    context = {}\\n        \\n    def get_context_data(self, **kwargs):\\n        context = super(T9001_UpdateView, self).get_context_data(**kwargs)\\n        operation_proc = get_object_or_404(OperationProc, id=kwargs['id'])\\n        customer = operation_proc.customer\\n        base_form = A6203_ModelForm(instance=A6203.objects.get(customer=1), prefix=\\\"base_form\\\")\\n        if self.request.method == 'POST':\\n            t9001_form = T9001_ModelForm(self.request.POST, prefix=\\\"t9001_form\\\")\\n            # 构造作业完成消息参数\\n            self.send_operand_finished(kwargs)\\n            return redirect(reverse('index'))\\n        else:\\n            t9001_form = T9001_ModelForm(instance=T9001.objects.get(pid=kwargs['id']), prefix=\\\"t9001_form\\\")\\n            # 构造作业开始消息参数\\n            self.send_operand_started(kwargs['id'])\\n        # context\\n        context['base_form'] = base_form\\n        context['t9001_form'] = t9001_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['t9001_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(T9001_CreateView, self).form_valid(form)\\n\", \"urls\": \"\\n    path('T9001/create', T9001_CreateView.as_view(), name='T9001_create_url'),\\n    path('T9001/<int:id>/update', T9001_UpdateView.as_view(), name='T9001_update_url'),\", \"templates\": [{\"T9001_create.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'T9001_create_url' %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>非胰岛素依赖性糖尿病</h5>\\n            {{ t9001_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('t9001_form')\\\" />\\n    {% endblock %}\\n    \"}, {\"T9001_update.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'T9001_update_url' id %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>非胰岛素依赖性糖尿病</h5>\\n            {{ t9001_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('t9001_form')\\\" />\\n    {% endblock %}\\n    \"}], \"models\": \"class T9001(HsscFormModel):\\n    characterfield_name = models.CharField(max_length=255, null=True, blank=True, verbose_name='姓名')\\n    characterfield_gender = models.CharField(max_length=255, null=True, blank=True, verbose_name='性别')\\n    characterfield_age = models.CharField(max_length=255, null=True, blank=True, verbose_name='年龄')\\n    characterfield_contact_address = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系地址')\\n    characterfield_contact_number = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系电话')\\n    relatedfield_disease_name = models.ForeignKey(Icpc5_evaluation_and_diagnoses, related_name='icpc5_evaluation_and_diagnoses_for_relatedfield_disease_name_T9001', on_delete=models.CASCADE, null=True, blank=True, verbose_name='疾病名称')\\n    relatedfield_yi_lou_zhen_duan = models.ManyToManyField(Icpc5_evaluation_and_diagnoses, related_name='icpc5_evaluation_and_diagnoses_for_relatedfield_yi_lou_zhen_duan_T9001', verbose_name='可能诊断')\\n    relatedfield_pai_chu_zhen_duan = models.ManyToManyField(Icpc5_evaluation_and_diagnoses, related_name='icpc5_evaluation_and_diagnoses_for_relatedfield_pai_chu_zhen_duan_T9001', verbose_name='排除诊断')\\n\\n    class Meta:\\n        verbose_name = '非胰岛素依赖性糖尿病'\\n        verbose_name_plural = verbose_name\\n\\n    def __str__(self):\\n        return self.customer.name\\n\\n        \\n\\n\", \"admin\": \"\\nclass T9001Admin(HsscFormAdmin):\\n    fieldsets = ((\\\"基本信息\\\", {\\\"fields\\\": ((\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ),)}), \\n        (\\\"非胰岛素依赖性糖尿病\\\", {\\\"fields\\\": (\\\"relatedfield_disease_name\\\", \\\"relatedfield_yi_lou_zhen_duan\\\", \\\"relatedfield_pai_chu_zhen_duan\\\", )}), )\\n    autocomplete_fields = [\\\"relatedfield_disease_name\\\", \\\"relatedfield_yi_lou_zhen_duan\\\", \\\"relatedfield_pai_chu_zhen_duan\\\", ]\\n    readonly_fields = [\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ]\\nadmin.site.register(T9001, T9001Admin)\\nclinic_site.register(T9001, T9001Admin)\\n\"}",
            "buessiness_forms": [
                "0c7bdb06-9e23-11ec-aa2c-fe35a7065cdd"
            ],
            "role": []
        },
        {
            "label": "签约服务",
            "name": "qian_yue_fu_wu",
            "hssc_id": "7ec806da-b89a-11ec-8bd3-322924405212",
            "pym": "qyfw",
            "name_icpc": null,
            "managed_entity": "de87e7d2-9aa1-11ec-bde1-8a6e55faf877",
            "priority": 3,
            "is_system_service": false,
            "history_services_display": 0,
            "enable_queue_counter": true,
            "suppliers": null,
            "not_suitable": null,
            "execution_time_frame": null,
            "awaiting_time_frame": null,
            "working_hours": null,
            "frequency": null,
            "cost": null,
            "load_feedback": false,
            "resource_materials": null,
            "resource_devices": null,
            "resource_knowledge": null,
            "script": "{\"views\": \"\\nclass Qian_yue_fu_wu_CreateView(CreateView):\\n    success_url = 'forms/'\\n    template_name = 'qian_yue_fu_wu_create.html'\\n    form_class = Z6261_ModelForm  # the first form ModelForm class\\n    model = Z6261\\n    context = {}\\n\\n    def get_context_data(self, **kwargs):\\n        context = super(Qian_yue_fu_wu_CreateView, self).get_context_data(**kwargs)\\n        if self.request.method == 'POST':\\n            base_form = A6203_ModelForm(self.request.POST, prefix=\\\"base_form\\\")\\n            z6261_form = Z6261_ModelForm(self.request.POST, prefix=\\\"z6261_form\\\")\\n        else:\\n            base_form = A6203_ModelForm(prefix=\\\"base_form\\\")\\n            z6261_form = Z6261_ModelForm(prefix=\\\"z6261_form\\\")\\n        # context\\n        context['base_form'] = base_form\\n        context['z6261_form'] = z6261_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['z6261_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(Qian_yue_fu_wu_CreateView, self).form_valid(form)\\n\\n\\n\\nclass Qian_yue_fu_wu_UpdateView(SendSignalsMixin, UpdateView):\\n    success_url = 'forms/'\\n    template_name = 'qian_yue_fu_wu_update.html'\\n    form_class = Z6261_ModelForm # the first form ModelForm class\\n    model = Z6261\\n\\n    # if operation_proc.group is None:  # 如果进程角色已经被置为空，说明已有其他人处理，退出本修改作业进程\\n    #     return redirect(reverse('index'))\\n    # operation_proc.group.set([])  # 设置作业进程所属角色组为空\\n\\n    context = {}\\n        \\n    def get_context_data(self, **kwargs):\\n        context = super(Qian_yue_fu_wu_UpdateView, self).get_context_data(**kwargs)\\n        operation_proc = get_object_or_404(OperationProc, id=kwargs['id'])\\n        customer = operation_proc.customer\\n        base_form = A6203_ModelForm(instance=A6203.objects.get(customer=1), prefix=\\\"base_form\\\")\\n        if self.request.method == 'POST':\\n            z6261_form = Z6261_ModelForm(self.request.POST, prefix=\\\"z6261_form\\\")\\n            # 构造作业完成消息参数\\n            self.send_operand_finished(kwargs)\\n            return redirect(reverse('index'))\\n        else:\\n            z6261_form = Z6261_ModelForm(instance=Z6261.objects.get(pid=kwargs['id']), prefix=\\\"z6261_form\\\")\\n            # 构造作业开始消息参数\\n            self.send_operand_started(kwargs['id'])\\n        # context\\n        context['base_form'] = base_form\\n        context['z6261_form'] = z6261_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['z6261_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(Qian_yue_fu_wu_CreateView, self).form_valid(form)\\n\", \"urls\": \"\\n    path('qian_yue_fu_wu/create', Qian_yue_fu_wu_CreateView.as_view(), name='qian_yue_fu_wu_create_url'),\\n    path('qian_yue_fu_wu/<int:id>/update', Qian_yue_fu_wu_UpdateView.as_view(), name='qian_yue_fu_wu_update_url'),\", \"templates\": [{\"qian_yue_fu_wu_create.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'qian_yue_fu_wu_create_url' %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>家庭医生签约</h5>\\n            {{ z6261_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('z6261_form')\\\" />\\n    {% endblock %}\\n    \"}, {\"qian_yue_fu_wu_update.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'qian_yue_fu_wu_update_url' id %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>家庭医生签约</h5>\\n            {{ z6261_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('z6261_form')\\\" />\\n    {% endblock %}\\n    \"}], \"models\": \"class Qian_yue_fu_wu(HsscFormModel):\\n    characterfield_name = models.CharField(max_length=255, null=True, blank=True, verbose_name='姓名')\\n    characterfield_gender = models.CharField(max_length=255, null=True, blank=True, verbose_name='性别')\\n    characterfield_age = models.CharField(max_length=255, null=True, blank=True, verbose_name='年龄')\\n    characterfield_contact_address = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系地址')\\n    characterfield_contact_number = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系电话')\\n    boolfield_jia_ting_qian_yue_fu_wu_xie_yi = models.CharField(max_length=255, null=True, blank=True, verbose_name='家庭签约服务协议')\\n    boolfield_qian_yue_que_ren = models.ForeignKey(Qian_yue_que_ren, related_name='qian_yue_que_ren_for_boolfield_qian_yue_que_ren_qian_yue_fu_wu', on_delete=models.CASCADE, null=True, blank=True, verbose_name='签约确认')\\n    boolfield_ze_ren_ren = models.ForeignKey(Staff, related_name='staff_for_boolfield_ze_ren_ren_qian_yue_fu_wu', on_delete=models.CASCADE, null=True, blank=True, verbose_name='责任人')\\n\\n    class Meta:\\n        verbose_name = '签约服务'\\n        verbose_name_plural = verbose_name\\n\\n    def __str__(self):\\n        return self.customer.name\\n\\n        \\n\\n\", \"admin\": \"\\nclass Qian_yue_fu_wuAdmin(HsscFormAdmin):\\n    fieldsets = ((\\\"基本信息\\\", {\\\"fields\\\": ((\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ),)}), \\n        (\\\"家庭医生签约\\\", {\\\"fields\\\": (\\\"boolfield_jia_ting_qian_yue_fu_wu_xie_yi\\\", \\\"boolfield_qian_yue_que_ren\\\", \\\"boolfield_ze_ren_ren\\\", )}), )\\n    autocomplete_fields = [\\\"boolfield_qian_yue_que_ren\\\", \\\"boolfield_ze_ren_ren\\\", ]\\n    readonly_fields = [\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ]\\nadmin.site.register(Qian_yue_fu_wu, Qian_yue_fu_wuAdmin)\\nclinic_site.register(Qian_yue_fu_wu, Qian_yue_fu_wuAdmin)\\n\"}",
            "buessiness_forms": [
                "d0ce09ec-aa45-11ec-9f15-ee7ade4bced6"
            ],
            "role": [
                "de18f0fc-9aa1-11ec-bde1-8a6e55faf877",
                "de194c50-9aa1-11ec-bde1-8a6e55faf877",
                "de19d6a2-9aa1-11ec-bde1-8a6e55faf877",
                "de1b05cc-9aa1-11ec-bde1-8a6e55faf877"
            ]
        },
        {
            "label": "输液注射",
            "name": "shu_ye_zhu_she",
            "hssc_id": "9b199d36-c9f1-11ec-b452-168d53e8234e",
            "pym": "syzs",
            "name_icpc": null,
            "managed_entity": "de87e7d2-9aa1-11ec-bde1-8a6e55faf877",
            "priority": 3,
            "is_system_service": false,
            "history_services_display": 0,
            "enable_queue_counter": true,
            "suppliers": null,
            "not_suitable": null,
            "execution_time_frame": null,
            "awaiting_time_frame": null,
            "working_hours": null,
            "frequency": null,
            "cost": null,
            "load_feedback": false,
            "resource_materials": null,
            "resource_devices": null,
            "resource_knowledge": null,
            "script": "{\"views\": \"\\nclass Shu_ye_zhu_she_CreateView(CreateView):\\n    success_url = 'forms/'\\n    template_name = 'shu_ye_zhu_she_create.html'\\n    form_class = Shu_ye_zhu_she_dan_ModelForm  # the first form ModelForm class\\n    model = Shu_ye_zhu_she_dan\\n    context = {}\\n\\n    def get_context_data(self, **kwargs):\\n        context = super(Shu_ye_zhu_she_CreateView, self).get_context_data(**kwargs)\\n        if self.request.method == 'POST':\\n            base_form = A6203_ModelForm(self.request.POST, prefix=\\\"base_form\\\")\\n            shu_ye_zhu_she_dan_form = Shu_ye_zhu_she_dan_ModelForm(self.request.POST, prefix=\\\"shu_ye_zhu_she_dan_form\\\")\\n        else:\\n            base_form = A6203_ModelForm(prefix=\\\"base_form\\\")\\n            shu_ye_zhu_she_dan_form = Shu_ye_zhu_she_dan_ModelForm(prefix=\\\"shu_ye_zhu_she_dan_form\\\")\\n        # context\\n        context['base_form'] = base_form\\n        context['shu_ye_zhu_she_dan_form'] = shu_ye_zhu_she_dan_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['shu_ye_zhu_she_dan_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(Shu_ye_zhu_she_CreateView, self).form_valid(form)\\n\\n\\n\\nclass Shu_ye_zhu_she_UpdateView(SendSignalsMixin, UpdateView):\\n    success_url = 'forms/'\\n    template_name = 'shu_ye_zhu_she_update.html'\\n    form_class = Shu_ye_zhu_she_dan_ModelForm # the first form ModelForm class\\n    model = Shu_ye_zhu_she_dan\\n\\n    # if operation_proc.group is None:  # 如果进程角色已经被置为空，说明已有其他人处理，退出本修改作业进程\\n    #     return redirect(reverse('index'))\\n    # operation_proc.group.set([])  # 设置作业进程所属角色组为空\\n\\n    context = {}\\n        \\n    def get_context_data(self, **kwargs):\\n        context = super(Shu_ye_zhu_she_UpdateView, self).get_context_data(**kwargs)\\n        operation_proc = get_object_or_404(OperationProc, id=kwargs['id'])\\n        customer = operation_proc.customer\\n        base_form = A6203_ModelForm(instance=A6203.objects.get(customer=1), prefix=\\\"base_form\\\")\\n        if self.request.method == 'POST':\\n            shu_ye_zhu_she_dan_form = Shu_ye_zhu_she_dan_ModelForm(self.request.POST, prefix=\\\"shu_ye_zhu_she_dan_form\\\")\\n            # 构造作业完成消息参数\\n            self.send_operand_finished(kwargs)\\n            return redirect(reverse('index'))\\n        else:\\n            shu_ye_zhu_she_dan_form = Shu_ye_zhu_she_dan_ModelForm(instance=Shu_ye_zhu_she_dan.objects.get(pid=kwargs['id']), prefix=\\\"shu_ye_zhu_she_dan_form\\\")\\n            # 构造作业开始消息参数\\n            self.send_operand_started(kwargs['id'])\\n        # context\\n        context['base_form'] = base_form\\n        context['shu_ye_zhu_she_dan_form'] = shu_ye_zhu_she_dan_form\\n        context['user'] = self.request.user\\n        return context\\n\\n    def form_valid(self, form):\\n        context = self.get_context_data()\\n        customer = Customer.objects.get(user=context['user'])\\n        operator = Staff.objects.get(user=context['user'])\\n        # form_valid\\n        f = context['shu_ye_zhu_she_dan_form'].save(commit=False)\\n        f.customer = customer\\n        f.operator = operator\\n        f.save()\\n        return super(Shu_ye_zhu_she_CreateView, self).form_valid(form)\\n\", \"urls\": \"\\n    path('shu_ye_zhu_she/create', Shu_ye_zhu_she_CreateView.as_view(), name='shu_ye_zhu_she_create_url'),\\n    path('shu_ye_zhu_she/<int:id>/update', Shu_ye_zhu_she_UpdateView.as_view(), name='shu_ye_zhu_she_update_url'),\", \"templates\": [{\"shu_ye_zhu_she_create.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'shu_ye_zhu_she_create_url' %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>输液注射单</h5>\\n            {{ shu_ye_zhu_she_dan_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('shu_ye_zhu_she_dan_form')\\\" />\\n    {% endblock %}\\n    \"}, {\"shu_ye_zhu_she_update.html\": \"{% extends \\\"base.html\\\" %}\\n    {% block content %}\\n    \\n        <form action='' method='GET' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>个人基本信息</h5>\\n            {{ base_form.as_table }}\\n        </form>\\n        <hr><form action={% url 'shu_ye_zhu_she_update_url' id %} method='POST' enctype='multipart/form-data'> \\n            {% csrf_token %}                \\n            <h5>输液注射单</h5>\\n            {{ shu_ye_zhu_she_dan_form.as_p }}\\n        <hr>\\n        </form>\\n        <input type=\\\"submit\\\" value=\\\"完成服务\\\" onclick=\\\"formSave('shu_ye_zhu_she_dan_form')\\\" />\\n    {% endblock %}\\n    \"}], \"models\": \"class Shu_ye_zhu_she(HsscFormModel):\\n    characterfield_name = models.CharField(max_length=255, null=True, blank=True, verbose_name='姓名')\\n    characterfield_gender = models.CharField(max_length=255, null=True, blank=True, verbose_name='性别')\\n    characterfield_age = models.CharField(max_length=255, null=True, blank=True, verbose_name='年龄')\\n    characterfield_contact_address = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系地址')\\n    characterfield_contact_number = models.CharField(max_length=255, null=True, blank=True, verbose_name='联系电话')\\n    boolfield_yao_pin_gui_ge = models.CharField(max_length=255, null=True, blank=True, verbose_name='药品规格')\\n    boolfield_yong_yao_zhou_qi = models.CharField(max_length=255, null=True, blank=True, verbose_name='用药疗程')\\n    boolfield_chang_yong_chu_fang_liang = models.CharField(max_length=255, null=True, blank=True, verbose_name='常用处方量')\\n    boolfield_zhi_xing_qian_ming = models.CharField(max_length=255, null=True, blank=True, verbose_name='执行签名')\\n    boolfield_fu_yong_pin_ci = models.CharField(max_length=255, null=True, blank=True, verbose_name='用药频次')\\n    boolfield_zhu_she_ri_qi = models.DateTimeField(null=True, blank=True, verbose_name='注射日期')\\n    relatedfield_drug_name = models.ManyToManyField(Medicine, related_name='medicine_for_relatedfield_drug_name_shu_ye_zhu_she', verbose_name='药品名称')\\n\\n    class Meta:\\n        verbose_name = '输液注射'\\n        verbose_name_plural = verbose_name\\n\\n    def __str__(self):\\n        return self.customer.name\\n\\n        \\n\\n\", \"admin\": \"\\nclass Shu_ye_zhu_sheAdmin(HsscFormAdmin):\\n    fieldsets = ((\\\"基本信息\\\", {\\\"fields\\\": ((\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ),)}), \\n        (\\\"输液注射单\\\", {\\\"fields\\\": (\\\"boolfield_yao_pin_gui_ge\\\", \\\"boolfield_yong_yao_zhou_qi\\\", \\\"boolfield_chang_yong_chu_fang_liang\\\", \\\"boolfield_zhi_xing_qian_ming\\\", \\\"boolfield_fu_yong_pin_ci\\\", \\\"boolfield_zhu_she_ri_qi\\\", \\\"relatedfield_drug_name\\\", )}), )\\n    autocomplete_fields = [\\\"relatedfield_drug_name\\\", ]\\n    readonly_fields = [\\\"characterfield_name\\\", \\\"characterfield_gender\\\", \\\"characterfield_age\\\", \\\"characterfield_contact_address\\\", \\\"characterfield_contact_number\\\", ]\\nadmin.site.register(Shu_ye_zhu_she, Shu_ye_zhu_sheAdmin)\\nclinic_site.register(Shu_ye_zhu_she, Shu_ye_zhu_sheAdmin)\\n\"}",
            "buessiness_forms": [
                "3e88f758-c9ef-11ec-b369-168d53e8234e"
            ],
            "role": [
                "de194c50-9aa1-11ec-bde1-8a6e55faf877"
            ]
        },
        {
            "label": "居民基本信息调查",
            "name": "ju_min_ji_ben_xin_xi_diao_cha",
            "hssc_id": "d090a8a8-cb7f-11ec-8161-aa5274efe6de",
            "pym": "jmjbxxdc",
            "name_icpc": null,
            "managed_entity": "de87e7d2-9aa1-11ec-bde1-8a6e55faf877",
            "priority": 3,
            "is_system_service": false,
            "history_services_display": 0,
            "enable_queue_counter": true,
            "suppliers": null,
            "not_suitable": null,
            "execution_time_frame": null,
            "awaiting_time_frame": null,
            "working_hours": null,
            "frequency": null,
            "cost": null,
            "load_feedback": false,
            "resource_materials": null,
            "resource_devices": null,
            "resource_knowledge": null,
            "script": null,
            "buessiness_forms": [
                "0c0f81b8-9e23-11ec-aa2c-fe35a7065cdd"
            ],
            "role": [
                "de18f0fc-9aa1-11ec-bde1-8a6e55faf877",
                "de194c50-9aa1-11ec-bde1-8a6e55faf877",
                "de1992d2-9aa1-11ec-bde1-8a6e55faf877",
                "de19d6a2-9aa1-11ec-bde1-8a6e55faf877",
                "de1a6f7c-9aa1-11ec-bde1-8a6e55faf877",
                "de1ab716-9aa1-11ec-bde1-8a6e55faf877",
                "de1b05cc-9aa1-11ec-bde1-8a6e55faf877",
                "de1b4cc6-9aa1-11ec-bde1-8a6e55faf877",
                "de1b9046-9aa1-11ec-bde1-8a6e55faf877",
                "de1bcda4-9aa1-11ec-bde1-8a6e55faf877",
                "de1c1052-9aa1-11ec-bde1-8a6e55faf877",
                "de1c5a4e-9aa1-11ec-bde1-8a6e55faf877",
                "de1ca0c6-9aa1-11ec-bde1-8a6e55faf877",
                "de1ce450-9aa1-11ec-bde1-8a6e55faf877",
                "de1d24ec-9aa1-11ec-bde1-8a6e55faf877"
            ]
        }
    ],
    "buessinessformssetting": [
        {
            "label": null,
            "name": null,
            "hssc_id": "8ac3b96c-ab1f-11ec-8223-32f453b6622c",
            "service": "e0305c18-9aa1-11ec-bde1-8a6e55faf877",
            "buessiness_form": "0ce117aa-9e23-11ec-aa2c-fe35a7065cdd",
            "is_list": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "8ac471c2-ab1f-11ec-8223-32f453b6622c",
            "service": "e035d648-9aa1-11ec-bde1-8a6e55faf877",
            "buessiness_form": "0d137dbc-9e23-11ec-aa2c-fe35a7065cdd",
            "is_list": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "8ac50a4c-ab1f-11ec-8223-32f453b6622c",
            "service": "e0371aa8-9aa1-11ec-bde1-8a6e55faf877",
            "buessiness_form": "0d1b5014-9e23-11ec-aa2c-fe35a7065cdd",
            "is_list": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "8ac5ac90-ab1f-11ec-8223-32f453b6622c",
            "service": "e0385d3c-9aa1-11ec-bde1-8a6e55faf877",
            "buessiness_form": "0cd1dcea-9e23-11ec-aa2c-fe35a7065cdd",
            "is_list": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "8ac64f06-ab1f-11ec-8223-32f453b6622c",
            "service": "e0398a04-9aa1-11ec-bde1-8a6e55faf877",
            "buessiness_form": "0c620622-9e23-11ec-aa2c-fe35a7065cdd",
            "is_list": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "8ac6f0c8-ab1f-11ec-8223-32f453b6622c",
            "service": "e03abda2-9aa1-11ec-bde1-8a6e55faf877",
            "buessiness_form": "0d22201a-9e23-11ec-aa2c-fe35a7065cdd",
            "is_list": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "8ac789de-ab1f-11ec-8223-32f453b6622c",
            "service": "e03bfa96-9aa1-11ec-bde1-8a6e55faf877",
            "buessiness_form": "0d3821bc-9e23-11ec-aa2c-fe35a7065cdd",
            "is_list": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "8ac824ac-ab1f-11ec-8223-32f453b6622c",
            "service": "e03d308c-9aa1-11ec-bde1-8a6e55faf877",
            "buessiness_form": "0c82d69a-9e23-11ec-aa2c-fe35a7065cdd",
            "is_list": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "8ac8bb9c-ab1f-11ec-8223-32f453b6622c",
            "service": "e03e65ba-9aa1-11ec-bde1-8a6e55faf877",
            "buessiness_form": "0c89031c-9e23-11ec-aa2c-fe35a7065cdd",
            "is_list": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "8ac95d86-ab1f-11ec-8223-32f453b6622c",
            "service": "e03f9d54-9aa1-11ec-bde1-8a6e55faf877",
            "buessiness_form": "0c75d8a0-9e23-11ec-aa2c-fe35a7065cdd",
            "is_list": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "8ac9f822-ab1f-11ec-8223-32f453b6622c",
            "service": "e040d160-9aa1-11ec-bde1-8a6e55faf877",
            "buessiness_form": "0c7bdb06-9e23-11ec-aa2c-fe35a7065cdd",
            "is_list": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "8acaa0ec-ab1f-11ec-8223-32f453b6622c",
            "service": "e0420c06-9aa1-11ec-bde1-8a6e55faf877",
            "buessiness_form": "0ce866ae-9e23-11ec-aa2c-fe35a7065cdd",
            "is_list": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "8acb3e9e-ab1f-11ec-8223-32f453b6622c",
            "service": "1a3b2382-9b67-11ec-94eb-022c611b2490",
            "buessiness_form": "0c704264-9e23-11ec-aa2c-fe35a7065cdd",
            "is_list": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "8acbe6a0-ab1f-11ec-8223-32f453b6622c",
            "service": "66859d9c-aa55-11ec-9f15-ee7ade4bced6",
            "buessiness_form": "bbf2ba74-aa48-11ec-8f0c-ee7ade4bced6",
            "is_list": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "95834332-ab23-11ec-bf5e-1ac10aeebbc4",
            "service": "9582b822-ab23-11ec-bf5e-1ac10aeebbc4",
            "buessiness_form": "0be59eac-9e23-11ec-aa2c-fe35a7065cdd",
            "is_list": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "95836b3c-ab23-11ec-bf5e-1ac10aeebbc4",
            "service": "9582b822-ab23-11ec-bf5e-1ac10aeebbc4",
            "buessiness_form": "0b54db10-9e23-11ec-aa2c-fe35a7065cdd",
            "is_list": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "9583a11a-ab23-11ec-bf5e-1ac10aeebbc4",
            "service": "9582b822-ab23-11ec-bf5e-1ac10aeebbc4",
            "buessiness_form": "0b96f9f0-9e23-11ec-aa2c-fe35a7065cdd",
            "is_list": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "9583c802-ab23-11ec-bf5e-1ac10aeebbc4",
            "service": "9582b822-ab23-11ec-bf5e-1ac10aeebbc4",
            "buessiness_form": "0beb43fc-9e23-11ec-aa2c-fe35a7065cdd",
            "is_list": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "9583efc6-ab23-11ec-bf5e-1ac10aeebbc4",
            "service": "9582b822-ab23-11ec-bf5e-1ac10aeebbc4",
            "buessiness_form": "0ca96526-9e23-11ec-aa2c-fe35a7065cdd",
            "is_list": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "95841c26-ab23-11ec-bf5e-1ac10aeebbc4",
            "service": "9582b822-ab23-11ec-bf5e-1ac10aeebbc4",
            "buessiness_form": "0ba83c56-9e23-11ec-aa2c-fe35a7065cdd",
            "is_list": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "9584444e-ab23-11ec-bf5e-1ac10aeebbc4",
            "service": "9582b822-ab23-11ec-bf5e-1ac10aeebbc4",
            "buessiness_form": "0ba2ba9c-9e23-11ec-aa2c-fe35a7065cdd",
            "is_list": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "95846a14-ab23-11ec-bf5e-1ac10aeebbc4",
            "service": "9582b822-ab23-11ec-bf5e-1ac10aeebbc4",
            "buessiness_form": "0b5c89be-9e23-11ec-aa2c-fe35a7065cdd",
            "is_list": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "958491c4-ab23-11ec-bf5e-1ac10aeebbc4",
            "service": "9582b822-ab23-11ec-bf5e-1ac10aeebbc4",
            "buessiness_form": "0b648650-9e23-11ec-aa2c-fe35a7065cdd",
            "is_list": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "9584b91a-ab23-11ec-bf5e-1ac10aeebbc4",
            "service": "9582b822-ab23-11ec-bf5e-1ac10aeebbc4",
            "buessiness_form": "0b787836-9e23-11ec-aa2c-fe35a7065cdd",
            "is_list": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "9584e11a-ab23-11ec-bf5e-1ac10aeebbc4",
            "service": "9582b822-ab23-11ec-bf5e-1ac10aeebbc4",
            "buessiness_form": "0b6e02b6-9e23-11ec-aa2c-fe35a7065cdd",
            "is_list": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "95850794-ab23-11ec-bf5e-1ac10aeebbc4",
            "service": "9582b822-ab23-11ec-bf5e-1ac10aeebbc4",
            "buessiness_form": "0b86f50a-9e23-11ec-aa2c-fe35a7065cdd",
            "is_list": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "43a1c326-b092-11ec-9cae-5ed0e34457d3",
            "service": "43a1842e-b092-11ec-9cae-5ed0e34457d3",
            "buessiness_form": "2abcc130-b092-11ec-9cae-5ed0e34457d3",
            "is_list": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "eadb09e4-b354-11ec-b38b-468daa7d16bf",
            "service": "e0317224-9aa1-11ec-bde1-8a6e55faf877",
            "buessiness_form": "0c314e38-9e23-11ec-aa2c-fe35a7065cdd",
            "is_list": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "f766705e-b354-11ec-b38b-468daa7d16bf",
            "service": "e03291f4-9aa1-11ec-bde1-8a6e55faf877",
            "buessiness_form": "0bcb1fc8-9e23-11ec-aa2c-fe35a7065cdd",
            "is_list": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "1900897a-b355-11ec-941d-468daa7d16bf",
            "service": "e032db46-9aa1-11ec-bde1-8a6e55faf877",
            "buessiness_form": "0bcb1fc8-9e23-11ec-aa2c-fe35a7065cdd",
            "is_list": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "ba15c8b6-b6d9-11ec-8425-0ebea05fc526",
            "service": "ba1582e8-b6d9-11ec-8425-0ebea05fc526",
            "buessiness_form": "0bb0c86c-9e23-11ec-aa2c-fe35a7065cdd",
            "is_list": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "ba15ff3e-b6d9-11ec-8425-0ebea05fc526",
            "service": "ba1582e8-b6d9-11ec-8425-0ebea05fc526",
            "buessiness_form": "0bd6215c-9e23-11ec-aa2c-fe35a7065cdd",
            "is_list": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "b6f627c4-b6da-11ec-8121-0ebea05fc526",
            "service": "b6f4ecba-b6da-11ec-8121-0ebea05fc526",
            "buessiness_form": "0c940c94-9e23-11ec-aa2c-fe35a7065cdd",
            "is_list": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "cb704180-b6da-11ec-8425-0ebea05fc526",
            "service": "cb6fe794-b6da-11ec-8425-0ebea05fc526",
            "buessiness_form": "0c3bd51a-9e23-11ec-aa2c-fe35a7065cdd",
            "is_list": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "dc935f42-b6da-11ec-8425-0ebea05fc526",
            "service": "dc931be0-b6da-11ec-8425-0ebea05fc526",
            "buessiness_form": "0c440b9a-9e23-11ec-aa2c-fe35a7065cdd",
            "is_list": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "9fb50db6-b6dd-11ec-8425-0ebea05fc526",
            "service": "9fb42996-b6dd-11ec-8425-0ebea05fc526",
            "buessiness_form": "0c7bdb06-9e23-11ec-aa2c-fe35a7065cdd",
            "is_list": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "7ec91ab6-b89a-11ec-8bd3-322924405212",
            "service": "7ec806da-b89a-11ec-8bd3-322924405212",
            "buessiness_form": "d0ce09ec-aa45-11ec-9f15-ee7ade4bced6",
            "is_list": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "9b1a931c-c9f1-11ec-b452-168d53e8234e",
            "service": "9b199d36-c9f1-11ec-b452-168d53e8234e",
            "buessiness_form": "3e88f758-c9ef-11ec-b369-168d53e8234e",
            "is_list": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "c5157876-cab4-11ec-b358-8e39d789b675",
            "service": "e0420c06-9aa1-11ec-bde1-8a6e55faf877",
            "buessiness_form": "0bd6215c-9e23-11ec-aa2c-fe35a7065cdd",
            "is_list": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "c518b1d0-cab4-11ec-b358-8e39d789b675",
            "service": "e0420c06-9aa1-11ec-bde1-8a6e55faf877",
            "buessiness_form": "0bb0c86c-9e23-11ec-aa2c-fe35a7065cdd",
            "is_list": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "c518e36c-cab4-11ec-b358-8e39d789b675",
            "service": "e0420c06-9aa1-11ec-bde1-8a6e55faf877",
            "buessiness_form": "0c940c94-9e23-11ec-aa2c-fe35a7065cdd",
            "is_list": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "c5190cb6-cab4-11ec-b358-8e39d789b675",
            "service": "e0420c06-9aa1-11ec-bde1-8a6e55faf877",
            "buessiness_form": "0c3bd51a-9e23-11ec-aa2c-fe35a7065cdd",
            "is_list": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "d09197cc-cb7f-11ec-8161-aa5274efe6de",
            "service": "d090a8a8-cb7f-11ec-8161-aa5274efe6de",
            "buessiness_form": "0c0f81b8-9e23-11ec-aa2c-fe35a7065cdd",
            "is_list": false
        }
    ],
    "servicepackage": [
        {
            "label": "门诊服务",
            "name": "men_zhen_fu_wu",
            "hssc_id": "e4fbb6c6-aa54-11ec-8f0c-ee7ade4bced6",
            "pym": "mzfw",
            "name_icpc": null,
            "begin_time_setting": 0,
            "duration": null,
            "execution_time_frame": null,
            "awaiting_time_frame": null,
            "services": []
        },
        {
            "label": "糖尿病早期监测服务",
            "name": "tang_niao_bing_zao_qi_jian_ce_fu_wu",
            "hssc_id": "bb88332a-aa57-11ec-8f0c-ee7ade4bced6",
            "pym": "tnbzqjcfw",
            "name_icpc": null,
            "begin_time_setting": 0,
            "duration": "90 days, 0:00:00",
            "execution_time_frame": null,
            "awaiting_time_frame": null,
            "services": []
        }
    ],
    "servicepackagedetail": [
        {
            "label": null,
            "name": null,
            "hssc_id": "f25e4dde-af6b-11ec-ba68-4889e7cf38c9",
            "pym": null,
            "servicepackage": "e4fbb6c6-aa54-11ec-8f0c-ee7ade4bced6",
            "service": null,
            "cycle_option": 0,
            "cycle_times": 1,
            "reference_start_tim": null,
            "duration": null,
            "check_awaiting_timeout": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "f25e9c9e-af6b-11ec-a47c-4889e7cf38c9",
            "pym": null,
            "servicepackage": "e4fbb6c6-aa54-11ec-8f0c-ee7ade4bced6",
            "service": null,
            "cycle_option": 0,
            "cycle_times": 1,
            "reference_start_tim": null,
            "duration": null,
            "check_awaiting_timeout": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "f25e9c9f-af6b-11ec-8edc-4889e7cf38c9",
            "pym": null,
            "servicepackage": "e4fbb6c6-aa54-11ec-8f0c-ee7ade4bced6",
            "service": null,
            "cycle_option": 0,
            "cycle_times": 1,
            "reference_start_tim": null,
            "duration": null,
            "check_awaiting_timeout": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "8f4e9e6d-af6c-11ec-a482-4889e7cf38c9",
            "pym": null,
            "servicepackage": "bb88332a-aa57-11ec-8f0c-ee7ade4bced6",
            "service": null,
            "cycle_option": 1,
            "cycle_times": 2,
            "reference_start_tim": null,
            "duration": "30 days, 0:00:00",
            "check_awaiting_timeout": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "8f4ec580-af6c-11ec-a6fe-4889e7cf38c9",
            "pym": null,
            "servicepackage": "bb88332a-aa57-11ec-8f0c-ee7ade4bced6",
            "service": null,
            "cycle_option": 1,
            "cycle_times": 1,
            "reference_start_tim": "30 days, 0:00:00",
            "duration": "60 days, 0:00:00",
            "check_awaiting_timeout": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "8f4ec581-af6c-11ec-bcc5-4889e7cf38c9",
            "pym": null,
            "servicepackage": "bb88332a-aa57-11ec-8f0c-ee7ade4bced6",
            "service": null,
            "cycle_option": 0,
            "cycle_times": 3,
            "reference_start_tim": "30 days, 0:00:00",
            "duration": "90 days, 0:00:00",
            "check_awaiting_timeout": false
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "8f4ec582-af6c-11ec-aa15-4889e7cf38c9",
            "pym": null,
            "servicepackage": "bb88332a-aa57-11ec-8f0c-ee7ade4bced6",
            "service": null,
            "cycle_option": 0,
            "cycle_times": 1,
            "reference_start_tim": "90 days, 0:00:00",
            "duration": "90 days, 0:00:00",
            "check_awaiting_timeout": false
        }
    ],
    "systemoperand": [
        {
            "label": "推荐后续作业",
            "name": "recommend_next_operation",
            "hssc_id": "e0dc2719-a42f-11ec-905b-4889e7cf38c9",
            "func": "RECOMMEND_NEXT_OPERATION",
            "parameters": "operand_id",
            "description": "",
            "applicable": 0
        },
        {
            "label": "生成后续作业",
            "name": "create_next_operation",
            "hssc_id": "e0dd3887-a42f-11ec-85a9-4889e7cf38c9",
            "func": "CREATE_NEXT_OPERATION",
            "parameters": "operand_id",
            "description": "",
            "applicable": 0
        },
        {
            "label": "推荐后续服务",
            "name": "recommend_next_service",
            "hssc_id": "e0ddd4ae-a42f-11ec-94e2-4889e7cf38c9",
            "func": "RECOMMEND_NEXT_SERVICE",
            "parameters": "service_id",
            "description": "",
            "applicable": 1
        },
        {
            "label": "生成后续服务",
            "name": "create_next_service",
            "hssc_id": "e0dee611-a42f-11ec-8e78-4889e7cf38c9",
            "func": "CREATE_NEXT_SERVICE",
            "parameters": "service_id",
            "description": "",
            "applicable": 1
        },
        {
            "label": "违规提示",
            "name": "prompt_violate_business_rule",
            "hssc_id": "e0dfa946-a42f-11ec-848a-4889e7cf38c9",
            "func": "VIOLATION_ALERT",
            "parameters": "violation_info",
            "description": "",
            "applicable": 3
        },
        {
            "label": "发送提醒消息",
            "name": "send_notification",
            "hssc_id": "e0e045ac-a42f-11ec-93c3-4889e7cf38c9",
            "func": "SEND_NOTIFICATION",
            "parameters": "user_id, message_type, message_content",
            "description": "",
            "applicable": 3
        }
    ],
    "eventrule": [
        {
            "label": "完成",
            "name": "completed",
            "hssc_id": "e04e6e6a-a46f-11ec-a15f-8eb5dc41bbac",
            "pym": "wc",
            "description": "完成",
            "detection_scope": 1,
            "weight": 1,
            "expression": "completed",
            "expression_fields": null
        },
        {
            "label": "一型糖尿病诊断规则",
            "name": "wen_zhen_fa_xian_tang_niao_bing_zheng_zhuang",
            "hssc_id": "a922d698-abda-11ec-a639-1ac10aeebbc4",
            "pym": "yxtnbzdgz",
            "description": "糖尿病症状 == {'烦渴','多尿','体重减轻'}",
            "detection_scope": 1,
            "weight": 1,
            "expression": "len({'烦渴','多尿','体重减轻'}.intersection(boolfield_tang_niao_bing_zheng_zhuang )) == 3",
            "expression_fields": "boolfield_tang_niao_bing_zheng_zhuang"
        },
        {
            "label": "二型糖尿病诊断规则",
            "name": "fa_xian_er_lian_tang_niao_bing_zheng_zhuang_qie_xue_tang_chao_biao",
            "hssc_id": "9dd8d736-abdc-11ec-bf5e-1ac10aeebbc4",
            "pym": "extnbzdgz",
            "description": "糖尿病症状 == {‘烦渴’,‘多尿’} and 空腹血糖 >= 7.0 or 糖尿病症状 == {'烦渴','皮肤感染'} and 空腹血糖 >= 7.0 or 糖尿病症状 == {'多尿','皮肤感染'} and 空腹血糖 >= 7.0",
            "detection_scope": 1,
            "weight": 1,
            "expression": "len({'烦渴','多尿','皮肤感染'}.intersection(boolfield_tang_niao_bing_zheng_zhuang))>=2 and numberfield_kong_fu_xue_tang >= 7.0",
            "expression_fields": "boolfield_tang_niao_bing_zheng_zhuang,numberfield_kong_fu_xue_tang,boolfield_tang_niao_bing_zheng_zhuang,numberfield_kong_fu_xue_tang,boolfield_tang_niao_bing_zheng_zhuang,numberfield_kong_fu_xue_tang"
        },
        {
            "label": "糖尿病酮中毒诊断规则",
            "name": "tang_niao_bing_tong_zhong_du_zhen_duan_gui_ze",
            "hssc_id": "711dadc4-abdd-11ec-a639-1ac10aeebbc4",
            "pym": "tnbtzdzdgz",
            "description": "症状 == {'昏睡','呕吐','腹痛'} and 疾病名称 in {'非胰岛素依赖糖尿病','胰岛素依赖糖尿病'} and 尿酮体 == ''阳性''",
            "detection_scope": 1,
            "weight": 1,
            "expression": "len({'昏睡','呕吐','腹痛'}.intersection(relatedfield_symptom_list))==3 and len({'非胰岛素依赖糖尿病','胰岛素依赖糖尿病'}.intersection(relatedfield_disease_name))==1 and len({'阳性'}.intersection(boolfield_tong_ti))==1",
            "expression_fields": "relatedfield_symptom_list,relatedfield_disease_name,boolfield_tong_ti"
        },
        {
            "label": "高血糖诊断规则",
            "name": "gao_xue_tang_zhen_duan_gui_ze",
            "hssc_id": "35f1165a-abe2-11ec-bf5e-1ac10aeebbc4",
            "pym": "gxtzdgz",
            "description": "症状 == ''疲乏'' and 疾病名称 in {'非胰岛素依赖糖尿病','胰岛素依赖糖尿病'}",
            "detection_scope": 1,
            "weight": 1,
            "expression": "len({'疲乏'}.intersection(relatedfield_symptom_list))==1 and len({'非胰岛素依赖糖尿病','胰岛素依赖糖尿病'}.intersection(relatedfield_disease_name))==1",
            "expression_fields": "relatedfield_symptom_list,relatedfield_disease_name"
        },
        {
            "label": "糖尿病肾病诊断规则",
            "name": "tang_niao_bing_shen_bing_zhen_duan_gui_ze",
            "hssc_id": "6909de64-abe2-11ec-a639-1ac10aeebbc4",
            "pym": "tnbsbzdgz",
            "description": "疾病名称 in {'非胰岛素依赖糖尿','胰岛素依赖糖尿病'} and 尿微量白蛋白 > 20",
            "detection_scope": 1,
            "weight": 1,
            "expression": "len({'非胰岛素依赖糖尿','胰岛素依赖糖尿病'}.intersection(relatedfield_disease_name))==1 and A3501>20",
            "expression_fields": "relatedfield_disease_name,A3501"
        },
        {
            "label": "糖尿病血管病变周围神经炎诊断规则",
            "name": "tang_niao_bing_xue_guan_bing_bian_zhou_wei_shen_jing_yan_zhen_duan_gui_ze",
            "hssc_id": "e3563d98-abe2-11ec-bf5e-1ac10aeebbc4",
            "pym": "tnbxgbbzwsjyzdgz",
            "description": "疾病名称 in {'非胰岛素依赖糖尿病', '胰岛素依赖糖尿病'} and 症状 == '’足痛‘'",
            "detection_scope": 1,
            "weight": 1,
            "expression": "len({'非胰岛素依赖糖尿','胰岛素依赖糖尿病'}.intersection(relatedfield_disease_name))==1 and len({'足痛'}.intersection(relatedfield_symptom_list))==1",
            "expression_fields": "relatedfield_disease_name,relatedfield_symptom_list"
        },
        {
            "label": "一项糖尿病症状",
            "name": "yi_xiang_tang_niao_bing_zheng_zhuang",
            "hssc_id": "05d0c7fa-afc9-11ec-9129-925bd788f441",
            "pym": "yxtnbzz",
            "description": "症状 in {'烦渴','多尿','多食','乏力','体重减轻','体重增加','皮肤感染'}",
            "detection_scope": 1,
            "weight": 1,
            "expression": "len({'烦渴','多尿','多食','乏力','体重减轻','体重增加','皮肤感染'}.intersection(relatedfield_symptom_list)) == 1",
            "expression_fields": "relatedfield_symptom_list"
        },
        {
            "label": "两项糖尿病症状",
            "name": "liang_xiang_tang_niao_bing_zheng_zhuang",
            "hssc_id": "1013b7c6-afca-11ec-b226-925bd788f441",
            "pym": "lxtnbzz",
            "description": "症状 == {'烦渴','多尿'} or 症状 == {'烦渴','体重增加'} or 症状 == {'多尿','皮肤感染'} or 症状 == {'烦渴','皮肤感染'}",
            "detection_scope": 1,
            "weight": 1,
            "expression": "len({'烦渴','多尿','体重增加','皮肤感染'}.intersection(relatedfield_symptom_list)) >= 2",
            "expression_fields": "relatedfield_symptom_list,relatedfield_symptom_list,relatedfield_symptom_list,relatedfield_symptom_list"
        },
        {
            "label": "空腹血糖超过正常值",
            "name": "kong_fu_xue_tang_chao_guo_zheng_chang_zhi",
            "hssc_id": "3c360bfe-b6d4-11ec-8425-0ebea05fc526",
            "pym": "kfxtcgzcz",
            "description": "空腹血糖 >= 7.0",
            "detection_scope": 1,
            "weight": 1,
            "expression": "numberfield_kong_fu_xue_tang >= 7.0",
            "expression_fields": "numberfield_kong_fu_xue_tang"
        },
        {
            "label": "糖化血红蛋白超出正常值",
            "name": "tang_hua_xue_hong_dan_bai_chao_chu_zheng_chang_zhi",
            "hssc_id": "9bfb4a40-b6d4-11ec-8121-0ebea05fc526",
            "pym": "thxhdbcczcz",
            "description": "糖化血红蛋白 > 6",
            "detection_scope": 1,
            "weight": 1,
            "expression": "numberfield_tang_hua_xue_hong_dan_bai > 6",
            "expression_fields": "numberfield_tang_hua_xue_hong_dan_bai"
        },
        {
            "label": "糖尿病不适用药品规则",
            "name": "tang_niao_bing_bu_shi_yong_yao_pin_gui_ze",
            "hssc_id": "ebbdfb30-b6d5-11ec-8121-0ebea05fc526",
            "pym": "tnbbsyypgz",
            "description": "疾病名称 in {'非胰岛素依赖糖尿病','胰岛素依赖糖尿病'} and 药品名称 == {'5%葡萄糖注射液','止咳糖浆'}",
            "detection_scope": 1,
            "weight": 1,
            "expression": "len({'非胰岛素依赖糖尿病','胰岛素依赖糖尿病'}.intersection(relatedfield_disease_name))==1 and len({'5%葡萄糖注射液','止咳糖浆'}.intersection(relatedfield_drug_name))==1",
            "expression_fields": "relatedfield_disease_name,relatedfield_drug_name"
        },
        {
            "label": "开具注射类处方",
            "name": "kai_ju_zhu_she_lei_chu_fang",
            "hssc_id": "302378de-c9f2-11ec-b369-168d53e8234e",
            "pym": "kjzslcf",
            "description": "用药途径 == ''注射类''",
            "detection_scope": 1,
            "weight": 1,
            "expression": "len({'注射类'}.intersection(boolfield_yong_yao_tu_jing)) == 1",
            "expression_fields": "boolfield_yong_yao_tu_jing"
        }
    ],
    "servicespec": [
        {
            "label": "常规规则",
            "name": "chang_gui_gui_ze",
            "hssc_id": "7250f7e8-b6df-11ec-8121-0ebea05fc526"
        }
    ],
    "servicerule": [
        {
            "label": "注册完成",
            "name": "user_registry_completed",
            "hssc_id": "7251461c-b6df-11ec-8121-0ebea05fc526",
            "service": "e0317224-9aa1-11ec-bde1-8a6e55faf877",
            "event_rule": "e04e6e6a-a46f-11ec-a15f-8eb5dc41bbac",
            "system_operand": "e0dee611-a42f-11ec-8e78-4889e7cf38c9",
            "next_service": "9582b822-ab23-11ec-bf5e-1ac10aeebbc4",
            "passing_data": 2,
            "complete_feedback": 0,
            "reminders": 0,
            "message": null,
            "interval_rule": null,
            "interval_time": null,
            "is_active": true,
            "service_spec": "7250f7e8-b6df-11ec-8121-0ebea05fc526"
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "72518da2-b6df-11ec-8121-0ebea05fc526",
            "service": "e03e65ba-9aa1-11ec-bde1-8a6e55faf877",
            "event_rule": "e04e6e6a-a46f-11ec-a15f-8eb5dc41bbac",
            "system_operand": "e0dee611-a42f-11ec-8e78-4889e7cf38c9",
            "next_service": "1a3b2382-9b67-11ec-94eb-022c611b2490",
            "passing_data": 2,
            "complete_feedback": 0,
            "reminders": 1,
            "message": null,
            "interval_rule": null,
            "interval_time": null,
            "is_active": true,
            "service_spec": "7250f7e8-b6df-11ec-8121-0ebea05fc526"
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "0e72b912-b6e6-11ec-8121-0ebea05fc526",
            "service": "1a3b2382-9b67-11ec-94eb-022c611b2490",
            "event_rule": "05d0c7fa-afc9-11ec-9129-925bd788f441",
            "system_operand": "e0ddd4ae-a42f-11ec-94e2-4889e7cf38c9",
            "next_service": "e035d648-9aa1-11ec-bde1-8a6e55faf877",
            "passing_data": 2,
            "complete_feedback": 0,
            "reminders": 0,
            "message": null,
            "interval_rule": null,
            "interval_time": null,
            "is_active": true,
            "service_spec": "7250f7e8-b6df-11ec-8121-0ebea05fc526"
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "0e73283e-b6e6-11ec-8121-0ebea05fc526",
            "service": "e035d648-9aa1-11ec-bde1-8a6e55faf877",
            "event_rule": "e04e6e6a-a46f-11ec-a15f-8eb5dc41bbac",
            "system_operand": "e0dee611-a42f-11ec-8e78-4889e7cf38c9",
            "next_service": "e0371aa8-9aa1-11ec-bde1-8a6e55faf877",
            "passing_data": 2,
            "complete_feedback": 1,
            "reminders": 1,
            "message": null,
            "interval_rule": null,
            "interval_time": null,
            "is_active": true,
            "service_spec": "7250f7e8-b6df-11ec-8121-0ebea05fc526"
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "0e73bb96-b6e6-11ec-8121-0ebea05fc526",
            "service": "e0371aa8-9aa1-11ec-bde1-8a6e55faf877",
            "event_rule": "e04e6e6a-a46f-11ec-a15f-8eb5dc41bbac",
            "system_operand": "e0dee611-a42f-11ec-8e78-4889e7cf38c9",
            "next_service": "e0385d3c-9aa1-11ec-bde1-8a6e55faf877",
            "passing_data": 2,
            "complete_feedback": 0,
            "reminders": 0,
            "message": null,
            "interval_rule": null,
            "interval_time": null,
            "is_active": true,
            "service_spec": "7250f7e8-b6df-11ec-8121-0ebea05fc526"
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "0e74bae6-b6e6-11ec-8121-0ebea05fc526",
            "service": "e0371aa8-9aa1-11ec-bde1-8a6e55faf877",
            "event_rule": "e04e6e6a-a46f-11ec-a15f-8eb5dc41bbac",
            "system_operand": "e0dee611-a42f-11ec-8e78-4889e7cf38c9",
            "next_service": "e03d308c-9aa1-11ec-bde1-8a6e55faf877",
            "passing_data": 2,
            "complete_feedback": 0,
            "reminders": 0,
            "message": null,
            "interval_rule": null,
            "interval_time": null,
            "is_active": true,
            "service_spec": "7250f7e8-b6df-11ec-8121-0ebea05fc526"
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "0e768132-b6e6-11ec-8121-0ebea05fc526",
            "service": "e0385d3c-9aa1-11ec-bde1-8a6e55faf877",
            "event_rule": "e04e6e6a-a46f-11ec-a15f-8eb5dc41bbac",
            "system_operand": "e0dee611-a42f-11ec-8e78-4889e7cf38c9",
            "next_service": "e03f9d54-9aa1-11ec-bde1-8a6e55faf877",
            "passing_data": 2,
            "complete_feedback": 0,
            "reminders": 1,
            "message": null,
            "interval_rule": null,
            "interval_time": null,
            "is_active": true,
            "service_spec": "7250f7e8-b6df-11ec-8121-0ebea05fc526"
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "0e7754c2-b6e6-11ec-8121-0ebea05fc526",
            "service": "e03f9d54-9aa1-11ec-bde1-8a6e55faf877",
            "event_rule": "05d0c7fa-afc9-11ec-9129-925bd788f441",
            "system_operand": "e0ddd4ae-a42f-11ec-94e2-4889e7cf38c9",
            "next_service": "e0398a04-9aa1-11ec-bde1-8a6e55faf877",
            "passing_data": 2,
            "complete_feedback": 0,
            "reminders": 1,
            "message": null,
            "interval_rule": null,
            "interval_time": null,
            "is_active": true,
            "service_spec": "7250f7e8-b6df-11ec-8121-0ebea05fc526"
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "0e77df14-b6e6-11ec-8121-0ebea05fc526",
            "service": "e03f9d54-9aa1-11ec-bde1-8a6e55faf877",
            "event_rule": "1013b7c6-afca-11ec-b226-925bd788f441",
            "system_operand": "e0ddd4ae-a42f-11ec-94e2-4889e7cf38c9",
            "next_service": "cb6fe794-b6da-11ec-8425-0ebea05fc526",
            "passing_data": 2,
            "complete_feedback": 0,
            "reminders": 1,
            "message": null,
            "interval_rule": null,
            "interval_time": null,
            "is_active": true,
            "service_spec": "7250f7e8-b6df-11ec-8121-0ebea05fc526"
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "0e78ae30-b6e6-11ec-8121-0ebea05fc526",
            "service": "e03f9d54-9aa1-11ec-bde1-8a6e55faf877",
            "event_rule": "9dd8d736-abdc-11ec-bf5e-1ac10aeebbc4",
            "system_operand": "e0dee611-a42f-11ec-8e78-4889e7cf38c9",
            "next_service": "9fb42996-b6dd-11ec-8425-0ebea05fc526",
            "passing_data": 2,
            "complete_feedback": 0,
            "reminders": 0,
            "message": null,
            "interval_rule": null,
            "interval_time": null,
            "is_active": false,
            "service_spec": "7250f7e8-b6df-11ec-8121-0ebea05fc526"
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "0e79b41a-b6e6-11ec-8121-0ebea05fc526",
            "service": "e0398a04-9aa1-11ec-bde1-8a6e55faf877",
            "event_rule": "a922d698-abda-11ec-a639-1ac10aeebbc4",
            "system_operand": "e0dee611-a42f-11ec-8e78-4889e7cf38c9",
            "next_service": "e040d160-9aa1-11ec-bde1-8a6e55faf877",
            "passing_data": 2,
            "complete_feedback": 0,
            "reminders": 0,
            "message": null,
            "interval_rule": null,
            "interval_time": null,
            "is_active": true,
            "service_spec": "7250f7e8-b6df-11ec-8121-0ebea05fc526"
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "0e7a029e-b6e6-11ec-8121-0ebea05fc526",
            "service": "9fb42996-b6dd-11ec-8425-0ebea05fc526",
            "event_rule": "e04e6e6a-a46f-11ec-a15f-8eb5dc41bbac",
            "system_operand": "e0ddd4ae-a42f-11ec-94e2-4889e7cf38c9",
            "next_service": "e0305c18-9aa1-11ec-bde1-8a6e55faf877",
            "passing_data": 0,
            "complete_feedback": 0,
            "reminders": 0,
            "message": null,
            "interval_rule": null,
            "interval_time": null,
            "is_active": true,
            "service_spec": "7250f7e8-b6df-11ec-8121-0ebea05fc526"
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "0e7a79f4-b6e6-11ec-8121-0ebea05fc526",
            "service": "e0305c18-9aa1-11ec-bde1-8a6e55faf877",
            "event_rule": "ebbdfb30-b6d5-11ec-8121-0ebea05fc526",
            "system_operand": "e0dfa946-a42f-11ec-848a-4889e7cf38c9",
            "next_service": null,
            "passing_data": 1,
            "complete_feedback": 0,
            "reminders": 1,
            "message": null,
            "interval_rule": null,
            "interval_time": null,
            "is_active": true,
            "service_spec": "7250f7e8-b6df-11ec-8121-0ebea05fc526"
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "0e7ac8dc-b6e6-11ec-8121-0ebea05fc526",
            "service": "9fb42996-b6dd-11ec-8425-0ebea05fc526",
            "event_rule": "e04e6e6a-a46f-11ec-a15f-8eb5dc41bbac",
            "system_operand": "e0ddd4ae-a42f-11ec-94e2-4889e7cf38c9",
            "next_service": "e0420c06-9aa1-11ec-bde1-8a6e55faf877",
            "passing_data": 2,
            "complete_feedback": 0,
            "reminders": 0,
            "message": null,
            "interval_rule": null,
            "interval_time": null,
            "is_active": true,
            "service_spec": "7250f7e8-b6df-11ec-8121-0ebea05fc526"
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "0e7b1198-b6e6-11ec-8121-0ebea05fc526",
            "service": "9fb42996-b6dd-11ec-8425-0ebea05fc526",
            "event_rule": "e04e6e6a-a46f-11ec-a15f-8eb5dc41bbac",
            "system_operand": "e0ddd4ae-a42f-11ec-94e2-4889e7cf38c9",
            "next_service": "e03bfa96-9aa1-11ec-bde1-8a6e55faf877",
            "passing_data": 0,
            "complete_feedback": 0,
            "reminders": 0,
            "message": null,
            "interval_rule": null,
            "interval_time": null,
            "is_active": true,
            "service_spec": "7250f7e8-b6df-11ec-8121-0ebea05fc526"
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "0e7b5a2c-b6e6-11ec-8121-0ebea05fc526",
            "service": "e03bfa96-9aa1-11ec-bde1-8a6e55faf877",
            "event_rule": "e04e6e6a-a46f-11ec-a15f-8eb5dc41bbac",
            "system_operand": "e0dee611-a42f-11ec-8e78-4889e7cf38c9",
            "next_service": "66859d9c-aa55-11ec-9f15-ee7ade4bced6",
            "passing_data": 2,
            "complete_feedback": 0,
            "reminders": 0,
            "message": null,
            "interval_rule": null,
            "interval_time": null,
            "is_active": true,
            "service_spec": "7250f7e8-b6df-11ec-8121-0ebea05fc526"
        },
        {
            "label": null,
            "name": null,
            "hssc_id": "0e7ba6bc-b6e6-11ec-8121-0ebea05fc526",
            "service": "66859d9c-aa55-11ec-9f15-ee7ade4bced6",
            "event_rule": "e04e6e6a-a46f-11ec-a15f-8eb5dc41bbac",
            "system_operand": "e0ddd4ae-a42f-11ec-94e2-4889e7cf38c9",
            "next_service": "e03e65ba-9aa1-11ec-bde1-8a6e55faf877",
            "passing_data": 1,
            "complete_feedback": 0,
            "reminders": 0,
            "message": null,
            "interval_rule": null,
            "interval_time": null,
            "is_active": true,
            "service_spec": "7250f7e8-b6df-11ec-8121-0ebea05fc526"
        },
        {
            "label": "注射类药品治疗规则",
            "name": null,
            "hssc_id": "b4e895fe-c9f2-11ec-b452-168d53e8234e",
            "service": "e0305c18-9aa1-11ec-bde1-8a6e55faf877",
            "event_rule": "302378de-c9f2-11ec-b369-168d53e8234e",
            "system_operand": "e0dee611-a42f-11ec-8e78-4889e7cf38c9",
            "next_service": "9b199d36-c9f1-11ec-b452-168d53e8234e",
            "passing_data": 1,
            "complete_feedback": 1,
            "reminders": 1,
            "message": null,
            "interval_rule": null,
            "interval_time": null,
            "is_active": true,
            "service_spec": "7250f7e8-b6df-11ec-8121-0ebea05fc526"
        },
        {
            "label": "空腹血糖超过正常值",
            "name": null,
            "hssc_id": "474758e8-cce3-11ec-8d9d-6ee4b739d297",
            "service": "cb6fe794-b6da-11ec-8425-0ebea05fc526",
            "event_rule": "9dd8d736-abdc-11ec-bf5e-1ac10aeebbc4",
            "system_operand": "e0dee611-a42f-11ec-8e78-4889e7cf38c9",
            "next_service": "e03f9d54-9aa1-11ec-bde1-8a6e55faf877",
            "passing_data": 1,
            "complete_feedback": 0,
            "reminders": 0,
            "message": null,
            "interval_rule": null,
            "interval_time": null,
            "is_active": true,
            "service_spec": "7250f7e8-b6df-11ec-8121-0ebea05fc526"
        },
        {
            "label": "建档调查规则",
            "name": null,
            "hssc_id": "84bdd33a-cddf-11ec-a675-3eb12b65d002",
            "service": "d090a8a8-cb7f-11ec-8161-aa5274efe6de",
            "event_rule": "e04e6e6a-a46f-11ec-a15f-8eb5dc41bbac",
            "system_operand": "e0ddd4ae-a42f-11ec-94e2-4889e7cf38c9",
            "next_service": "9582b822-ab23-11ec-bf5e-1ac10aeebbc4",
            "passing_data": 0,
            "complete_feedback": 0,
            "reminders": 0,
            "message": null,
            "interval_rule": null,
            "interval_time": null,
            "is_active": true,
            "service_spec": "7250f7e8-b6df-11ec-8121-0ebea05fc526"
        }
    ]
}