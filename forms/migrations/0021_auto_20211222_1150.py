# Generated by Django 3.2.6 on 2021-12-22 03:50

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('icpc', '0001_initial'),
        ('dictionaries', '0002_auto_20211222_1150'),
        ('forms', '0020_auto_20211220_2136'),
    ]

    operations = [
        migrations.CreateModel(
            name='Allergies_history',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relatedfield_drug_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='drug_list_for_relatedfield_drug_name_allergies_history', to='dictionaries.drug_list', verbose_name='药品名称')),
            ],
            options={
                'verbose_name': '过敏史',
                'verbose_name_plural': '过敏史',
            },
        ),
        migrations.CreateModel(
            name='Basic_personal_information',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('characterfield_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='姓名')),
                ('characterfield_identification_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='身份证号码')),
                ('datetimefield_date_of_birth', models.DateTimeField(blank=True, null=True, verbose_name='出生日期')),
                ('characterfield_resident_file_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='居民档案号')),
                ('characterfield_family_address', models.CharField(blank=True, max_length=255, null=True, verbose_name='家庭地址')),
                ('characterfield_contact_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='联系电话')),
                ('characterfield_medical_ic_card_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='医疗ic卡号')),
                ('boolfield_contract_signatory', models.BooleanField(blank=True, null=True, verbose_name='合同签约户')),
                ('relatedfield_blood_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blood_type_for_relatedfield_blood_type_basic_personal_information', to='dictionaries.blood_type', verbose_name='血型')),
                ('relatedfield_education', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='education_for_relatedfield_education_basic_personal_information', to='dictionaries.education', verbose_name='文化程度')),
                ('relatedfield_family_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='icpc1_register_logins_for_relatedfield_family_id_basic_personal_information', to='icpc.icpc1_register_logins', verbose_name='家庭编号')),
                ('relatedfield_family_relationship', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='family_relationship_for_relatedfield_family_relationship_basic_personal_information', to='dictionaries.family_relationship', verbose_name='家庭成员关系')),
                ('relatedfield_gender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gender_for_relatedfield_gender_basic_personal_information', to='dictionaries.gender', verbose_name='性别')),
                ('relatedfield_marital_status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='marital_status_for_relatedfield_marital_status_basic_personal_information', to='dictionaries.marital_status', verbose_name='婚姻状况')),
                ('relatedfield_medical_expenses_burden', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical_expenses_burden_for_relatedfield_medical_expenses_burden_basic_personal_information', to='dictionaries.medical_expenses_burden', verbose_name='医疗费用负担')),
                ('relatedfield_nationality', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nationality_for_relatedfield_nationality_basic_personal_information', to='dictionaries.nationality', verbose_name='民族')),
                ('relatedfield_occupational_status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='occupational_status_for_relatedfield_occupational_status_basic_personal_information', to='dictionaries.occupational_status', verbose_name='职业状况')),
                ('relatedfield_signed_family_doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_list_for_relatedfield_signed_family_doctor_basic_personal_information', to='dictionaries.employee_list', verbose_name='签约家庭医生')),
                ('relatedfield_type_of_residence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='type_of_residence_for_relatedfield_type_of_residence_basic_personal_information', to='dictionaries.type_of_residence', verbose_name='居住类型')),
            ],
            options={
                'verbose_name': '个人基本情况',
                'verbose_name_plural': '个人基本情况',
            },
        ),
        migrations.CreateModel(
            name='Blood_pressure_monitoring',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numberfield_systolic_blood_pressure', models.IntegerField(blank=True, null=True, verbose_name='收缩压')),
                ('numberfield_systolic_blood_pressure_standard_value', models.IntegerField(blank=True, null=True, verbose_name='收缩压标准值')),
                ('numberfield_systolic_blood_pressure_up_limit', models.IntegerField(blank=True, default=139.0, null=True, verbose_name='收缩压上限')),
                ('numberfield_systolic_blood_pressure_down_limit', models.IntegerField(blank=True, default=90.0, null=True, verbose_name='收缩压下限')),
                ('numberfield_diastolic_blood_pressure', models.IntegerField(blank=True, null=True, verbose_name='舒张压')),
                ('numberfield_diastolic_blood_pressure_standard_value', models.IntegerField(blank=True, null=True, verbose_name='舒张压标准值')),
                ('numberfield_diastolic_blood_pressure_up_limit', models.IntegerField(blank=True, default=89.0, null=True, verbose_name='舒张压上限')),
                ('numberfield_diastolic_blood_pressure_down_limit', models.IntegerField(blank=True, default=60.0, null=True, verbose_name='舒张压下限')),
            ],
            options={
                'verbose_name': '血压监测',
                'verbose_name_plural': '血压监测',
            },
        ),
        migrations.CreateModel(
            name='Doctor_login',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('characterfield_username', models.CharField(blank=True, max_length=255, null=True, verbose_name='用户名')),
                ('characterfield_password', models.CharField(blank=True, max_length=255, null=True, verbose_name='密码')),
                ('characterfield_service_role', models.CharField(blank=True, max_length=255, null=True, verbose_name='服务角色')),
            ],
            options={
                'verbose_name': '医生登陆',
                'verbose_name_plural': '医生登陆',
            },
        ),
        migrations.CreateModel(
            name='Doctor_registry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('characterfield_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='姓名')),
                ('characterfield_gender', models.CharField(blank=True, max_length=255, null=True, verbose_name='性别')),
                ('characterfield_age', models.CharField(blank=True, max_length=255, null=True, verbose_name='年龄')),
                ('characterfield_identification_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='身份证号码')),
                ('characterfield_contact_information', models.CharField(blank=True, max_length=255, null=True, verbose_name='联系电话')),
                ('characterfield_contact_address', models.CharField(blank=True, max_length=255, null=True, verbose_name='联系地址')),
                ('characterfield_practice_qualification', models.CharField(blank=True, max_length=255, null=True, verbose_name='执业资质')),
                ('characterfield_password_setting', models.CharField(blank=True, max_length=255, null=True, verbose_name='密码设置')),
                ('characterfield_confirm_password', models.CharField(blank=True, max_length=255, null=True, verbose_name='确认密码')),
                ('characterfield_expertise', models.CharField(blank=True, max_length=255, null=True, verbose_name='专长')),
                ('characterfield_practice_time', models.CharField(blank=True, max_length=255, null=True, verbose_name='执业时间')),
                ('datetimefield_date_of_birth', models.DateTimeField(blank=True, null=True, verbose_name='出生日期')),
                ('relatedfield_affiliation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='institutions_list_for_relatedfield_affiliation_doctor_registry', to='dictionaries.institutions_list', verbose_name='所属机构')),
                ('relatedfield_service_role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_role_for_relatedfield_service_role_doctor_registry', to='dictionaries.service_role', verbose_name='服务角色')),
            ],
            options={
                'verbose_name': '医生注册',
                'verbose_name_plural': '医生注册',
            },
        ),
        migrations.CreateModel(
            name='Dorsal_artery_pulsation_examination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relatedfield_left_foot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dorsal_artery_pulsation_for_relatedfield_left_foot_dorsal_artery_pulsation_examination', to='dictionaries.dorsal_artery_pulsation', verbose_name='左脚')),
                ('relatedfield_right_foot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dorsal_artery_pulsation_for_relatedfield_right_foot_dorsal_artery_pulsation_examination', to='dictionaries.dorsal_artery_pulsation', verbose_name='右脚')),
            ],
            options={
                'verbose_name': '足背动脉搏动检查',
                'verbose_name_plural': '足背动脉搏动检查',
            },
        ),
        migrations.CreateModel(
            name='Family_history_of_illness',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relatedfield_diseases', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='icpc5_evaluation_and_diagnoses_for_relatedfield_diseases_family_history_of_illness', to='icpc.icpc5_evaluation_and_diagnoses', verbose_name='病名')),
                ('relatedfield_family_relationship', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='family_relationship_for_relatedfield_family_relationship_family_history_of_illness', to='dictionaries.family_relationship', verbose_name='家庭成员关系')),
            ],
            options={
                'verbose_name': '家族病史',
                'verbose_name_plural': '家族病史',
            },
        ),
        migrations.CreateModel(
            name='Fundus_examination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relatedfield_fundus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='normality_for_relatedfield_fundus_fundus_examination', to='dictionaries.normality', verbose_name='眼底')),
            ],
            options={
                'verbose_name': '眼底检查',
                'verbose_name_plural': '眼底检查',
            },
        ),
        migrations.CreateModel(
            name='History_of_blood_transfusion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetimefield_date', models.DateTimeField(blank=True, null=True, verbose_name='日期')),
                ('numberfield_blood_transfusion', models.IntegerField(blank=True, null=True, verbose_name='输血量')),
                ('numberfield_blood_transfusion_standard_value', models.IntegerField(blank=True, null=True, verbose_name='输血量标准值')),
                ('numberfield_blood_transfusion_up_limit', models.IntegerField(blank=True, default=400.0, null=True, verbose_name='输血量上限')),
                ('numberfield_blood_transfusion_down_limit', models.IntegerField(blank=True, null=True, verbose_name='输血量下限')),
            ],
            options={
                'verbose_name': '输血史',
                'verbose_name_plural': '输血史',
            },
        ),
        migrations.CreateModel(
            name='History_of_infectious_diseases',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relatedfield_diseases', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='icpc5_evaluation_and_diagnoses_for_relatedfield_diseases_history_of_infectious_diseases', to='icpc.icpc5_evaluation_and_diagnoses', verbose_name='病名')),
                ('relatedfield_family_relationship', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='family_relationship_for_relatedfield_family_relationship_history_of_infectious_diseases', to='dictionaries.family_relationship', verbose_name='家庭成员关系')),
            ],
            options={
                'verbose_name': '遗传病史',
                'verbose_name_plural': '遗传病史',
            },
        ),
        migrations.CreateModel(
            name='History_of_surgery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetimefield_date', models.DateTimeField(blank=True, null=True, verbose_name='日期')),
                ('relatedfield_name_of_operation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='icpc7_treatments_for_relatedfield_name_of_operation_history_of_surgery', to='icpc.icpc7_treatments', verbose_name='手术名称')),
            ],
            options={
                'verbose_name': '手术史',
                'verbose_name_plural': '手术史',
            },
        ),
        migrations.CreateModel(
            name='History_of_trauma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetimefield_date', models.DateTimeField(blank=True, null=True, verbose_name='日期')),
                ('relatedfield_diseases_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='icpc5_evaluation_and_diagnoses_for_relatedfield_diseases_name_history_of_trauma', to='icpc.icpc5_evaluation_and_diagnoses', verbose_name='病名')),
            ],
            options={
                'verbose_name': '外伤史',
                'verbose_name_plural': '外伤史',
            },
        ),
        migrations.CreateModel(
            name='Lower_extremity_edema_examination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relatedfield_lower_extremity_edema', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='edema_for_relatedfield_lower_extremity_edema_lower_extremity_edema_examination', to='dictionaries.edema', verbose_name='下肢水肿')),
            ],
            options={
                'verbose_name': '下肢水肿检查',
                'verbose_name_plural': '下肢水肿检查',
            },
        ),
        migrations.CreateModel(
            name='Major_life_events',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetimefield_date', models.DateTimeField(blank=True, null=True, verbose_name='日期')),
                ('relatedfield_major_life', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='life_event_for_relatedfield_major_life_major_life_events', to='dictionaries.life_event', verbose_name='生活事件')),
            ],
            options={
                'verbose_name': '重大生活事件调查',
                'verbose_name_plural': '重大生活事件调查',
            },
        ),
        migrations.CreateModel(
            name='Medical_history',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetimefield_time_of_diagnosis', models.DateTimeField(blank=True, null=True, verbose_name='确诊时间')),
                ('relatedfield_disease_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='icpc5_evaluation_and_diagnoses_for_relatedfield_disease_name_medical_history', to='icpc.icpc5_evaluation_and_diagnoses', verbose_name='疾病名称')),
            ],
            options={
                'verbose_name': '疾病史',
                'verbose_name_plural': '疾病史',
            },
        ),
        migrations.CreateModel(
            name='Out_of_hospital_self_report_survey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('characterfield_supplementary_description_of_the_condition', models.CharField(blank=True, max_length=255, null=True, verbose_name='病情补充描述')),
                ('relatedfield_symptom_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='icpc3_symptoms_and_problems_for_relatedfield_symptom_list_out_of_hospital_self_report_survey', to='icpc.icpc3_symptoms_and_problems', verbose_name='症状')),
            ],
            options={
                'verbose_name': '院外症状自述调查',
                'verbose_name_plural': '院外症状自述调查',
            },
        ),
        migrations.CreateModel(
            name='Personal_adaptability_assessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('boolfield_do_you_feel_pressured_at_work', models.BooleanField(verbose_name='是否感觉到工作压力大')),
                ('boolfield_do_you_often_work_overtime', models.BooleanField(verbose_name='是否经常加班')),
                ('characterfield_working_hours_per_day', models.TextField(blank=True, max_length=255, null=True, verbose_name='每天工作及工作往返总时长')),
                ('relatedfield_are_you_satisfied_with_the_job_and_life', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='satisfaction_for_relatedfield_are_you_satisfied_with_the_job_and_life_personal_adaptability_assessment', to='dictionaries.satisfaction', verbose_name='对目前生活和工作满意吗')),
                ('relatedfield_are_you_satisfied_with_your_adaptability', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='satisfaction_for_relatedfield_are_you_satisfied_with_your_adaptability_personal_adaptability_assessment', to='dictionaries.satisfaction', verbose_name='对自己的适应能力满意吗')),
                ('relatedfield_can_you_get_encouragement_and_support_from_family_and_friends', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='frequency_for_relatedfield_can_you_get_encouragement_and_support_from_family_and_friends_personal_adaptability_assessment', to='dictionaries.frequency', verbose_name='是否能得到家人朋友的鼓励和支持')),
            ],
            options={
                'verbose_name': '个人适应能力评估',
                'verbose_name_plural': '个人适应能力评估',
            },
        ),
        migrations.CreateModel(
            name='Personal_comprehensive_psychological_quality_survey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('boolfield_is_life_fun', models.BooleanField(verbose_name='您觉得生活是否有乐趣吗')),
                ('relatedfield_personality_tendency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='character_for_relatedfield_personality_tendency_personal_comprehensive_psychological_quality_survey', to='dictionaries.character', verbose_name='性格倾向')),
            ],
            options={
                'verbose_name': '个人心理综合素质调查',
                'verbose_name_plural': '个人心理综合素质调查',
            },
        ),
        migrations.CreateModel(
            name='Personal_health_assessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('boolfield_is_it_easy_to_get_sick', models.BooleanField(verbose_name='是否比别人容易生病')),
                ('relatedfield_compared_to_last_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comparative_expression_for_relatedfield_compared_to_last_year_personal_health_assessment', to='dictionaries.comparative_expression', verbose_name='较之过去一年状态如何')),
                ('relatedfield_exercise_time', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exercise_time_for_relatedfield_exercise_time_personal_health_assessment', to='dictionaries.exercise_time', verbose_name='运动时长')),
                ('relatedfield_have_any_recent_symptoms_of_physical_discomfort', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='icpc3_symptoms_and_problems_for_relatedfield_have_any_recent_symptoms_of_physical_discomfort_personal_health_assessment', to='icpc.icpc3_symptoms_and_problems', verbose_name='近来有无身体不适症状')),
                ('relatedfield_own_health', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='state_degree_for_relatedfield_own_health_personal_health_assessment', to='dictionaries.state_degree', verbose_name='觉得自身健康状况如何')),
                ('relatedfield_sports_preference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sports_preference_for_relatedfield_sports_preference_personal_health_assessment', to='dictionaries.sports_preference', verbose_name='运动偏好')),
            ],
            options={
                'verbose_name': '个人身体健康评估',
                'verbose_name_plural': '个人身体健康评估',
            },
        ),
        migrations.CreateModel(
            name='Personal_health_behavior_survey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('boolfield_is_the_diet_regular', models.BooleanField(verbose_name='饮食是否规律')),
                ('boolfield_is_the_diet_proportion_healthy', models.BooleanField(verbose_name='饮食比例是否健康')),
                ('boolfield_whether_the_bowel_movements_are_regular', models.BooleanField(verbose_name='大便是否规律')),
                ('boolfield_whether_to_drink_alcohol', models.BooleanField(verbose_name='是否饮酒')),
                ('boolfield_do_you_smoke', models.BooleanField(verbose_name='是否吸烟')),
                ('characterfield_average_sleep_duration', models.CharField(blank=True, max_length=255, null=True, verbose_name='平均睡眠时长')),
                ('boolfield_insomnia', models.BooleanField(verbose_name='是否有失眠情况')),
                ('characterfield_duration_of_insomnia', models.CharField(blank=True, max_length=255, null=True, verbose_name='持续失眠时间')),
                ('relatedfield_drinking_frequency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='frequency_for_relatedfield_drinking_frequency_personal_health_behavior_survey', to='dictionaries.frequency', verbose_name='饮酒频次')),
                ('relatedfield_smoking_frequency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='frequency_for_relatedfield_smoking_frequency_personal_health_behavior_survey', to='dictionaries.frequency', verbose_name='吸烟频次')),
            ],
            options={
                'verbose_name': '个人健康行为调查',
                'verbose_name_plural': '个人健康行为调查',
            },
        ),
        migrations.CreateModel(
            name='Physical_examination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numberfield_hight', models.IntegerField(blank=True, null=True, verbose_name='身高')),
                ('numberfield_hight_standard_value', models.IntegerField(blank=True, null=True, verbose_name='身高标准值')),
                ('numberfield_hight_up_limit', models.IntegerField(blank=True, null=True, verbose_name='身高上限')),
                ('numberfield_hight_down_limit', models.IntegerField(blank=True, null=True, verbose_name='身高下限')),
                ('numberfield_weight', models.IntegerField(blank=True, null=True, verbose_name='体重')),
                ('numberfield_weight_standard_value', models.IntegerField(blank=True, null=True, verbose_name='体重标准值')),
                ('numberfield_weight_up_limit', models.IntegerField(blank=True, null=True, verbose_name='体重上限')),
                ('numberfield_weight_down_limit', models.IntegerField(blank=True, null=True, verbose_name='体重下限')),
                ('numberfield_body_mass_index', models.IntegerField(blank=True, null=True, verbose_name='体质指数')),
                ('numberfield_body_mass_index_standard_value', models.IntegerField(blank=True, null=True, verbose_name='体质指数标准值')),
                ('numberfield_body_mass_index_up_limit', models.IntegerField(blank=True, default=23.9, null=True, verbose_name='体质指数上限')),
                ('numberfield_body_mass_index_down_limit', models.IntegerField(blank=True, default=18.5, null=True, verbose_name='体质指数下限')),
            ],
            options={
                'verbose_name': '体格检查',
                'verbose_name_plural': '体格检查',
            },
        ),
        migrations.CreateModel(
            name='Physical_examination_athletic_ability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relatedfield_athletic_ability', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exercise_time_for_relatedfield_athletic_ability_physical_examination_athletic_ability', to='dictionaries.exercise_time', verbose_name='运动能力')),
            ],
            options={
                'verbose_name': '查体运动能力',
                'verbose_name_plural': '查体运动能力',
            },
        ),
        migrations.CreateModel(
            name='Physical_examination_hearing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relatedfield_left_ear_hearing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hearing_for_relatedfield_left_ear_hearing_physical_examination_hearing', to='dictionaries.hearing', verbose_name='左耳听力')),
                ('relatedfield_right_ear_hearing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hearing_for_relatedfield_right_ear_hearing_physical_examination_hearing', to='dictionaries.hearing', verbose_name='右耳听力')),
            ],
            options={
                'verbose_name': '查体听力',
                'verbose_name_plural': '查体听力',
            },
        ),
        migrations.CreateModel(
            name='Physical_examination_oral_cavity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relatedfield_dentition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dentition_for_relatedfield_dentition_physical_examination_oral_cavity', to='dictionaries.dentition', verbose_name='齿列')),
                ('relatedfield_lips', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lips_for_relatedfield_lips_physical_examination_oral_cavity', to='dictionaries.lips', verbose_name='口唇')),
                ('relatedfield_pharynx', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pharynx_for_relatedfield_pharynx_physical_examination_oral_cavity', to='dictionaries.pharynx', verbose_name='咽部')),
            ],
            options={
                'verbose_name': '查体口腔',
                'verbose_name_plural': '查体口腔',
            },
        ),
        migrations.CreateModel(
            name='Physical_examination_vision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('characterfield_left_eye_vision', models.CharField(blank=True, max_length=255, null=True, verbose_name='左眼视力')),
                ('characterfield_right_eye_vision', models.CharField(blank=True, max_length=255, null=True, verbose_name='右眼视力')),
            ],
            options={
                'verbose_name': '查体视力',
                'verbose_name_plural': '查体视力',
            },
        ),
        migrations.CreateModel(
            name='Social_environment_assessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('boolfield_whether_the_living_environment_is_clean_and_hygienic', models.BooleanField(verbose_name='居住环境是否干净卫生')),
                ('boolfield_is_drinking_water_healthy', models.BooleanField(verbose_name='饮水是否健康')),
                ('boolfield_whether_there_is_noise_pollution', models.BooleanField(verbose_name='是否有噪声污染')),
                ('boolfield_whether_there_is_air_pollution', models.BooleanField(verbose_name='是否有空气污染')),
                ('boolfield_whether_there_is_other_pollution', models.BooleanField(verbose_name='是否有其他污染')),
                ('relatedfield_is_the_living_environment_satisfactory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='satisfaction_for_relatedfield_is_the_living_environment_satisfactory_social_environment_assessment', to='dictionaries.satisfaction', verbose_name='您对居住环境满意吗')),
                ('relatedfield_is_the_transportation_convenient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='convenience_for_relatedfield_is_the_transportation_convenient_social_environment_assessment', to='dictionaries.convenience', verbose_name='您所在的社区交通方便吗')),
            ],
            options={
                'verbose_name': '社会环境评估',
                'verbose_name_plural': '社会环境评估',
            },
        ),
        migrations.CreateModel(
            name='User_login',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('characterfield_username', models.CharField(blank=True, max_length=255, null=True, verbose_name='用户名')),
                ('characterfield_password', models.CharField(blank=True, max_length=255, null=True, verbose_name='密码')),
            ],
            options={
                'verbose_name': '用户登录',
                'verbose_name_plural': '用户登录',
            },
        ),
        migrations.CreateModel(
            name='User_registry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('characterfield_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='姓名')),
                ('characterfield_gender', models.CharField(blank=True, max_length=255, null=True, verbose_name='性别')),
                ('characterfield_age', models.CharField(blank=True, max_length=255, null=True, verbose_name='年龄')),
                ('characterfield_identification_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='身份证号码')),
                ('characterfield_contact_information', models.CharField(blank=True, max_length=255, null=True, verbose_name='联系电话')),
                ('characterfield_contact_address', models.CharField(blank=True, max_length=255, null=True, verbose_name='联系地址')),
                ('characterfield_password_setting', models.CharField(blank=True, max_length=255, null=True, verbose_name='密码设置')),
                ('characterfield_confirm_password', models.CharField(blank=True, max_length=255, null=True, verbose_name='确认密码')),
                ('datetimefield_date_of_birth', models.DateTimeField(blank=True, null=True, verbose_name='出生日期')),
            ],
            options={
                'verbose_name': '用户注册表',
                'verbose_name_plural': '用户注册表',
            },
        ),
        migrations.CreateModel(
            name='Vital_signs_check',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numberfield_body_temperature', models.IntegerField(blank=True, null=True, verbose_name='体温')),
                ('numberfield_body_temperature_standard_value', models.IntegerField(blank=True, null=True, verbose_name='体温标准值')),
                ('numberfield_body_temperature_up_limit', models.IntegerField(blank=True, default=37.4, null=True, verbose_name='体温上限')),
                ('numberfield_body_temperature_down_limit', models.IntegerField(blank=True, default=36.0, null=True, verbose_name='体温下限')),
                ('numberfield_pulse', models.IntegerField(blank=True, null=True, verbose_name='脉搏')),
                ('numberfield_pulse_standard_value', models.IntegerField(blank=True, null=True, verbose_name='脉搏标准值')),
                ('numberfield_pulse_up_limit', models.IntegerField(blank=True, default=100.0, null=True, verbose_name='脉搏上限')),
                ('numberfield_pulse_down_limit', models.IntegerField(blank=True, default=60.0, null=True, verbose_name='脉搏下限')),
                ('numberfield_respiratory_rate', models.IntegerField(blank=True, null=True, verbose_name='呼吸频率')),
                ('numberfield_respiratory_rate_standard_value', models.IntegerField(blank=True, null=True, verbose_name='呼吸频率标准值')),
                ('numberfield_respiratory_rate_up_limit', models.IntegerField(blank=True, default=20.0, null=True, verbose_name='呼吸频率上限')),
                ('numberfield_respiratory_rate_down_limit', models.IntegerField(blank=True, default=10.0, null=True, verbose_name='呼吸频率下限')),
            ],
            options={
                'verbose_name': '生命体征检查',
                'verbose_name_plural': '生命体征检查',
            },
        ),
        migrations.RemoveField(
            model_name='ji_bing_shi_1638359530',
            name='zhen_duan_1638359350',
        ),
        migrations.DeleteModel(
            name='Ge_ren_ji_ben_xin_xi_1638359483',
        ),
        migrations.DeleteModel(
            name='Ji_bing_shi_1638359530',
        ),
    ]
